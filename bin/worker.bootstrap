#!/usr/bin/env sh
# SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-or-later
# SPDX-FileCopyrightText: Contributors To The `net.splitcells.*` Projects

# Sets up the the repos and software environment at the current shell.
set -e
set -x
# Configure
  if [ -z "$NET_SPLITCELLS_NETWORK_WORKER_NAME" ]; then
    export NET_SPLITCELLS_NETWORK_WORKER_NAME="net.splitcells.network.worker"
  fi
# Ensure, that SSH host verification works.
  mkdir -p ~/.ssh/
  ssh-keygen -R codeberg.org
  ssh-keyscan codeberg.org >> ~/.ssh/known_hosts
# Bootstrap minimal required repos.
  mkdir -p ~/.local/state/$NET_SPLITCELLS_NETWORK_WORKER_NAME/repos/public
  cd ~/.local/state/$NET_SPLITCELLS_NETWORK_WORKER_NAME/repos/public
  test -d net.splitcells.network || git clone --depth 1 ssh://git@codeberg.org/splitcells-net/net.splitcells.network.git
  test -d net.splitcells.network.hub || git clone --depth 1 ssh://git@codeberg.org/splitcells-net/net.splitcells.network.hub.git
# Pull all repos.
  cd ~/.local/state/$NET_SPLITCELLS_NETWORK_WORKER_NAME/repos/public/net.splitcells.network
  . bin/worker.bootstrap.repos
# Restart bootstrapping.
  # This split/duplication ensures, that updates of `worker.bootstrap.core`,
  # that are pulled during the bootstrapping apply immediately and not starting with subsequent runs.
  cd ~/.local/state/$NET_SPLITCELLS_NETWORK_WORKER_NAME/repos/public/net.splitcells.network
  . bin/worker.bootstrap.repos
  . bin/worker.bootstrap.shell
echo Worker was successfully bootstrapped. # This is used, in order to check, if `user.bin.configure` was executed successfully.