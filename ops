{"version":1,"ops":[{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1647986546,"metadata":{"github-id":"UCE_lAHOFCNQW85Cba1rzit_tDI"},"target":"aaf6570107c6c86845280697e0aeff7d9b2ae96afd3a3dfcca69cc57c25f4a69","message":"* [ ] Log test execution runtimes.\n   * [ ] Document new Logger.\n   * [ ] Document new Builder.\n* [ ] Create status document, that checks if all tests were recently executed via the logged test runtimes.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1648415011,"metadata":{"github-id":"UCE_lAHOFCNQW85Cba1rziuzZsc"},"target":"aaf6570107c6c86845280697e0aeff7d9b2ae96afd3a3dfcca69cc57c25f4a69","message":"* [ ] Log test execution runtimes.\n   * [x] Document new Logger.\n   * [ ] Document new Builder.\n* [ ] Create status document, that checks if all tests were recently executed via the logged test runtimes.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1648415073,"metadata":{"github-id":"UCE_lAHOFCNQW85Cba1rziuzZ2s"},"target":"aaf6570107c6c86845280697e0aeff7d9b2ae96afd3a3dfcca69cc57c25f4a69","message":"* [ ] Log test execution runtimes.\n   * [x] Document new Logger.\n   * [x] Document new Builder.\n* [ ] Create status document, that checks if all tests were recently executed via the logged test runtimes.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1648415075,"metadata":{"github-id":"UCE_lAHOFCNQW85Cba1rziuzZ3I"},"target":"aaf6570107c6c86845280697e0aeff7d9b2ae96afd3a3dfcca69cc57c25f4a69","message":"* [x] Log test execution runtimes.\n   * [x] Document new Logger.\n   * [x] Document new Builder.\n* [ ] Create status document, that checks if all tests were recently executed via the logged test runtimes.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1648415252,"metadata":{"github-id":"UCE_lAHOFCNQW85Cba1rziuzaRU"},"target":"aaf6570107c6c86845280697e0aeff7d9b2ae96afd3a3dfcca69cc57c25f4a69","message":"* [x] Log test execution runtimes.\n   * [x] Document new Logger.\n   * [x] Document new Builder.\n* [ ] Create status document, that checks if all tests were recently executed via the logged test runtimes and all executors.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1648416132,"metadata":{"github-id":"UCE_lAHOFCNQW85Cba1rziuzc6A"},"target":"aaf6570107c6c86845280697e0aeff7d9b2ae96afd3a3dfcca69cc57c25f4a69","message":"* [x] Log test execution runtimes.\n   * [x] Document new Logger.\n   * [x] Document new Builder.\n* [ ] Test and publish results:\n   * [ ] RISC-V\n   * [ ] ARM\n* [ ] Create status document, that checks if all tests were recently executed via the logged test runtimes and all executors.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1649022448,"metadata":{"github-id":"UCE_lAHOFCNQW85Cba1rziwGYXU"},"target":"aaf6570107c6c86845280697e0aeff7d9b2ae96afd3a3dfcca69cc57c25f4a69","message":"* [x] Log test execution runtimes.\n   * [x] Document new Logger.\n   * [x] Document new Builder.\n* [ ] Test and publish results via `./bin/deploy.build`:\n   * [ ] RISC-V\n   * [ ] ARM\n* [ ] Create status document, that checks if all tests were recently executed via the logged test runtimes and all executors.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1649025667,"metadata":{"github-id":"UCE_lAHOFCNQW85Cba1rziwGhi4"},"target":"aaf6570107c6c86845280697e0aeff7d9b2ae96afd3a3dfcca69cc57c25f4a69","message":"* [x] Log test execution runtimes.\n   * [x] Document new Logger.\n   * [x] Document new Builder.\n* [ ] Test and publish results via `./bin/deploy.build`:\n   * [ ] RISC-V\n   * [ ] ARM\n* [ ] Create status document, that checks if all tests were recently executed via the logged test runtimes and all executors.\n* [ ] Execute this semiautomatically on private infrastructure.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1649028522,"metadata":{"github-id":"UCE_lAHOFCNQW85Cba1rziwGpnQ"},"target":"aaf6570107c6c86845280697e0aeff7d9b2ae96afd3a3dfcca69cc57c25f4a69","message":"* [x] Log test execution runtimes.\n   * [x] Document new Logger.\n   * [x] Document new Builder.\n* [ ] Test and publish results via `./bin/deploy.build`:\n   * [ ] RISC-V\n   * [ ] ARM\n* [ ] Create status document, that checks if all tests were recently executed via the logged test runtimes and all executors.\n* [ ] Execute this semiautomatically on private infrastructure.\n* [ ] Test if tests are executed and create some kind of warning, if this is not the case.\n* [ ] Test if number of warnings have a downward trend.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1650151969,"metadata":{"github-id":"UCE_lAHOFCNQW85Cba1rziymAtA"},"target":"aaf6570107c6c86845280697e0aeff7d9b2ae96afd3a3dfcca69cc57c25f4a69","message":"* [x] Log test execution runtimes.\n   * [x] Document new Logger.\n   * [x] Document new Builder.\n* [ ] Test and publish results via `./bin/deploy.build`:\n   * [ ] RISC-V\n   * [ ] ARM\n* [ ] Create status document, that checks if all tests were recently executed via the logged test runtimes and all executors.\n* [ ] Test if tests are executed and create some kind of warning, if this is not the case.\n   * [ ] Create execution log for network logger for each executor, as is done for logging test execution times.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1650151980,"metadata":{"github-id":"UCE_lAHOFCNQW85Cba1rziymAt4"},"target":"aaf6570107c6c86845280697e0aeff7d9b2ae96afd3a3dfcca69cc57c25f4a69","message":"* [x] Log test execution runtimes.\n   * [x] Document new Logger.\n   * [x] Document new Builder.\n* [ ] Test and publish results via `./bin/deploy.build`:\n   * [x] RISC-V\n   * [ ] ARM\n* [ ] Create status document, that checks if all tests were recently executed via the logged test runtimes and all executors.\n* [ ] Test if tests are executed and create some kind of warning, if this is not the case.\n   * [ ] Create execution log for network logger for each executor, as is done for logging test execution times.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1650152105,"metadata":{"github-id":"UCE_lAHOFCNQW85Cba1rziymA7A"},"target":"aaf6570107c6c86845280697e0aeff7d9b2ae96afd3a3dfcca69cc57c25f4a69","message":"* [x] Log test execution runtimes.\n   * [x] Document new Logger.\n   * [x] Document new Builder.\n* [ ] Test and publish results via `./bin/deploy.build`:\n   * [x] RISC-V\n   * [ ] ARM\n* [ ] Create status document, that checks if all tests were recently executed via the logged test runtimes and all executors.\n* [ ] Test if tests are executed and create some kind of warning, if this is not the case.\n   * [x] Create execution log for network logger for each executor, as is done for logging test execution times.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1650231268,"metadata":{"github-id":"UCE_lAHOFCNQW85Cba1rziypY9Q"},"target":"aaf6570107c6c86845280697e0aeff7d9b2ae96afd3a3dfcca69cc57c25f4a69","message":"* [x] Log test execution runtimes.\n   * [x] Document new Logger.\n   * [x] Document new Builder.\n* [ ] Test and publish results via `./bin/deploy.build`:\n   * [x] RISC-V\n   * [ ] ARM\n* [x] Create status document, that checks if all tests were recently executed via the logged test runtimes and all executors.\n* [ ] Test if tests are executed and create some kind of warning, if this is not the case.\n   * [x] Create execution log for network logger for each executor, as is done for logging test execution times.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1650234016,"metadata":{"github-id":"UCE_lAHOFCNQW85Cba1rziypgUo"},"target":"aaf6570107c6c86845280697e0aeff7d9b2ae96afd3a3dfcca69cc57c25f4a69","message":"* [x] Log test execution runtimes.\n   * [x] Document new Logger.\n   * [x] Document new Builder.\n* [ ] Test and publish results via `./bin/deploy.build`:\n   * [x] RISC-V\n   * [ ] ARM\n* [x] Create status document, that checks if all tests were recently executed via the logged test runtimes and all executors.\n* [x] Test if tests are executed and create some kind of warning, if this is not the case.\n   * [x] Create execution log for network logger for each executor, as is done for logging test execution times.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1650235754,"metadata":{"github-id":"UCE_lAHOFCNQW85Cba1rziypks8"},"target":"aaf6570107c6c86845280697e0aeff7d9b2ae96afd3a3dfcca69cc57c25f4a69","message":"* [x] Log test execution runtimes.\n   * [x] Document new Logger.\n   * [x] Document new Builder.\n* [ ] Test and publish results via `./bin/deploy.build`:\n   * [x] RISC-V\n   * [ ] ARM\n* [x] Create status document, that checks if all tests were recently executed via the logged test runtimes and all executors.\n* [x] Test if tests are executed and create some kind of warning, if this is not the case.\n   * [x] Create execution log for network logger for each executor, as is done for logging test execution times.\n* [ ] Show tasks that were executed often enough.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1650235816,"metadata":{"github-id":"UCE_lAHOFCNQW85Cba1rziypk44"},"target":"aaf6570107c6c86845280697e0aeff7d9b2ae96afd3a3dfcca69cc57c25f4a69","message":"* [x] Log test execution runtimes.\n   * [x] Document new Logger.\n   * [x] Document new Builder.\n* [ ] Test and publish results via `./bin/deploy.build`:\n   * [x] RISC-V\n   * [ ] ARM\n* [x] Create status document, that checks if all tests were recently executed via the logged test runtimes and all executors.\n* [x] Test if tests are executed and create some kind of warning, if this is not the case.\n   * [x] Create execution log for network logger for each executor, as is done for logging test execution times.\n* [ ] Show tasks that were executed often enough. Otherwise, there is no list of all tasks, which can be hurtful in case some tasks are missing.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1650235836,"metadata":{"github-id":"UCE_lAHOFCNQW85Cba1rziypk9o"},"target":"aaf6570107c6c86845280697e0aeff7d9b2ae96afd3a3dfcca69cc57c25f4a69","message":"* [x] Log test execution runtimes.\n   * [x] Document new Logger.\n   * [x] Document new Builder.\n* [ ] Test and publish results via `./bin/deploy.build`:\n   * [x] RISC-V\n   * [ ] ARM\n* [x] Create status document, that checks if all tests were recently executed via the logged test runtimes and all executors.\n* [x] Test if tests are executed and create some kind of warning, if this is not the case.\n   * [x] Create execution log for network logger for each executor, as is done for logging test execution times.\n* [ ] Show tasks that were executed often enough. Otherwise, there is no list of all tasks, which can be hurtful in case some tasks are missing entirely in the network log.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1650843153,"metadata":{"github-id":"UCE_lAHOFCNQW85Cba1rziz6ETw"},"target":"aaf6570107c6c86845280697e0aeff7d9b2ae96afd3a3dfcca69cc57c25f4a69","message":"* [x] Log test execution runtimes.\n   * [x] Document new Logger.\n   * [x] Document new Builder.\n* [ ] Test and publish results via `./bin/deploy.build`:\n   * [x] RISC-V\n   * [ ] ARM\n* [x] Create status document, that checks if all tests were recently executed via the logged test runtimes and all executors.\n* [x] Test if tests are executed and create some kind of warning, if this is not the case.\n   * [x] Create execution log for network logger for each executor, as is done for logging test execution times.\n* [x] Show tasks that were executed often enough. Otherwise, there is no list of all tasks, which can be hurtful in case some tasks are missing entirely in the network log.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1653258531,"metadata":{"github-id":"UCE_lAHOFCNQW85Cba1rzi5Oi5Y"},"target":"aaf6570107c6c86845280697e0aeff7d9b2ae96afd3a3dfcca69cc57c25f4a69","message":"* [x] Log test execution runtimes.\n   * [x] Document new Logger.\n   * [x] Document new Builder.\n* [ ] Test and publish results via `./bin/deploy.build`:\n   * [x] RISC-V\n   * [ ] ARM\n* [x] Create status document, that checks if all tests were recently executed via the logged test runtimes and all executors.\n* [x] Test if tests are executed and create some kind of warning, if this is not the case.\n   * [x] Create execution log for network logger for each executor, as is done for logging test execution times.\n* [x] Show tasks that were executed often enough. Otherwise, there is no list of all tasks, which can be hurtful in case some tasks are missing entirely in the network log.\n* [ ] Implement and use `net.splitcells.network.deploy.build.at` in private repo.\n* [ ] Generalize `net.splitcells.network.deploy.build.at`.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1653258921,"metadata":{"github-id":"UCE_lAHOFCNQW85Cba1rzi5OkYw"},"target":"aaf6570107c6c86845280697e0aeff7d9b2ae96afd3a3dfcca69cc57c25f4a69","message":"* [x] Log test execution runtimes.\n   * [x] Document new Logger.\n   * [x] Document new Builder.\n* [ ] Test and publish results via `./bin/deploy.build`:\n   * [x] RISC-V\n   * [ ] ARM\n* [x] Create status document, that checks if all tests were recently executed via the logged test runtimes and all executors.\n* [x] Test if tests are executed and create some kind of warning, if this is not the case.\n   * [x] Create execution log for network logger for each executor, as is done for logging test execution times.\n* [x] Show tasks that were executed often enough. Otherwise, there is no list of all tasks, which can be hurtful in case some tasks are missing entirely in the network log.\n* [ ] Implement and use `net.splitcells.network.deploy.build.at` in private repo.\n* [] Consider https://www.pygit2.org/ as a alternative permissive implementation.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1653258927,"metadata":{"github-id":"UCE_lAHOFCNQW85Cba1rzi5Okas"},"target":"aaf6570107c6c86845280697e0aeff7d9b2ae96afd3a3dfcca69cc57c25f4a69","message":"* [x] Log test execution runtimes.\n   * [x] Document new Logger.\n   * [x] Document new Builder.\n* [ ] Test and publish results via `./bin/deploy.build`:\n   * [x] RISC-V\n   * [ ] ARM\n* [x] Create status document, that checks if all tests were recently executed via the logged test runtimes and all executors.\n* [x] Test if tests are executed and create some kind of warning, if this is not the case.\n   * [x] Create execution log for network logger for each executor, as is done for logging test execution times.\n* [x] Show tasks that were executed often enough. Otherwise, there is no list of all tasks, which can be hurtful in case some tasks are missing entirely in the network log.\n* [ ] Implement and use `net.splitcells.network.deploy.build.at` in private repo.\n* [ ] Consider https://www.pygit2.org/ as a alternative permissive implementation.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1653259349,"metadata":{"github-id":"UCE_lAHOFCNQW85Cba1rzi5Ol2k"},"target":"aaf6570107c6c86845280697e0aeff7d9b2ae96afd3a3dfcca69cc57c25f4a69","message":"* [x] Log test execution runtimes.\n   * [x] Document new Logger.\n   * [x] Document new Builder.\n* [ ] Test and publish results via `./bin/deploy.build`:\n   * [x] RISC-V\n   * [ ] ARM\n* [x] Create status document, that checks if all tests were recently executed via the logged test runtimes and all executors.\n* [x] Test if tests are executed and create some kind of warning, if this is not the case.\n   * [x] Create execution log for network logger for each executor, as is done for logging test execution times.\n* [x] Show tasks that were executed often enough. Otherwise, there is no list of all tasks, which can be hurtful in case some tasks are missing entirely in the network log.\n* [ ] Implement and use `net.splitcells.network.deploy.build.at` in private repo.\n   * [ ] Do not deploy build if host not available and create simple warning instead.\n* [ ] Consider https://www.pygit2.org/ as an alternative permissive implementation.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1653259507,"metadata":{"github-id":"UCE_lAHOFCNQW85Cba1rzi5OmZg"},"target":"aaf6570107c6c86845280697e0aeff7d9b2ae96afd3a3dfcca69cc57c25f4a69","message":"* [x] Log test execution runtimes.\n   * [x] Document new Logger.\n   * [x] Document new Builder.\n* [ ] Test and publish results via `./bin/deploy.build`:\n   * [x] RISC-V\n   * [ ] ARM\n* [x] Create status document, that checks if all tests were recently executed via the logged test runtimes and all executors.\n* [x] Test if tests are executed and create some kind of warning, if this is not the case.\n   * [x] Create execution log for network logger for each executor, as is done for logging test execution times.\n* [x] Show tasks that were executed often enough. Otherwise, there is no list of all tasks, which can be hurtful in case some tasks are missing entirely in the network log.\n* [ ] Implement and use `net.splitcells.network.deploy.build.at` in private repo.\n* [ ] Create command to execute list of host.\n   * [ ] Do not deploy build if target host not available and create simple warning instead.\n   * [ ] Do not deploy build if target host is itself.\n* [ ] Consider https://www.pygit2.org/ as an alternative permissive implementation.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1653773409,"metadata":{"github-id":"UCE_lAHOFCNQW85Cba1rzi6jDQE"},"target":"aaf6570107c6c86845280697e0aeff7d9b2ae96afd3a3dfcca69cc57c25f4a69","message":"* [x] Log test execution runtimes.\n   * [x] Document new Logger.\n   * [x] Document new Builder.\n* [ ] Test and publish results via `./bin/deploy.build`:\n   * [x] RISC-V\n   * [ ] ARM\n* [x] Create status document, that checks if all tests were recently executed via the logged test runtimes and all executors.\n* [x] Test if tests are executed and create some kind of warning, if this is not the case.\n   * [x] Create execution log for network logger for each executor, as is done for logging test execution times.\n* [x] Show tasks that were executed often enough. Otherwise, there is no list of all tasks, which can be hurtful in case some tasks are missing entirely in the network log.\n* [ ] Implement and use `net.splitcells.network.deploy.build.at` in private repo.\n* [ ] Create command to execute list of host.\n   * [ ] Do not deploy build if target host not available and create simple warning instead.\n   * [ ] Do not deploy build if target host is itself.\n* [ ] Consider https://www.pygit2.org/ as an alternative permissive implementation.\n* [ ] Document, what needs to be done on network server.\n   * [ ] Create repos.\n   * [ ] Install OSSI.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1653773976,"metadata":{"github-id":"UCE_lAHOFCNQW85Cba1rzi6jEnA"},"target":"aaf6570107c6c86845280697e0aeff7d9b2ae96afd3a3dfcca69cc57c25f4a69","message":"* [x] Log test execution runtimes.\n   * [x] Document new Logger.\n   * [x] Document new Builder.\n* [ ] Test and publish results via `./bin/deploy.build`:\n   * [x] RISC-V\n   * [ ] ARM\n* [x] Create status document, that checks if all tests were recently executed via the logged test runtimes and all executors.\n* [x] Test if tests are executed and create some kind of warning, if this is not the case.\n   * [x] Create execution log for network logger for each executor, as is done for logging test execution times.\n* [x] Show tasks that were executed often enough. Otherwise, there is no list of all tasks, which can be hurtful in case some tasks are missing entirely in the network log.\n* [ ] Implement and use `net.splitcells.network.deploy.build.at` in private repo.\n* [ ] Create command to execute list of host.\n   * [ ] Do not deploy build if target host not available and create simple warning instead.\n   * [ ] Do not deploy build if target host is itself.\n* [ ] Consider https://www.pygit2.org/ as an alternative permissive implementation.\n* [ ] Document, what needs to be done on network server.\n   * [ ] Create repos.\n   * [ ] Install OSSI.\n   * [ ] `git config --global user.email \u0026\u0026 git config --global user.name`","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1653774430,"metadata":{"github-id":"UCE_lAHOFCNQW85Cba1rzi6jFmU"},"target":"aaf6570107c6c86845280697e0aeff7d9b2ae96afd3a3dfcca69cc57c25f4a69","message":"* [x] Log test execution runtimes.\n   * [x] Document new Logger.\n   * [x] Document new Builder.\n* [ ] Test and publish results via `./bin/deploy.build`:\n   * [x] RISC-V\n   * [ ] ARM\n* [x] Create status document, that checks if all tests were recently executed via the logged test runtimes and all executors.\n* [x] Test if tests are executed and create some kind of warning, if this is not the case.\n   * [x] Create execution log for network logger for each executor, as is done for logging test execution times.\n* [x] Show tasks that were executed often enough. Otherwise, there is no list of all tasks, which can be hurtful in case some tasks are missing entirely in the network log.\n* [ ] Implement and use `net.splitcells.network.deploy.build.at` in private repo.\n* [ ] Create command to execute list of host.\n   * [ ] Do not deploy build if target host not available and create simple warning instead.\n   * [ ] Do not deploy build if target host is itself.\n* [ ] Consider https://www.pygit2.org/ as an alternative permissive implementation.\n* [ ] Document, what needs to be done on network server.\n   * [ ] Create repos.\n   * [ ] Install OSSI.\n   * [ ] `git config --global user.email \u0026\u0026 git config --global user.name`\n   * [ ] How to upload data.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1653774442,"metadata":{"github-id":"UCE_lAHOFCNQW85Cba1rzi6jFnM"},"target":"aaf6570107c6c86845280697e0aeff7d9b2ae96afd3a3dfcca69cc57c25f4a69","message":"* [x] Log test execution runtimes.\n   * [x] Document new Logger.\n   * [x] Document new Builder.\n* [ ] Test and publish results via `./bin/deploy.build`:\n   * [x] RISC-V\n   * [ ] ARM\n* [x] Create status document, that checks if all tests were recently executed via the logged test runtimes and all executors.\n* [x] Test if tests are executed and create some kind of warning, if this is not the case.\n   * [x] Create execution log for network logger for each executor, as is done for logging test execution times.\n* [x] Show tasks that were executed often enough. Otherwise, there is no list of all tasks, which can be hurtful in case some tasks are missing entirely in the network log.\n* [ ] Implement and use `net.splitcells.network.deploy.build.at` in private repo.\n* [ ] Create command to execute list of host.\n   * [ ] Do not deploy build if target host not available and create simple warning instead.\n   * [ ] Do not deploy build if target host is itself.\n* [ ] Consider https://www.pygit2.org/ as an alternative permissive implementation.\n* [ ] Document, what needs to be done on network server.\n   * [ ] Create repos. How to upload these?\n   * [ ] Install OSSI.\n   * [ ] `git config --global user.email \u0026\u0026 git config --global user.name`","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1653774604,"metadata":{"github-id":"UCE_lAHOFCNQW85Cba1rzi6jF7o"},"target":"aaf6570107c6c86845280697e0aeff7d9b2ae96afd3a3dfcca69cc57c25f4a69","message":"* [x] Log test execution runtimes.\n   * [x] Document new Logger.\n   * [x] Document new Builder.\n* [ ] Test and publish results via `./bin/deploy.build`:\n   * [x] RISC-V\n   * [ ] ARM\n* [x] Create status document, that checks if all tests were recently executed via the logged test runtimes and all executors.\n* [x] Test if tests are executed and create some kind of warning, if this is not the case.\n   * [x] Create execution log for network logger for each executor, as is done for logging test execution times.\n* [x] Show tasks that were executed often enough. Otherwise, there is no list of all tasks, which can be hurtful in case some tasks are missing entirely in the network log.\n* [ ] Implement and use `net.splitcells.network.deploy.build.at` in private repo.\n* [ ] Create command to execute list of host.\n   * [ ] Do not deploy build if target host not available and create simple warning instead.\n   * [ ] Do not deploy build if target host is itself.\n* [ ] Consider https://www.pygit2.org/ as an alternative permissive implementation.\n* [ ] Document, what needs to be done on network server.\n   * [ ] Create repos. Upload via ssh mounts.\n   * [ ] Install OSSI.\n   * [ ] `git config --global user.email \u0026\u0026 git config --global user.name`","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1653774847,"metadata":{"github-id":"UCE_lAHOFCNQW85Cba1rzi6jGkk"},"target":"aaf6570107c6c86845280697e0aeff7d9b2ae96afd3a3dfcca69cc57c25f4a69","message":"* [x] Log test execution runtimes.\n   * [x] Document new Logger.\n   * [x] Document new Builder.\n* [ ] Test and publish results via `./bin/deploy.build`:\n   * [x] RISC-V\n   * [ ] ARM\n   * [ ] Laptop\n   * [ ] Desktop\n* [x] Create status document, that checks if all tests were recently executed via the logged test runtimes and all executors.\n* [x] Test if tests are executed and create some kind of warning, if this is not the case.\n   * [x] Create execution log for network logger for each executor, as is done for logging test execution times.\n* [x] Show tasks that were executed often enough. Otherwise, there is no list of all tasks, which can be hurtful in case some tasks are missing entirely in the network log.\n* [ ] Implement and use `net.splitcells.network.deploy.build.at` in private repo.\n* [ ] Create command to execute list of host.\n   * [ ] Do not deploy build if target host not available and create simple warning instead.\n   * [ ] Do not deploy build if target host is itself.\n* [ ] Consider https://www.pygit2.org/ as an alternative permissive implementation.\n* [ ] Document, what needs to be done on network server.\n   * [ ] Create repos. Upload via ssh mounts.\n   * [ ] Install OSSI.\n   * [ ] `git config --global user.email \u0026\u0026 git config --global user.name`","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1653775247,"metadata":{"github-id":"UCE_lAHOFCNQW85Cba1rzi6jHfA"},"target":"aaf6570107c6c86845280697e0aeff7d9b2ae96afd3a3dfcca69cc57c25f4a69","message":"* [x] Log test execution runtimes.\n   * [x] Document new Logger.\n   * [x] Document new Builder.\n* [ ] Test and publish results via `./bin/deploy.build`:\n   * [x] RISC-V\n   * [ ] ARM\n   * [ ] Laptop\n   * [ ] Desktop\n* [x] Create status document, that checks if all tests were recently executed via the logged test runtimes and all executors.\n* [x] Test if tests are executed and create some kind of warning, if this is not the case.\n   * [x] Create execution log for network logger for each executor, as is done for logging test execution times.\n* [x] Show tasks that were executed often enough. Otherwise, there is no list of all tasks, which can be hurtful in case some tasks are missing entirely in the network log.\n* [ ] Implement and use `net.splitcells.network.deploy.build.at` in private repo.\n* [ ] Create command to execute list of host.\n   * [ ] Do not deploy build if target host not available and create simple warning instead.\n   * [ ] Do not deploy build if target host is itself.\n* [ ] Consider https://www.pygit2.org/ as an alternative permissive implementation.\n* [ ] Document, what needs to be done on network server.\n   * [ ] Create repos. Upload via ssh mounts.\n   * [ ] Install OSSI.\n   * [ ] `git config --global user.email \u0026\u0026 git config --global user.name`\n* [ ] Clean up private network build commands.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1653775430,"metadata":{"github-id":"UCE_lAHOFCNQW85Cba1rzi6jH90"},"target":"aaf6570107c6c86845280697e0aeff7d9b2ae96afd3a3dfcca69cc57c25f4a69","message":"* [x] Log test execution runtimes.\n   * [x] Document new Logger.\n   * [x] Document new Builder.\n* [ ] Test and publish results via `./bin/deploy.build`:\n   * [x] RISC-V\n   * [ ] ARM\n   * [ ] Laptop\n   * [ ] Desktop\n* [x] Create status document, that checks if all tests were recently executed via the logged test runtimes and all executors.\n* [x] Test if tests are executed and create some kind of warning, if this is not the case.\n   * [x] Create execution log for network logger for each executor, as is done for logging test execution times.\n* [x] Show tasks that were executed often enough. Otherwise, there is no list of all tasks, which can be hurtful in case some tasks are missing entirely in the network log.\n* [ ] Implement and use `net.splitcells.network.deploy.build.at` in private repo.\n* [ ] Create command to execute list of host.\n   * [ ] Do not deploy build if target host not available and create simple warning instead.\n   * [ ] Do not deploy build if target host is itself.\n* [ ] Consider https://www.pygit2.org/ as an alternative permissive implementation.\n* [ ] Document, what needs to be done on network server.\n   * [ ] Create repos. Upload via ssh mounts.\n   * [ ] Install OSSI.\n   * [ ] `git config --global user.email \u0026\u0026 git config --global user.name`\n* [ ] Clean up private network build commands.\n* [ ] Execute tests without password query.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1653777135,"metadata":{"github-id":"UCE_lAHOFCNQW85Cba1rzi6jMRw"},"target":"aaf6570107c6c86845280697e0aeff7d9b2ae96afd3a3dfcca69cc57c25f4a69","message":"* [x] Log test execution runtimes.\n   * [x] Document new Logger.\n   * [x] Document new Builder.\n* [ ] Test and publish results via `./bin/deploy.build`:\n   * [x] RISC-V\n   * [ ] ARM\n   * [ ] Laptop\n   * [ ] Desktop\n* [x] Create status document, that checks if all tests were recently executed via the logged test runtimes and all executors.\n* [x] Test if tests are executed and create some kind of warning, if this is not the case.\n   * [x] Create execution log for network logger for each executor, as is done for logging test execution times.\n* [x] Show tasks that were executed often enough. Otherwise, there is no list of all tasks, which can be hurtful in case some tasks are missing entirely in the network log.\n* [ ] Implement and use `net.splitcells.network.deploy.build.at` in private repo.\n* [ ] Create command to execute list of host.\n   * [ ] Do not deploy build if target host not available and create simple warning instead.\n   * [ ] Do not deploy build if target host is itself.\n* [ ] Consider https://www.pygit2.org/ as an alternative permissive implementation.\n* [ ] Document, what needs to be done on network server.\n   * [ ] Create repos. Upload via ssh mounts.\n   * [ ] Install OSSI.\n   * [ ] `git config --global user.email \u0026\u0026 git config --global user.name`\n* [ ] Clean up private network build commands.\n* [ ] Execute tests without password query.\n* [ ] Ensure, that repo commit is working on node: `SystemUtils.executeShellScript(\"sh -c \\\". ~/bin/net.splitcells.os.state.interface.commands.managed/command.managed.export.bin; command.managed.execute.command repo.commit.all\\\"\", logProject);`","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1654442863,"metadata":{"github-id":"UCE_lAHOFCNQW85Cba1rzi7-18Q"},"target":"aaf6570107c6c86845280697e0aeff7d9b2ae96afd3a3dfcca69cc57c25f4a69","message":"* [x] Log test execution runtimes.\n   * [x] Document new Logger.\n   * [x] Document new Builder.\n* [ ] Test and publish results via `./bin/deploy.build`:\n   * [x] RISC-V\n   * [ ] ARM\n   * [ ] Laptop\n   * [x] Desktop\n* [x] Create status document, that checks if all tests were recently executed via the logged test runtimes and all executors.\n* [x] Test if tests are executed and create some kind of warning, if this is not the case.\n   * [x] Create execution log for network logger for each executor, as is done for logging test execution times.\n* [x] Show tasks that were executed often enough. Otherwise, there is no list of all tasks, which can be hurtful in case some tasks are missing entirely in the network log.\n* [ ] Implement and use `net.splitcells.network.deploy.build.at` in private repo.\n* [ ] Create command to execute list of host.\n   * [ ] Do not deploy build if target host not available and create simple warning instead.\n   * [ ] Do not deploy build if target host is itself.\n* [ ] Consider https://www.pygit2.org/ as an alternative permissive implementation.\n* [ ] Document, what needs to be done on network server.\n   * [ ] Create repos. Upload via ssh mounts.\n   * [ ] Install OSSI.\n   * [ ] `git config --global user.email \u0026\u0026 git config --global user.name`\n* [ ] Clean up private network build commands.\n* [ ] Execute tests without password query.\n* [ ] Ensure, that repo commit is working on node: `SystemUtils.executeShellScript(\"sh -c \\\". ~/bin/net.splitcells.os.state.interface.commands.managed/command.managed.export.bin; command.managed.execute.command repo.commit.all\\\"\", logProject);`","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1654443810,"metadata":{"github-id":"UCE_lAHOFCNQW85Cba1rzi7-49Q"},"target":"aaf6570107c6c86845280697e0aeff7d9b2ae96afd3a3dfcca69cc57c25f4a69","message":"* [x] Log test execution runtimes.\n   * [x] Document new Logger.\n   * [x] Document new Builder.\n* [ ] Test and publish results via `./bin/deploy.build`:\n   * [x] RISC-V\n   * [ ] ARM\n   * [ ] Laptop\n   * [x] Desktop\n* [x] Create status document, that checks if all tests were recently executed via the logged test runtimes and all executors.\n* [x] Test if tests are executed and create some kind of warning, if this is not the case.\n   * [x] Create execution log for network logger for each executor, as is done for logging test execution times.\n* [x] Show tasks that were executed often enough. Otherwise, there is no list of all tasks, which can be hurtful in case some tasks are missing entirely in the network log.\n* [ ] Implement and use `net.splitcells.network.deploy.build.at` in private repo.\n* [ ] Create command to execute list of host.\n   * [ ] Do not deploy build if target host not available and create simple warning instead.\n   * [ ] Do not deploy build if target host is itself.\n* [ ] Consider https://www.pygit2.org/ as an alternative permissive implementation.\n* [ ] Document, what needs to be done on network server.\n   * [ ] Create repos. Upload via ssh mounts.\n   * [ ] Install OSSI.\n   * [ ] `git config --global user.email \u0026\u0026 git config --global user.name`\n* [ ] Clean up private network build commands.\n* [ ] Execute tests without password query.\n* [ ] Ensure, that repo commit is working on node: `SystemUtils.executeShellScript(\"sh -c \\\". ~/bin/net.splitcells.os.state.interface.commands.managed/command.managed.export.bin; command.managed.execute.command repo.commit.all\\\"\", logProject);`\n* [ ] Execute functionality/integration tests.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1655560373,"metadata":{"github-id":"UCE_lAHOFCNQW85Cba1rzi-pIZ0"},"target":"aaf6570107c6c86845280697e0aeff7d9b2ae96afd3a3dfcca69cc57c25f4a69","message":"* [x] Log test execution runtimes.\n   * [x] Document new Logger.\n   * [x] Document new Builder.\n* [ ] Test and publish results via `./bin/deploy.build`:\n   * [x] RISC-V\n   * [x] ARM\n   * [ ] Laptop\n   * [x] Desktop\n* [x] Create status document, that checks if all tests were recently executed via the logged test runtimes and all executors.\n* [x] Test if tests are executed and create some kind of warning, if this is not the case.\n   * [x] Create execution log for network logger for each executor, as is done for logging test execution times.\n* [x] Show tasks that were executed often enough. Otherwise, there is no list of all tasks, which can be hurtful in case some tasks are missing entirely in the network log.\n* [ ] Implement and use `net.splitcells.network.deploy.build.at` in private repo.\n* [ ] Create command to execute list of host.\n   * [ ] Do not deploy build if target host not available and create simple warning instead.\n   * [ ] Do not deploy build if target host is itself.\n* [ ] Consider https://www.pygit2.org/ as an alternative permissive implementation.\n* [ ] Document, what needs to be done on network server.\n   * [ ] Create repos. Upload via ssh mounts.\n   * [ ] Install OSSI.\n   * [ ] `git config --global user.email \u0026\u0026 git config --global user.name`\n* [ ] Clean up private network build commands.\n* [ ] Execute tests without password query.\n* [ ] Ensure, that repo commit is working on node: `SystemUtils.executeShellScript(\"sh -c \\\". ~/bin/net.splitcells.os.state.interface.commands.managed/command.managed.export.bin; command.managed.execute.command repo.commit.all\\\"\", logProject);`\n* [ ] Execute functionality/integration tests.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1655560374,"metadata":{"github-id":"UCE_lAHOFCNQW85Cba1rzi-pIas"},"target":"aaf6570107c6c86845280697e0aeff7d9b2ae96afd3a3dfcca69cc57c25f4a69","message":"* [x] Log test execution runtimes.\n   * [x] Document new Logger.\n   * [x] Document new Builder.\n* [ ] Test and publish results via `./bin/deploy.build`:\n   * [x] RISC-V\n   * [x] ARM\n   * [x] Laptop\n   * [x] Desktop\n* [x] Create status document, that checks if all tests were recently executed via the logged test runtimes and all executors.\n* [x] Test if tests are executed and create some kind of warning, if this is not the case.\n   * [x] Create execution log for network logger for each executor, as is done for logging test execution times.\n* [x] Show tasks that were executed often enough. Otherwise, there is no list of all tasks, which can be hurtful in case some tasks are missing entirely in the network log.\n* [ ] Implement and use `net.splitcells.network.deploy.build.at` in private repo.\n* [ ] Create command to execute list of host.\n   * [ ] Do not deploy build if target host not available and create simple warning instead.\n   * [ ] Do not deploy build if target host is itself.\n* [ ] Consider https://www.pygit2.org/ as an alternative permissive implementation.\n* [ ] Document, what needs to be done on network server.\n   * [ ] Create repos. Upload via ssh mounts.\n   * [ ] Install OSSI.\n   * [ ] `git config --global user.email \u0026\u0026 git config --global user.name`\n* [ ] Clean up private network build commands.\n* [ ] Execute tests without password query.\n* [ ] Ensure, that repo commit is working on node: `SystemUtils.executeShellScript(\"sh -c \\\". ~/bin/net.splitcells.os.state.interface.commands.managed/command.managed.export.bin; command.managed.execute.command repo.commit.all\\\"\", logProject);`\n* [ ] Execute functionality/integration tests.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1655560376,"metadata":{"github-id":"UCE_lAHOFCNQW85Cba1rzi-pIcA"},"target":"aaf6570107c6c86845280697e0aeff7d9b2ae96afd3a3dfcca69cc57c25f4a69","message":"* [x] Log test execution runtimes.\n   * [x] Document new Logger.\n   * [x] Document new Builder.\n* [x] Test and publish results via `./bin/deploy.build`:\n   * [x] RISC-V\n   * [x] ARM\n   * [x] Laptop\n   * [x] Desktop\n* [x] Create status document, that checks if all tests were recently executed via the logged test runtimes and all executors.\n* [x] Test if tests are executed and create some kind of warning, if this is not the case.\n   * [x] Create execution log for network logger for each executor, as is done for logging test execution times.\n* [x] Show tasks that were executed often enough. Otherwise, there is no list of all tasks, which can be hurtful in case some tasks are missing entirely in the network log.\n* [ ] Implement and use `net.splitcells.network.deploy.build.at` in private repo.\n* [ ] Create command to execute list of host.\n   * [ ] Do not deploy build if target host not available and create simple warning instead.\n   * [ ] Do not deploy build if target host is itself.\n* [ ] Consider https://www.pygit2.org/ as an alternative permissive implementation.\n* [ ] Document, what needs to be done on network server.\n   * [ ] Create repos. Upload via ssh mounts.\n   * [ ] Install OSSI.\n   * [ ] `git config --global user.email \u0026\u0026 git config --global user.name`\n* [ ] Clean up private network build commands.\n* [ ] Execute tests without password query.\n* [ ] Ensure, that repo commit is working on node: `SystemUtils.executeShellScript(\"sh -c \\\". ~/bin/net.splitcells.os.state.interface.commands.managed/command.managed.export.bin; command.managed.execute.command repo.commit.all\\\"\", logProject);`\n* [ ] Execute functionality/integration tests.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1657142671,"metadata":{"github-id":"UCE_lAHOFCNQW85Cba1rzjCPi78"},"target":"aaf6570107c6c86845280697e0aeff7d9b2ae96afd3a3dfcca69cc57c25f4a69","message":"* [x] Log test execution runtimes.\n   * [x] Document new Logger.\n   * [x] Document new Builder.\n* [x] Test and publish results via `./bin/deploy.build`:\n   * [x] RISC-V\n   * [x] ARM\n   * [x] Laptop\n   * [x] Desktop\n* [x] Create status document, that checks if all tests were recently executed via the logged test runtimes and all executors.\n* [x] Test if tests are executed and create some kind of warning, if this is not the case.\n   * [x] Create execution log for network logger for each executor, as is done for logging test execution times.\n* [x] Show tasks that were executed often enough. Otherwise, there is no list of all tasks, which can be hurtful in case some tasks are missing entirely in the network log.\n* [ ] Implement and use `net.splitcells.network.deploy.build.at` in private repo.\n   * [ ] ARM\n   * [ ] RISC-V\n   * [ ] Laptop\n   * [ ] Desktop\n* [ ] Create command to execute list of host.\n   * [ ] Do not deploy build if target host not available and create simple warning instead.\n   * [ ] Do not deploy build if target host is itself.\n* [ ] Consider https://www.pygit2.org/ as an alternative permissive implementation.\n* [ ] Document, what needs to be done on network server.\n   * [ ] Create repos. Upload via ssh mounts.\n   * [ ] Install OSSI.\n   * [ ] `git config --global user.email \u0026\u0026 git config --global user.name`\n* [ ] Clean up private network build commands.\n* [ ] Execute tests without password query.\n* [ ] Ensure, that repo commit is working on node: `SystemUtils.executeShellScript(\"sh -c \\\". ~/bin/net.splitcells.os.state.interface.commands.managed/command.managed.export.bin; command.managed.execute.command repo.commit.all\\\"\", logProject);`\n* [ ] Execute functionality/integration tests.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1657142699,"metadata":{"github-id":"UCE_lAHOFCNQW85Cba1rzjCPjMs"},"target":"aaf6570107c6c86845280697e0aeff7d9b2ae96afd3a3dfcca69cc57c25f4a69","message":"* [x] Log test execution runtimes.\n   * [x] Document new Logger.\n   * [x] Document new Builder.\n* [x] Test and publish results via `./bin/deploy.build`:\n   * [x] RISC-V\n   * [x] ARM\n   * [x] Laptop\n   * [x] Desktop\n* [x] Create status document, that checks if all tests were recently executed via the logged test runtimes and all executors.\n* [x] Test if tests are executed and create some kind of warning, if this is not the case.\n   * [x] Create execution log for network logger for each executor, as is done for logging test execution times.\n* [x] Show tasks that were executed often enough. Otherwise, there is no list of all tasks, which can be hurtful in case some tasks are missing entirely in the network log.\n* [ ] Implement and use `net.splitcells.network.deploy.build.at` in private repo.\n   * [ ] ARM (`repo.commit.all` is not found by `network.worker`)\n   * [ ] RISC-V\n   * [ ] Laptop\n   * [ ] Desktop\n* [ ] Create command to execute list of host.\n   * [ ] Do not deploy build if target host not available and create simple warning instead.\n   * [ ] Do not deploy build if target host is itself.\n* [ ] Consider https://www.pygit2.org/ as an alternative permissive implementation.\n* [ ] Document, what needs to be done on network server.\n   * [ ] Create repos. Upload via ssh mounts.\n   * [ ] Install OSSI.\n   * [ ] `git config --global user.email \u0026\u0026 git config --global user.name`\n* [ ] Clean up private network build commands.\n* [ ] Execute tests without password query.\n* [ ] Ensure, that repo commit is working on node: `SystemUtils.executeShellScript(\"sh -c \\\". ~/bin/net.splitcells.os.state.interface.commands.managed/command.managed.export.bin; command.managed.execute.command repo.commit.all\\\"\", logProject);`\n* [ ] Execute functionality/integration tests.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1657142863,"metadata":{"github-id":"UCE_lAHOFCNQW85Cba1rzjCPk3A"},"target":"aaf6570107c6c86845280697e0aeff7d9b2ae96afd3a3dfcca69cc57c25f4a69","message":"* [x] Log test execution runtimes.\n   * [x] Document new Logger.\n   * [x] Document new Builder.\n* [x] Test and publish results via `./bin/deploy.build`:\n   * [x] RISC-V\n   * [x] ARM\n   * [x] Laptop\n   * [x] Desktop\n* [x] Create status document, that checks if all tests were recently executed via the logged test runtimes and all executors.\n* [x] Test if tests are executed and create some kind of warning, if this is not the case.\n   * [x] Create execution log for network logger for each executor, as is done for logging test execution times.\n* [x] Show tasks that were executed often enough. Otherwise, there is no list of all tasks, which can be hurtful in case some tasks are missing entirely in the network log.\n* [ ] Implement and use `net.splitcells.network.deploy.build.at` in private repo.\n   * [ ] ARM (`repo.commit.all` is not found by `network.worker`, because it is executed with sh and without PATH extension for OSI)\n   * [ ] RISC-V\n   * [ ] Laptop\n   * [ ] Desktop\n* [ ] Create command to execute list of host.\n   * [ ] Do not deploy build if target host not available and create simple warning instead.\n   * [ ] Do not deploy build if target host is itself.\n* [ ] Consider https://www.pygit2.org/ as an alternative permissive implementation.\n* [ ] Document, what needs to be done on network server.\n   * [ ] Create repos. Upload via ssh mounts.\n   * [ ] Install OSSI.\n   * [ ] `git config --global user.email \u0026\u0026 git config --global user.name`\n* [ ] Clean up private network build commands.\n* [ ] Execute tests without password query.\n* [ ] Ensure, that repo commit is working on node: `SystemUtils.executeShellScript(\"sh -c \\\". ~/bin/net.splitcells.os.state.interface.commands.managed/command.managed.export.bin; command.managed.execute.command repo.commit.all\\\"\", logProject);`\n* [ ] Execute functionality/integration tests.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1657412836,"metadata":{"github-id":"UCE_lAHOFCNQW85Cba1rzjCxYJo"},"target":"aaf6570107c6c86845280697e0aeff7d9b2ae96afd3a3dfcca69cc57c25f4a69","message":"* [x] Log test execution runtimes.\n   * [x] Document new Logger.\n   * [x] Document new Builder.\n* [x] Test and publish results via `./bin/deploy.build`:\n   * [x] RISC-V\n   * [x] ARM\n   * [x] Laptop\n   * [x] Desktop\n* [x] Create status document, that checks if all tests were recently executed via the logged test runtimes and all executors.\n* [x] Test if tests are executed and create some kind of warning, if this is not the case.\n   * [x] Create execution log for network logger for each executor, as is done for logging test execution times.\n* [x] Show tasks that were executed often enough. Otherwise, there is no list of all tasks, which can be hurtful in case some tasks are missing entirely in the network log.\n* [ ] Implement and use `net.splitcells.network.deploy.build.at` in private repo.\n   * [x] ARM (`repo.commit.all` is not found by `network.worker`, because it is executed with sh and without PATH extension for OSI)\n   * [ ] RISC-V\n   * [ ] Laptop\n   * [ ] Desktop\n* [ ] Create command to execute list of host.\n   * [ ] Do not deploy build if target host not available and create simple warning instead.\n   * [ ] Do not deploy build if target host is itself.\n* [ ] Consider https://www.pygit2.org/ as an alternative permissive implementation.\n* [ ] Document, what needs to be done on network server.\n   * [ ] Create repos. Upload via ssh mounts.\n   * [ ] Install OSSI.\n   * [ ] `git config --global user.email \u0026\u0026 git config --global user.name`\n* [ ] Clean up private network build commands.\n* [ ] Execute tests without password query.\n* [ ] Ensure, that repo commit is working on node: `SystemUtils.executeShellScript(\"sh -c \\\". ~/bin/net.splitcells.os.state.interface.commands.managed/command.managed.export.bin; command.managed.execute.command repo.commit.all\\\"\", logProject);`\n* [ ] Execute functionality/integration tests.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1658696038,"metadata":{"github-id":"UCE_lAHOFCNQW85Cba1rzjFdx7Q"},"target":"aaf6570107c6c86845280697e0aeff7d9b2ae96afd3a3dfcca69cc57c25f4a69","message":"* [x] Log test execution runtimes.\n   * [x] Document new Logger.\n   * [x] Document new Builder.\n* [x] Test and publish results via `./bin/deploy.build`:\n   * [x] RISC-V\n   * [x] ARM\n   * [x] Laptop\n   * [x] Desktop\n* [x] Create status document, that checks if all tests were recently executed via the logged test runtimes and all executors.\n* [x] Test if tests are executed and create some kind of warning, if this is not the case.\n   * [x] Create execution log for network logger for each executor, as is done for logging test execution times.\n* [x] Show tasks that were executed often enough. Otherwise, there is no list of all tasks, which can be hurtful in case some tasks are missing entirely in the network log.\n* [ ] Implement and use `net.splitcells.network.deploy.build.at` in private repo.\n   * [x] ARM (`repo.commit.all` is not found by `network.worker`, because it is executed with sh and without PATH extension for OSI)\n   * [ ] RISC-V -\u003e log errors via `test.via.network.worker` and debug them\n   * [ ] Laptop\n   * [ ] Desktop\n* [ ] Create command to execute list of host.\n   * [ ] Do not deploy build if target host not available and create simple warning instead.\n   * [ ] Do not deploy build if target host is itself.\n* [ ] Consider https://www.pygit2.org/ as an alternative permissive implementation.\n* [ ] Document, what needs to be done on network server.\n   * [ ] Create repos. Upload via ssh mounts.\n   * [ ] Install OSSI.\n   * [ ] `git config --global user.email \u0026\u0026 git config --global user.name`\n* [ ] Clean up private network build commands.\n* [ ] Execute tests without password query.\n* [ ] Ensure, that repo commit is working on node: `SystemUtils.executeShellScript(\"sh -c \\\". ~/bin/net.splitcells.os.state.interface.commands.managed/command.managed.export.bin; command.managed.execute.command repo.commit.all\\\"\", logProject);`\n* [ ] Execute functionality/integration tests.","files":null},{"type":5,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1643155518,"metadata":{"github-id":"LE_lADOFCNQW85Cba1rzwAAAAFi3CFB"},"added":["enhancement"],"removed":[]}]}