{"version":1,"ops":[{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1635988125,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9ziYOIwA"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [ ] Document how to add Gel as a dependency and how to build it.\n* [ ] Solve the N Queen Problem.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish aditional trust.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1635988166,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9ziYOJAk"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [ ] Document how to add Gel as a dependency and how to build it.\n* [ ] Solve the N Queen Problem.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish aditional trust.\n* [ ] Explain, where to find predefined rating and grouping functions.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1636060676,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9ziYYqgA"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [ ] Solve the N Queen Problem.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish aditional trust.\n* [ ] Explain, where to find predefined rating and grouping functions.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1636060743,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9ziYYrFM"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [ ] Solve the N Queen Problem.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish aditional trust.\n* [ ] Explain where to find predefined rating and grouping functions.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1637104478,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9ziaH7j8"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [ ] Solve the N Queen Problem.\n   * [ ] Prevent reset of temperature function.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish aditional trust.\n* [ ] Explain where to find predefined rating and grouping functions.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1637105018,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9ziaIAGk"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [ ] Solve the N Queen Problem.\n   * [ ] Prevent reset of temperature function.\n   * [ ] Do not make temperature function dependent on history size.\n         Make it dependent on try count size.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish aditional trust.\n* [ ] Explain where to find predefined rating and grouping functions.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1637105059,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9ziaIAdE"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [ ] Solve the N Queen Problem.\n   * [ ] Prevent reset of temperature function.\n   * [ ] Do not make temperature function dependent on history size.\n         Make it dependent on temperature query count.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish aditional trust.\n* [ ] Explain where to find predefined rating and grouping functions.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1637105205,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9ziaIBpA"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [ ] Solve the N Queen Problem.\n   * [ ] Prevent reset of temperature function.\n   * [ ] Do not make temperature function dependent on history size.\n         Make it dependent on temperature query count.\n    * [ ] Document, why previous version of simulated annealing did not work.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish aditional trust.\n* [ ] Explain where to find predefined rating and grouping functions.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1637105304,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9ziaICcU"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [ ] Solve the N Queen Problem.\n   * [ ] Prevent reset of temperature function.\n   * [ ] Do not make temperature function dependent on history size.\n         Make it dependent on temperature query count.\n    * [ ] Document, why previous version of simulated annealing did not work.\n    * [ ] Use random queen shuffle in order to discover all neighbours.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish aditional trust.\n* [ ] Explain where to find predefined rating and grouping functions.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1637279429,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9ziaicx8"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [ ] Solve the N Queen Problem.\n   * [ ] Prevent reset of temperature function.\n   * [ ] Do not make temperature function dependent on history size.\n         Make it dependent on temperature query count.\n    * [ ] Document, why previous version of simulated annealing did not work.\n    * [ ] Use random queen shuffle in order to discover all neighbours.\n    * [ ] Create HistoryTest.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish aditional trust.\n* [ ] Explain where to find predefined rating and grouping functions.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1637885681,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9zibjSGo"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [ ] Solve the N Queen Problem.\n   * [ ] Prevent reset of temperature function.\n   * [ ] Do not make temperature function dependent on history size.\n         Make it dependent on temperature query count.\n    * [ ] Document, why previous version of simulated annealing did not work.\n    * [ ] Use random queen shuffle in order to discover all neighbours.\n    * [ ] Create HistoryTest.\n    * [ ] Create integration test command.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish aditional trust.\n* [ ] Explain where to find predefined rating and grouping functions.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1638138891,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9zibxSYI"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n   * [ ] Prevent reset of temperature function.\n   * [ ] Do not make temperature function dependent on history size.\n         Make it dependent on temperature query count.\n    * [ ] Document, why previous version of simulated annealing did not work.\n    * [ ] Use random queen shuffle in order to discover all neighbours.\n    * [ ] Create HistoryTest.\n    * [ ] Create integration test command.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish aditional trust.\n* [ ] Explain where to find predefined rating and grouping functions.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1638138924,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9zibxSdE"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [ ] Create integration test command.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish aditional trust.\n* [ ] Explain where to find predefined rating and grouping functions.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1638141866,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9zibxZ2A"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish aditional trust.\n* [ ] Explain where to find predefined rating and grouping functions.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1638600809,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9zic0WS4"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish aditional trust.\n* [ ] Explain where to find predefined rating and grouping functions.\n* [ ] Find out why performance is so bad (hint number of database alloactions).","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1638603255,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9zic0fa8"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish aditional trust.\n* [ ] Explain where to find predefined rating and grouping functions.\n* [ ] Find out why performance is so bad (hint number of database alloactions).\n   * [ ] Organize performance tests.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1638604183,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9zic0im4"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish aditional trust.\n* [ ] Explain where to find predefined rating and grouping functions.\n* [ ] Find out why performance is so bad (hint number of database alloactions).\n   * [ ] Organize performance tests.\n   * [ ] Ratings are expensive, because the whole tree needs to queried for the rating of the root node.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1638604326,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9zic0jDw"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish aditional trust.\n* [ ] Explain where to find predefined rating and grouping functions.\n* [ ] Find out why performance is so bad (hint number of database alloactions).\n   * [ ] Organize performance tests.\n   * [ ] Ratings are expensive, because the whole tree needs to queried for the rating of the root node.\n   * [ ] MetaRating is costly.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1638605480,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9zic0nMM"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish aditional trust.\n* [ ] Explain where to find predefined rating and grouping functions.\n* [ ] Find out why performance is so bad (hint number of database alloactions).\n   * [ ] Organize performance tests.\n   * [ ] Ratings are expensive, because the whole tree needs to queried for the rating of the root node.\n   * [ ] MetaRating is costly.\n   * [ ] Grammar of #10 should not cause bad performance.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1638605772,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9zic0oTE"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish aditional trust.\n* [ ] Explain where to find predefined rating and grouping functions.\n* [ ] Find out why performance is so bad (hint number of database alloactions).\n   * [ ] Organize performance tests.\n   * [ ] Ratings are expensive, because the whole tree needs to queried for the rating of the root node.\n   * [ ] MetaRating is costly.\n   * [ ] Grammar of #10 should not cause bad performance.\n* [ ] The end of this issue creates next major version.\nBlog why version 3 was such a bad version.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1638605807,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9zic0odo"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish aditional trust.\n* [ ] Explain where to find predefined rating and grouping functions.\n* [ ] Find out why performance is so bad (hint number of database alloactions).\n   * [ ] Organize performance tests.\n   * [ ] Ratings are expensive, because the whole tree needs to queried for the rating of the root node.\n   * [ ] MetaRating is costly.\n   * [ ] Grammar of #10 should not cause bad performance.\n* [ ] The end of this issue creates next major version.\nBlog why version 3 was such a bad version.\nBlog about major content of version 4 and main issue of next version.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1638617236,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9zic1BTM"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish aditional trust.\n* [ ] Explain where to find predefined rating and grouping functions.\n* [ ] Find out why performance is so bad (hint number of database alloactions).\n   * [ ] Organize performance tests.\n   * [ ] Ratings are expensive, because the whole tree needs to queried for the rating of the root node.\n   * [ ] MetaRating is costly.\n   * [ ] Grammar of #10 should not cause bad performance.\n   * [ ] Constraint are based on Allocations, which causes many allocations.\n* [ ] The end of this issue creates next major version.\nBlog why version 3 was such a bad version.\nBlog about major content of version 4 and main issue of next version.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1640044174,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9zifRRFU"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish aditional trust.\n* [ ] Explain where to find predefined rating and grouping functions.\n* [ ] Find out why performance is so bad (hint number of database alloactions).\n   * [ ] Organize performance tests.\n   * [ ] Ratings are expensive, because the whole tree needs to queried for the rating of the root node.\n   * [ ] MetaRating is costly.\n   * [ ] Constraint are based on Allocations, which causes many allocations.\n* [ ] The end of this issue creates next major version.\nBlog why version 3 was such a bad version.\nBlog about major content of version 4 and main issue of next version.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1640044177,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9zifRRF4"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish aditional trust.\n* [ ] Explain where to find predefined rating and grouping functions.\n* [ ] Find out why performance is so bad (hint number of database alloactions).\n   * [ ] Organize performance tests.\n   * [ ] Ratings are expensive, because the whole tree needs to queried for the rating of the root node.\n   * [x] MetaRating is costly.\n   * [ ] Constraint are based on Allocations, which causes many allocations.\n* [ ] The end of this issue creates next major version.\nBlog why version 3 was such a bad version.\nBlog about major content of version 4 and main issue of next version.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1640044180,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9zifRRHQ"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish aditional trust.\n* [ ] Explain where to find predefined rating and grouping functions.\n* [ ] Find out why performance is so bad (hint number of database alloactions).\n   * [ ] Organize performance tests.\n   * [x] Ratings are expensive, because the whole tree needs to queried for the rating of the root node.\n   * [x] MetaRating is costly.\n   * [ ] Constraint are based on Allocations, which causes many allocations.\n* [ ] The end of this issue creates next major version.\nBlog why version 3 was such a bad version.\nBlog about major content of version 4 and main issue of next version.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1640044183,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9zifRRIQ"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish aditional trust.\n* [ ] Explain where to find predefined rating and grouping functions.\n* [ ] Find out why performance is so bad (hint number of database alloactions).\n   * [x] Organize performance tests.\n   * [x] Ratings are expensive, because the whole tree needs to queried for the rating of the root node.\n   * [x] MetaRating is costly.\n   * [ ] Constraint are based on Allocations, which causes many allocations.\n* [ ] The end of this issue creates next major version.\nBlog why version 3 was such a bad version.\nBlog about major content of version 4 and main issue of next version.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1640044200,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9zifRRQA"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish aditional trust.\n* [ ] Explain where to find predefined rating and grouping functions.\n* [ ] Find out why performance is so bad (hint number of database alloactions).\n   * [x] Organize performance tests.\n   * [x] Ratings are expensive, because the whole tree needs to queried for the rating of the root node.\n   * [x] MetaRating is costly.\n   * [ ] Constraint are based on Allocations, which causes many allocations. -\u003e We ignore this in regards to this issue.\n* [ ] The end of this issue creates next major version.\nBlog why version 3 was such a bad version.\nBlog about major content of version 4 and main issue of next version.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1640044203,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9zifRRRE"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish aditional trust.\n* [ ] Explain where to find predefined rating and grouping functions.\n* [ ] Find out why performance is so bad (hint number of database alloactions).\n   * [x] Organize performance tests.\n   * [x] Ratings are expensive, because the whole tree needs to queried for the rating of the root node.\n   * [x] MetaRating is costly.\n   * [x] Constraint are based on Allocations, which causes many allocations. -\u003e We ignore this in regards to this issue.\n* [ ] The end of this issue creates next major version.\nBlog why version 3 was such a bad version.\nBlog about major content of version 4 and main issue of next version.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1640044204,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9zifRRRc"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish aditional trust.\n* [ ] Explain where to find predefined rating and grouping functions.\n* [x] Find out why performance is so bad (hint number of database alloactions).\n   * [x] Organize performance tests.\n   * [x] Ratings are expensive, because the whole tree needs to queried for the rating of the root node.\n   * [x] MetaRating is costly.\n   * [x] Constraint are based on Allocations, which causes many allocations. -\u003e We ignore this in regards to this issue.\n* [ ] The end of this issue creates next major version.\nBlog why version 3 was such a bad version.\nBlog about major content of version 4 and main issue of next version.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1640119878,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9zifbscM"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish aditional trust.\n* [ ] Explain where to find predefined rating and grouping functions.\n* [x] Find out why performance is so bad (hint number of database alloactions).\n   * [x] Organize performance tests.\n   * [x] Ratings are expensive, because the whole tree needs to queried for the rating of the root node.\n   * [x] MetaRating is costly.\n   * [x] Constraint are based on Allocations, which causes many allocations. -\u003e We ignore this in regards to this issue.\n* [ ] The end of this issue creates next major version.\nBlog why version 3 was such a bad version.\nBlog about major content of version 4 and main issue of next version.\n* [ ] Try out constraint based repair optimizer.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1640226365,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9zifoMrs"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish aditional trust.\n* [ ] Explain where to find predefined rating and grouping functions.\n* [x] Find out why performance is so bad (hint number of database alloactions).\n   * [x] Organize performance tests.\n   * [x] Ratings are expensive, because the whole tree needs to queried for the rating of the root node.\n   * [x] MetaRating is costly.\n   * [x] Constraint are based on Allocations, which causes many allocations. -\u003e We ignore this in regards to this issue.\n* [ ] The end of this issue creates next major version.\nBlog why version 3 was such a bad version.\nBlog about major content of version 4 and main issue of next version.\n* [x] Try out constraint based repair optimizer.\n* [x] Document repair performance.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1640226369,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9zifoMtU"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish aditional trust.\n* [ ] Explain where to find predefined rating and grouping functions.\n* [x] Find out why performance is so bad (hint number of database alloactions).\n   * [x] Organize performance tests.\n   * [x] Ratings are expensive, because the whole tree needs to queried for the rating of the root node.\n   * [x] MetaRating is costly.\n   * [x] Constraint are based on Allocations, which causes many allocations. -\u003e We ignore this in regards to this issue.\n* [ ] The end of this issue creates next major version.\nBlog why version 3 was such a bad version.\nBlog about major content of version 4 and main issue of next version.\n* [x] Try out constraint based repair optimizer.\n* [ ] Document repair performance.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1640733073,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9zigHDKs"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish aditional trust.\n* [ ] Explain where to find predefined rating and grouping functions.\n* [ ] Find out why performance is so bad (hint number of database alloactions).\n   * [ ] Organize performance tests.\n   * [ ] Ratings are expensive, because the whole tree needs to queried for the rating of the root node.\n   * [ ] MetaRating is costly.\n   * [ ] Grammar of #10 should not cause bad performance.\n   * [ ] Constraint are based on Allocations, which causes many allocations.\n* [ ] The end of this issue creates next major version.\nBlog why version 3 was such a bad version.\nBlog about major content of version 4 and main issue of next version.\n* [ ] Show POM that would work for example project and how to get the dependency.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1641082037,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9zigZwu4"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish aditional trust.\n* [ ] Explain where to find predefined rating and grouping functions.\n* [ ] Find out why performance is so bad (hint number of database alloactions).\n   * [ ] Organize performance tests.\n   * [x] Ratings are expensive, because the whole tree needs to queried for the rating of the root node.\n   * [ ] MetaRating is costly.\n   * [ ] Grammar of #10 should not cause bad performance.\n   * [ ] Constraint are based on Allocations, which causes many allocations.\n* [ ] The end of this issue creates next major version.\nBlog why version 3 was such a bad version.\nBlog about major content of version 4 and main issue of next version.\n* [ ] Show POM that would work for example project and how to get the dependency.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1641082039,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9zigZwvI"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish aditional trust.\n* [ ] Explain where to find predefined rating and grouping functions.\n* [ ] Find out why performance is so bad (hint number of database alloactions).\n   * [ ] Organize performance tests.\n   * [x] Ratings are expensive, because the whole tree needs to queried for the rating of the root node.\n   * [x] MetaRating is costly.\n   * [ ] Grammar of #10 should not cause bad performance.\n   * [ ] Constraint are based on Allocations, which causes many allocations.\n* [ ] The end of this issue creates next major version.\nBlog why version 3 was such a bad version.\nBlog about major content of version 4 and main issue of next version.\n* [ ] Show POM that would work for example project and how to get the dependency.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1641082045,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9zigZwv0"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish aditional trust.\n* [ ] Explain where to find predefined rating and grouping functions.\n* [ ] Find out why performance is so bad (hint number of database alloactions).\n   * [ ] Organize performance tests.\n   * [x] Ratings are expensive, because the whole tree needs to queried for the rating of the root node.\n   * [x] MetaRating is costly.\n   * [x] Grammar of #10 should not cause bad performance.\n   * [ ] Constraint are based on Allocations, which causes many allocations.\n* [ ] The end of this issue creates next major version.\nBlog why version 3 was such a bad version.\nBlog about major content of version 4 and main issue of next version.\n* [ ] Show POM that would work for example project and how to get the dependency.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1641082048,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9zigZwwg"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish aditional trust.\n* [ ] Explain where to find predefined rating and grouping functions.\n* [ ] Find out why performance is so bad (hint number of database alloactions).\n   * [ ] Organize performance tests.\n   * [x] Ratings are expensive, because the whole tree needs to queried for the rating of the root node.\n   * [x] MetaRating is costly.\n   * [x] Grammar of #10 should not cause bad performance.\n   * [x] Constraint are based on Allocations, which causes many allocations.\n* [ ] The end of this issue creates next major version.\nBlog why version 3 was such a bad version.\nBlog about major content of version 4 and main issue of next version.\n* [ ] Show POM that would work for example project and how to get the dependency.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1641082084,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9zigZw1g"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish aditional trust.\n* [ ] Explain where to find predefined rating and grouping functions.\n* [x] Find out why performance is so bad (hint number of database alloactions).\n   * [x] Organize performance tests. -\u003e Was ignored.\n   * [x] Ratings are expensive, because the whole tree needs to queried for the rating of the root node.\n   * [x] MetaRating is costly.\n   * [x] Grammar of #10 should not cause bad performance. -\u003e Was ignored.\n   * [x] Constraint are based on Allocations, which causes many allocations. -\u003e Was ignored.\n* [ ] The end of this issue creates next major version.\nBlog why version 3 was such a bad version.\nBlog about major content of version 4 and main issue of next version.\n* [ ] Show POM that would work for example project and how to get the dependency.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1641082364,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9zigZxlI"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish aditional trust.\n* [ ] Explain where to find predefined rating and grouping functions.\n* [x] Find out why performance is so bad (hint number of database alloactions).\n   * [x] Organize performance tests. -\u003e Was ignored.\n   * [x] Ratings are expensive, because the whole tree needs to queried for the rating of the root node.\n   * [x] MetaRating is costly.\n   * [x] Grammar of #10 should not cause bad performance. -\u003e Was ignored.\n   * [x] Constraint are based on Allocations, which causes many allocations. -\u003e Was ignored.\n* [ ] The end of this issue creates next major version.\nBlog why version 3 was such a bad version.\nBlog about major content of version 4 and main issue of next version.\n* [ ] Show POM that would work for example project and how to get the dependency.\n* [ ] Create quick star project, so its easy to try out things fast.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1641250684,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9ziglDNw"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish aditional trust.\n* [ ] Explain where to find predefined rating and grouping functions.\n* [x] Find out why performance is so bad (hint number of database alloactions).\n   * [x] Organize performance tests. -\u003e Was ignored.\n   * [x] Ratings are expensive, because the whole tree needs to queried for the rating of the root node.\n   * [x] MetaRating is costly.\n   * [x] Grammar of #10 should not cause bad performance. -\u003e Was ignored.\n   * [x] Constraint are based on Allocations, which causes many allocations. -\u003e Was ignored.\n* [ ] The end of this issue creates next major version.\nBlog why version 3 was such a bad version.\nBlog about major content of version 4 and main issue of next version.\n* [ ] Show POM that would work for example project and how to get the dependency.\n* [ ] Create quick start project, so its easy to try out things fast.\n   * [ ] Use quick start project for alternative super fast introduction and recommended project template.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1641250738,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9ziglDfQ"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish aditional trust.\n* [ ] Explain where to find predefined rating and grouping functions.\n* [x] Find out why performance is so bad (hint number of database alloactions).\n   * [x] Organize performance tests. -\u003e Was ignored.\n   * [x] Ratings are expensive, because the whole tree needs to queried for the rating of the root node.\n   * [x] MetaRating is costly.\n   * [x] Grammar of #10 should not cause bad performance. -\u003e Was ignored.\n   * [x] Constraint are based on Allocations, which causes many allocations. -\u003e Was ignored.\n* [ ] The end of this issue creates next major version.\nBlog why version 3 was such a bad version.\nBlog about major content of version 4 and main issue of next version.\n* [ ] Show POM that would work for example project and how to get the dependency.\n* [ ] Create quick start project, so its easy to try out things fast.\n   * [ ] Use quick start project for alternative super fast introduction and recommended project template.\n   * [ ] Document goals of quickstart project.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1641250759,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9ziglDnM"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish aditional trust.\n* [ ] Explain where to find predefined rating and grouping functions.\n* [x] Find out why performance is so bad (hint number of database alloactions).\n   * [x] Organize performance tests. -\u003e Was ignored.\n   * [x] Ratings are expensive, because the whole tree needs to queried for the rating of the root node.\n   * [x] MetaRating is costly.\n   * [x] Grammar of #10 should not cause bad performance. -\u003e Was ignored.\n   * [x] Constraint are based on Allocations, which causes many allocations. -\u003e Was ignored.\n* [ ] The end of this issue creates the next major version.\nBlog why version 3 was such a bad version.\nBlog about major content of version 4 and main issue of next version.\n* [ ] Show POM that would work for example project and how to get the dependency.\n* [ ] Create quick start project, so it's easy to try out things fast.\n   * [ ] Use quick start project for alternative superfast introduction and recommended project template.\n   * [ ] Document goals of quick start project.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1641340460,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9zigw-zw"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish aditional trust.\n* [ ] Explain where to find predefined rating and grouping functions.\n* [x] Find out why performance is so bad (hint number of database alloactions).\n   * [x] Organize performance tests. -\u003e Was ignored.\n   * [x] Ratings are expensive, because the whole tree needs to queried for the rating of the root node.\n   * [x] MetaRating is costly.\n   * [x] Grammar of #10 should not cause bad performance. -\u003e Was ignored.\n   * [x] Constraint are based on Allocations, which causes many allocations. -\u003e Was ignored.\n* [ ] The end of this issue creates the next major version.\nBlog why version 3 was such a bad version.\nBlog about major content of version 4 and main issue of next version.\n* [x] Show POM that would work for example project and how to get the dependency.\n* [ ] Create quick start project, so it's easy to try out things fast.\n   * [ ] Use quick start project for alternative superfast introduction and recommended project template.\n   * [ ] Document goals of quick start project.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1641340463,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9zigw-00"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish aditional trust.\n* [ ] Explain where to find predefined rating and grouping functions.\n* [x] Find out why performance is so bad (hint number of database alloactions).\n   * [x] Organize performance tests. -\u003e Was ignored.\n   * [x] Ratings are expensive, because the whole tree needs to queried for the rating of the root node.\n   * [x] MetaRating is costly.\n   * [x] Grammar of #10 should not cause bad performance. -\u003e Was ignored.\n   * [x] Constraint are based on Allocations, which causes many allocations. -\u003e Was ignored.\n* [ ] The end of this issue creates the next major version.\nBlog why version 3 was such a bad version.\nBlog about major content of version 4 and main issue of next version.\n* [x] Show POM that would work for example project and how to get the dependency.\n* [ ] Create quick start project, so it's easy to try out things fast.\n   * [ ] Use quick start project for alternative superfast introduction and recommended project template.\n   * [x] Document goals of quick start project.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1641340472,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9zigw-4s"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish aditional trust.\n* [ ] Explain where to find predefined rating and grouping functions.\n* [x] Find out why performance is so bad (hint number of database alloactions).\n   * [x] Organize performance tests. -\u003e Was ignored.\n   * [x] Ratings are expensive, because the whole tree needs to queried for the rating of the root node.\n   * [x] MetaRating is costly.\n   * [x] Grammar of #10 should not cause bad performance. -\u003e Was ignored.\n   * [x] Constraint are based on Allocations, which causes many allocations. -\u003e Was ignored.\n* [ ] The end of this issue creates the next major version.\nBlog why version 3 was such a bad version.\nBlog about major content of version 4 and main issue of next version.\n* [x] Show POM that would work for example project and how to get the dependency.\n* [ ] Create quick start project, so it's easy to try out things fast.\n   * [x] Use quick start project for alternative superfast introduction and recommended project template.\n   * [x] Document goals of quick start project.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1641340474,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9zigw-5U"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish aditional trust.\n* [ ] Explain where to find predefined rating and grouping functions.\n* [x] Find out why performance is so bad (hint number of database alloactions).\n   * [x] Organize performance tests. -\u003e Was ignored.\n   * [x] Ratings are expensive, because the whole tree needs to queried for the rating of the root node.\n   * [x] MetaRating is costly.\n   * [x] Grammar of #10 should not cause bad performance. -\u003e Was ignored.\n   * [x] Constraint are based on Allocations, which causes many allocations. -\u003e Was ignored.\n* [ ] The end of this issue creates the next major version.\nBlog why version 3 was such a bad version.\nBlog about major content of version 4 and main issue of next version.\n* [x] Show POM that would work for example project and how to get the dependency.\n* [x] Create quick start project, so it's easy to try out things fast.\n   * [x] Use quick start project for alternative superfast introduction and recommended project template.\n   * [x] Document goals of quick start project.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1641340706,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9zigxATg"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish aditional trust.\n* [ ] Explain where to find predefined rating and grouping functions.\n* [ ] Visualize the propagation of lines inside the constraint tree.\n* [x] Find out why performance is so bad (hint number of database alloactions).\n   * [x] Organize performance tests. -\u003e Was ignored.\n   * [x] Ratings are expensive, because the whole tree needs to queried for the rating of the root node.\n   * [x] MetaRating is costly.\n   * [x] Grammar of #10 should not cause bad performance. -\u003e Was ignored.\n   * [x] Constraint are based on Allocations, which causes many allocations. -\u003e Was ignored.\n* [ ] The end of this issue creates the next major version.\nBlog why version 3 was such a bad version.\nBlog about major content of version 4 and main issue of next version.\n* [x] Show POM that would work for example project and how to get the dependency.\n* [x] Create quick start project, so it's easy to try out things fast.\n   * [x] Use quick start project for alternative superfast introduction and recommended project template.\n   * [x] Document goals of quick start project.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1641340817,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9zigxBDk"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish additional trust.\n* [ ] Explain where to find predefined rating and grouping functions.\n* [ ] Visualize the propagation of lines inside the constraint tree.\n* [ ] Demonstrate solving the problem.\n* [x] Find out why performance is so bad (hint number of database allocations).\n   * [x] Organize performance tests. -\u003e Was ignored.\n   * [x] Ratings are expensive, because the whole tree needs to queried for the rating of the root node.\n   * [x] MetaRating is costly.\n   * [x] Grammar of #10 should not cause bad performance. -\u003e Was ignored.\n   * [x] Constraint are based on Allocations, which causes many allocations. -\u003e Was ignored.\n* [ ] The end of this issue creates the next major version.\nBlog why version 3 was such a bad version.\nBlog about major content of version 4 and main issue of next version.\n* [x] Show POM that would work for example project and how to get the dependency.\n* [x] Create quick start project, so it's easy to try out things fast.\n   * [x] Use quick start project for alternative superfast introduction and recommended project template.\n   * [x] Document goals of quick start project.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1641340871,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9zigxBfc"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish additional trust.\n* [ ] Explain where to find predefined rating and grouping functions.\n* [ ] Visualize the propagation of lines inside the constraint tree.\n* [ ] Demonstrate solving the problem and explain, why hill climber often does not solve the problem.\n* [x] Find out why performance is so bad (hint number of database allocations).\n   * [x] Organize performance tests. -\u003e Was ignored.\n   * [x] Ratings are expensive, because the whole tree needs to queried for the rating of the root node.\n   * [x] MetaRating is costly.\n   * [x] Grammar of #10 should not cause bad performance. -\u003e Was ignored.\n   * [x] Constraint are based on Allocations, which causes many allocations. -\u003e Was ignored.\n* [ ] The end of this issue creates the next major version.\nBlog why version 3 was such a bad version.\nBlog about major content of version 4 and main issue of next version.\n* [x] Show POM that would work for example project and how to get the dependency.\n* [x] Create quick start project, so it's easy to try out things fast.\n   * [x] Use quick start project for alternative superfast introduction and recommended project template.\n   * [x] Document goals of quick start project.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1642983762,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9zijrp5o"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish additional trust.\n* [ ] Explain where to find predefined rating and grouping functions.\n* [ ] Visualize the propagation of lines inside the constraint tree.\n* [ ] Demonstrate solving the problem and explain, why hill climber often does not solve the problem.\n* [x] Find out why performance is so bad (hint number of database allocations).\n   * [x] Organize performance tests. -\u003e Was ignored.\n   * [x] Ratings are expensive, because the whole tree needs to queried for the rating of the root node.\n   * [x] MetaRating is costly.\n   * [x] Grammar of #10 should not cause bad performance. -\u003e Was ignored.\n   * [x] Constraint are based on Allocations, which causes many allocations. -\u003e Was ignored.\n* [ ] The end of this issue creates the next major version.\nBlog why version 3 was such a bad version.\nBlog about major content of version 4 and main issue of next version.\n* [x] Show POM that would work for example project and how to get the dependency.\n* [x] Create quick start project, so it's easy to try out things fast.\n   * [x] Use quick start project for alternative superfast introduction and recommended project template.\n   * [x] Document goals of quick start project.\n* [ ] Test `NQueenProblemDemo` in regular build, too, in order to ensure, that the introductory code is still correct.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1642983929,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9zijrqiM"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish additional trust.\n* [ ] Explain where to find predefined rating and grouping functions.\n* [ ] Visualize the propagation of lines inside the constraint tree.\n* [ ] Demonstrate solving the problem and explain, why hill climber often does not solve the problem.\n* [x] Find out why performance is so bad (hint number of database allocations).\n   * [x] Organize performance tests. -\u003e Was ignored.\n   * [x] Ratings are expensive, because the whole tree needs to queried for the rating of the root node.\n   * [x] MetaRating is costly.\n   * [x] Grammar of #10 should not cause bad performance. -\u003e Was ignored.\n   * [x] Constraint are based on Allocations, which causes many allocations. -\u003e Was ignored.\n* [ ] The end of this issue creates the next major version.\nBlog why version 3 was such a bad version.\nBlog about major content of version 4 and main issue of next version.\n* [x] Show POM that would work for example project and how to get the dependency.\n* [x] Create quick start project, so it's easy to try out things fast.\n   * [x] Use quick start project for alternative superfast introduction and recommended project template.\n   * [x] Document goals of quick start project.\n* [ ] Test `NQueenProblemDemo` in regular build, too, in order to ensure, that the introductory code is still correct.\n* [ ] Add short summary to every chapter.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1643065011,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9zij45Xc"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish additional trust.\n* [ ] Explain where to find predefined rating and grouping functions.\n* [ ] Visualize the propagation of lines inside the constraint tree.\n* [ ] Demonstrate solving the problem and explain, why hill climber often does not solve the problem.\n* [x] Find out why performance is so bad (hint number of database allocations).\n   * [x] Organize performance tests. -\u003e Was ignored.\n   * [x] Ratings are expensive, because the whole tree needs to queried for the rating of the root node.\n   * [x] MetaRating is costly.\n   * [x] Grammar of #10 should not cause bad performance. -\u003e Was ignored.\n   * [x] Constraint are based on Allocations, which causes many allocations. -\u003e Was ignored.\n* [ ] The end of this issue creates the next major version.\nBlog why version 3 was such a bad version.\nBlog about major content of version 4 and main issue of next version.\n* [x] Show POM that would work for example project and how to get the dependency.\n* [x] Create quick start project, so it's easy to try out things fast.\n   * [x] Use quick start project for alternative superfast introduction and recommended project template.\n   * [x] Document goals of quick start project.\n* [x] Test `NQueenProblemDemo` in regular build, too, in order to ensure, that the introductory code is still correct.\n* [ ] Add short summary to every chapter.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1643151668,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9zikHE1Y"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish additional trust.\n* [ ] Explain where to find predefined rating and grouping functions.\n* [ ] Visualize the propagation of lines inside the constraint tree.\n* [ ] Demonstrate solving the problem and explain, why hill climber often does not solve the problem.\n* [x] Find out why performance is so bad (hint number of database allocations).\n   * [x] Organize performance tests. -\u003e Was ignored.\n   * [x] Ratings are expensive, because the whole tree needs to queried for the rating of the root node.\n   * [x] MetaRating is costly.\n   * [x] Grammar of #10 should not cause bad performance. -\u003e Was ignored.\n   * [x] Constraint are based on Allocations, which causes many allocations. -\u003e Was ignored.\n* [ ] The end of this issue creates the next major version.\nBlog why version 3 was such a bad version.\nBlog about major content of version 4 and main issue of next version.\n* [x] Show POM that would work for example project and how to get the dependency.\n* [x] Create quick start project, so it's easy to try out things fast.\n   * [x] Use quick start project for alternative superfast introduction and recommended project template.\n   * [x] Document goals of quick start project.\n* [x] Test `NQueenProblemDemo` in regular build, too, in order to ensure, that the introductory code is still correct.\n* [ ] Add short summary to every chapter.\n* [ ] Performance got broken.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1643155817,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9zikHk-o"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish additional trust.\n* [ ] Explain where to find predefined rating and grouping functions.\n* [ ] Visualize the propagation of lines inside the constraint tree.\n* [ ] Demonstrate solving the problem and explain, why hill climber often does not solve the problem.\n* [x] Find out why performance is so bad (hint number of database allocations).\n   * [x] Organize performance tests. -\u003e Was ignored.\n   * [x] Ratings are expensive, because the whole tree needs to queried for the rating of the root node.\n   * [x] MetaRating is costly.\n   * [x] Grammar of #10 should not cause bad performance. -\u003e Was ignored.\n   * [x] Constraint are based on Allocations, which causes many allocations. -\u003e Was ignored.\n* [ ] The end of this issue creates the next major version.\nBlog why version 3 was such a bad version.\nBlog about major content of version 4 and main issue of next version.\n* [x] Show POM that would work for example project and how to get the dependency.\n* [x] Create quick start project, so it's easy to try out things fast.\n   * [x] Use quick start project for alternative superfast introduction and recommended project template.\n   * [x] Document goals of quick start project.\n* [x] Test `NQueenProblemDemo` in regular build, too, in order to ensure, that the introductory code is still correct.\n* [ ] Add short summary to every chapter.\n* [x] Performance got broken.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1643242658,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9zikVR1o"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish additional trust.\n* [ ] Explain where to find predefined rating and grouping functions.\n* [ ] Visualize the propagation of lines inside the constraint tree.\n* [ ] Demonstrate solving the problem and explain, why hill climber often does not solve the problem.\n* [x] Find out why performance is so bad (hint number of database allocations).\n   * [x] Organize performance tests. -\u003e Was ignored.\n   * [x] Ratings are expensive, because the whole tree needs to queried for the rating of the root node.\n   * [x] MetaRating is costly.\n   * [x] Grammar of #10 should not cause bad performance. -\u003e Was ignored.\n   * [x] Constraint are based on Allocations, which causes many allocations. -\u003e Was ignored.\n* [ ] The end of this issue creates the next major version.\nBlog why version 3 was such a bad version.\nBlog about major content of version 4 and main issue of next version.\n* [x] Show POM that would work for example project and how to get the dependency.\n* [x] Create quick start project, so it's easy to try out things fast.\n   * [x] Use quick start project for alternative superfast introduction and recommended project template.\n   * [x] Document goals of quick start project.\n* [x] Test `NQueenProblemDemo` in regular build, too, in order to ensure, that the introductory code is still correct.\n* [x] Add short summary to every chapter.\n* [x] Performance got broken.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1643321548,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9ziki1Hk"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish additional trust.\n* [ ] Explain where to find predefined rating and grouping functions.\n* [ ] Visualize the propagation of lines inside the constraint tree.\n* [ ] Demonstrate solving the problem and explain, why hill climber often does not solve the problem.\n* [x] Find out why performance is so bad (hint number of database allocations).\n   * [x] Organize performance tests. -\u003e Was ignored.\n   * [x] Ratings are expensive, because the whole tree needs to queried for the rating of the root node.\n   * [x] MetaRating is costly.\n   * [x] Grammar of #10 should not cause bad performance. -\u003e Was ignored.\n   * [x] Constraint are based on Allocations, which causes many allocations. -\u003e Was ignored.\n* [ ] The end of this issue creates the next major version.\nBlog why version 3 was such a bad version.\nBlog about major content of version 4 and main issue of next version.\n* [x] Show POM that would work for example project and how to get the dependency.\n* [x] Create quick start project, so it's easy to try out things fast.\n   * [x] Use quick start project for alternative superfast introduction and recommended project template.\n   * [x] Document goals of quick start project.\n* [x] Test `NQueenProblemDemo` in regular build, too, in order to ensure, that the introductory code is still correct.\n* [x] Add short summary to every chapter.\n* [x] Performance got broken.\n* [ ] Add basic explanation of data model.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1643324101,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9zikjMu8"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish additional trust.\n* [ ] Explain where to find predefined rating and grouping functions.\n* [ ] Visualize the propagation of lines inside the constraint tree.\n* [x] Demonstrate solving the problem and explain, why hill climber often does not solve the problem.\n* [x] Find out why performance is so bad (hint number of database allocations).\n   * [x] Organize performance tests. -\u003e Was ignored.\n   * [x] Ratings are expensive, because the whole tree needs to queried for the rating of the root node.\n   * [x] MetaRating is costly.\n   * [x] Grammar of #10 should not cause bad performance. -\u003e Was ignored.\n   * [x] Constraint are based on Allocations, which causes many allocations. -\u003e Was ignored.\n* [ ] The end of this issue creates the next major version.\nBlog why version 3 was such a bad version.\nBlog about major content of version 4 and main issue of next version.\n* [x] Show POM that would work for example project and how to get the dependency.\n* [x] Create quick start project, so it's easy to try out things fast.\n   * [x] Use quick start project for alternative superfast introduction and recommended project template.\n   * [x] Document goals of quick start project.\n* [x] Test `NQueenProblemDemo` in regular build, too, in order to ensure, that the introductory code is still correct.\n* [x] Add short summary to every chapter.\n* [x] Performance got broken.\n* [ ] Add basic explanation of data model.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1643845210,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9zilidfo"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish additional trust.\n* [ ] Explain where to find predefined rating and grouping functions.\n* [ ] Visualize the propagation of lines inside the constraint tree.\n* [x] Demonstrate solving the problem and explain, why hill climber often does not solve the problem.\n* [x] Find out why performance is so bad (hint number of database allocations).\n   * [x] Organize performance tests. -\u003e Was ignored.\n   * [x] Ratings are expensive, because the whole tree needs to queried for the rating of the root node.\n   * [x] MetaRating is costly.\n   * [x] Grammar of #10 should not cause bad performance. -\u003e Was ignored.\n   * [x] Constraint are based on Allocations, which causes many allocations. -\u003e Was ignored.\n* [ ] The end of this issue creates the next major version.\nBlog why version 3 was such a bad version.\nBlog about major content of version 4 and main issue of next version.\n* [x] Show POM that would work for example project and how to get the dependency.\n* [x] Create quick start project, so it's easy to try out things fast.\n   * [x] Use quick start project for alternative superfast introduction and recommended project template.\n   * [x] Document goals of quick start project.\n* [x] Test `NQueenProblemDemo` in regular build, too, in order to ensure, that the introductory code is still correct.\n* [x] Add short summary to every chapter.\n* [x] Performance got broken.\n* [ ] Add basic explanation of data model.\n* [ ] Make object location perfect and highly consistent in each images (not across all images).\n   * [ ] Add this SVG to guidelines.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1643845562,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9ziliga4"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish additional trust.\n* [ ] Explain where to find predefined rating and grouping functions.\n* [ ] Visualize the propagation of lines inside the constraint tree.\n* [x] Demonstrate solving the problem and explain, why hill climber often does not solve the problem.\n* [x] Find out why performance is so bad (hint number of database allocations).\n   * [x] Organize performance tests. -\u003e Was ignored.\n   * [x] Ratings are expensive, because the whole tree needs to queried for the rating of the root node.\n   * [x] MetaRating is costly.\n   * [x] Grammar of #10 should not cause bad performance. -\u003e Was ignored.\n   * [x] Constraint are based on Allocations, which causes many allocations. -\u003e Was ignored.\n* [ ] The end of this issue creates the next major version.\nBlog why version 3 was such a bad version.\nBlog about major content of version 4 and main issue of next version.\n* [x] Show POM that would work for example project and how to get the dependency.\n* [x] Create quick start project, so it's easy to try out things fast.\n   * [x] Use quick start project for alternative superfast introduction and recommended project template.\n   * [x] Document goals of quick start project.\n* [x] Test `NQueenProblemDemo` in regular build, too, in order to ensure, that the introductory code is still correct.\n* [x] Add short summary to every chapter.\n* [x] Performance got broken.\n* [ ] Add basic explanation of data model.\n* [ ] Make object location perfect and highly consistent in each images (not across all images).\n   * [ ] Add this SVG to guidelines.\n* [ ] Create default color schema.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1643845574,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9ziliggI"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish additional trust.\n* [ ] Explain where to find predefined rating and grouping functions.\n* [ ] Visualize the propagation of lines inside the constraint tree.\n* [x] Demonstrate solving the problem and explain, why hill climber often does not solve the problem.\n* [x] Find out why performance is so bad (hint number of database allocations).\n   * [x] Organize performance tests. -\u003e Was ignored.\n   * [x] Ratings are expensive, because the whole tree needs to queried for the rating of the root node.\n   * [x] MetaRating is costly.\n   * [x] Grammar of #10 should not cause bad performance. -\u003e Was ignored.\n   * [x] Constraint are based on Allocations, which causes many allocations. -\u003e Was ignored.\n* [ ] The end of this issue creates the next major version.\nBlog why version 3 was such a bad version.\nBlog about major content of version 4 and main issue of next version.\n* [x] Show POM that would work for example project and how to get the dependency.\n* [x] Create quick start project, so it's easy to try out things fast.\n   * [x] Use quick start project for alternative superfast introduction and recommended project template.\n   * [x] Document goals of quick start project.\n* [x] Test `NQueenProblemDemo` in regular build, too, in order to ensure, that the introductory code is still correct.\n* [x] Add short summary to every chapter.\n* [x] Performance got broken.\n* [ ] Add basic explanation of data model.\n* [ ] Make object location perfect and highly consistent in each images (not across all images).\n   * [ ] Add this SVG to guidelines.\n* [ ] Create default color schema, if colors are used.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1644530615,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9zim_KXs"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish additional trust.\n* [ ] Explain where to find predefined rating and grouping functions.\n* [ ] Visualize the propagation of lines inside the constraint tree.\n* [x] Demonstrate solving the problem and explain, why hill climber often does not solve the problem.\n* [x] Find out why performance is so bad (hint number of database allocations).\n   * [x] Organize performance tests. -\u003e Was ignored.\n   * [x] Ratings are expensive, because the whole tree needs to queried for the rating of the root node.\n   * [x] MetaRating is costly.\n   * [x] Grammar of #10 should not cause bad performance. -\u003e Was ignored.\n   * [x] Constraint are based on Allocations, which causes many allocations. -\u003e Was ignored.\n* [ ] The end of this issue creates the next major version.\nBlog why version 3 was such a bad version.\nBlog about major content of version 4 and main issue of next version.\n* [x] Show POM that would work for example project and how to get the dependency.\n* [x] Create quick start project, so it's easy to try out things fast.\n   * [x] Use quick start project for alternative superfast introduction and recommended project template.\n   * [x] Document goals of quick start project.\n* [x] Test `NQueenProblemDemo` in regular build, too, in order to ensure, that the introductory code is still correct.\n* [x] Add short summary to every chapter.\n* [x] Performance got broken.\n* [ ] Add basic explanation of data model.\n* [ ] Make object location perfect and highly consistent in each images (not across all images).\n   * [ ] Add this SVG to guidelines.\n* [ ] Create default color schema, if colors are used.\n* [ ] Fix the background image.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1644531485,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9zim_S60"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish additional trust.\n* [ ] Explain where to find predefined rating and grouping functions.\n* [ ] Visualize the propagation of lines inside the constraint tree.\n* [x] Demonstrate solving the problem and explain, why hill climber often does not solve the problem.\n* [x] Find out why performance is so bad (hint number of database allocations).\n   * [x] Organize performance tests. -\u003e Was ignored.\n   * [x] Ratings are expensive, because the whole tree needs to queried for the rating of the root node.\n   * [x] MetaRating is costly.\n   * [x] Grammar of #10 should not cause bad performance. -\u003e Was ignored.\n   * [x] Constraint are based on Allocations, which causes many allocations. -\u003e Was ignored.\n* [ ] The end of this issue creates the next major version.\nBlog why version 3 was such a bad version.\nBlog about major content of version 4 and main issue of next version.\n* [x] Show POM that would work for example project and how to get the dependency.\n* [x] Create quick start project, so it's easy to try out things fast.\n   * [x] Use quick start project for alternative superfast introduction and recommended project template.\n   * [x] Document goals of quick start project.\n* [x] Test `NQueenProblemDemo` in regular build, too, in order to ensure, that the introductory code is still correct.\n* [x] Add short summary to every chapter.\n* [x] Performance got broken.\n* [ ] Make object location perfect and highly consistent in each images (not across all images).\n   * [ ] Add this SVG to guidelines.\n* [ ] Create default color schema, if colors are used.\n* [ ] Fix the background image.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1644531511,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9zim_TK0"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish additional trust.\n* [ ] Explain where to find predefined rating and grouping functions.\n* [ ] Visualize the propagation of lines inside the constraint tree.\n* [x] Demonstrate solving the problem and explain, why hill climber often does not solve the problem.\n* [x] Find out why performance is so bad (hint number of database allocations).\n   * [x] Organize performance tests. -\u003e Was ignored.\n   * [x] Ratings are expensive, because the whole tree needs to queried for the rating of the root node.\n   * [x] MetaRating is costly.\n   * [x] Grammar of #10 should not cause bad performance. -\u003e Was ignored.\n   * [x] Constraint are based on Allocations, which causes many allocations. -\u003e Was ignored.\n* [ ] The end of this issue creates the next major version.\nBlog why version 3 was such a bad version.\nBlog about major content of version 4 and main issue of next version.\n* [x] Show POM that would work for example project and how to get the dependency.\n* [x] Create quick start project, so it's easy to try out things fast.\n   * [x] Use quick start project for alternative superfast introduction and recommended project template.\n   * [x] Document goals of quick start project.\n* [x] Test `NQueenProblemDemo` in regular build, too, in order to ensure, that the introductory code is still correct.\n* [x] Add short summary to every chapter.\n* [x] Performance got broken.\n* [ ] Create basic explenation of data model.\n* [ ] Make object location perfect and highly consistent in each images (not across all images).\n   * [ ] Add this SVG to guidelines.\n* [ ] Create default color schema, if colors are used.\n* [ ] Fix the background image.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1644531532,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9zim_TeQ"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish additional trust.\n* [ ] Explain where to find predefined rating and grouping functions.\n* [ ] Visualize the propagation of lines inside the constraint tree.\n* [x] Demonstrate solving the problem and explain, why hill climber often does not solve the problem.\n* [x] Find out why performance is so bad (hint number of database allocations).\n   * [x] Organize performance tests. -\u003e Was ignored.\n   * [x] Ratings are expensive, because the whole tree needs to queried for the rating of the root node.\n   * [x] MetaRating is costly.\n   * [x] Grammar of #10 should not cause bad performance. -\u003e Was ignored.\n   * [x] Constraint are based on Allocations, which causes many allocations. -\u003e Was ignored.\n* [ ] The end of this issue creates the next major version.\nBlog why version 3 was such a bad version.\nBlog about major content of version 4 and main issue of next version.\n* [x] Show POM that would work for example project and how to get the dependency.\n* [x] Create quick start project, so it's easy to try out things fast.\n   * [x] Use quick start project for alternative superfast introduction and recommended project template.\n   * [x] Document goals of quick start project.\n* [x] Test `NQueenProblemDemo` in regular build, too, in order to ensure, that the introductory code is still correct.\n* [x] Add short summary to every chapter.\n* [x] Performance got broken.\n* [ ] Create basic explenation of data model.\n* [x] Make object location perfect and highly consistent in each images (not across all images).\n   * [ ] Add this SVG to guidelines.\n* [ ] Create default color schema, if colors are used.\n* [ ] Fix the background image.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1644531533,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9zim_Tf4"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish additional trust.\n* [ ] Explain where to find predefined rating and grouping functions.\n* [ ] Visualize the propagation of lines inside the constraint tree.\n* [x] Demonstrate solving the problem and explain, why hill climber often does not solve the problem.\n* [x] Find out why performance is so bad (hint number of database allocations).\n   * [x] Organize performance tests. -\u003e Was ignored.\n   * [x] Ratings are expensive, because the whole tree needs to queried for the rating of the root node.\n   * [x] MetaRating is costly.\n   * [x] Grammar of #10 should not cause bad performance. -\u003e Was ignored.\n   * [x] Constraint are based on Allocations, which causes many allocations. -\u003e Was ignored.\n* [ ] The end of this issue creates the next major version.\nBlog why version 3 was such a bad version.\nBlog about major content of version 4 and main issue of next version.\n* [x] Show POM that would work for example project and how to get the dependency.\n* [x] Create quick start project, so it's easy to try out things fast.\n   * [x] Use quick start project for alternative superfast introduction and recommended project template.\n   * [x] Document goals of quick start project.\n* [x] Test `NQueenProblemDemo` in regular build, too, in order to ensure, that the introductory code is still correct.\n* [x] Add short summary to every chapter.\n* [x] Performance got broken.\n* [ ] Create basic explenation of data model.\n* [x] Make object location perfect and highly consistent in each images (not across all images).\n   * [x] Add this SVG to guidelines.\n* [ ] Create default color schema, if colors are used.\n* [ ] Fix the background image.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1644531541,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9zim_Tkw"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish additional trust.\n* [ ] Explain where to find predefined rating and grouping functions.\n* [ ] Visualize the propagation of lines inside the constraint tree.\n* [x] Demonstrate solving the problem and explain, why hill climber often does not solve the problem.\n* [x] Find out why performance is so bad (hint number of database allocations).\n   * [x] Organize performance tests. -\u003e Was ignored.\n   * [x] Ratings are expensive, because the whole tree needs to queried for the rating of the root node.\n   * [x] MetaRating is costly.\n   * [x] Grammar of #10 should not cause bad performance. -\u003e Was ignored.\n   * [x] Constraint are based on Allocations, which causes many allocations. -\u003e Was ignored.\n* [ ] The end of this issue creates the next major version.\nBlog why version 3 was such a bad version.\nBlog about major content of version 4 and main issue of next version.\n* [x] Show POM that would work for example project and how to get the dependency.\n* [x] Create quick start project, so it's easy to try out things fast.\n   * [x] Use quick start project for alternative superfast introduction and recommended project template.\n   * [x] Document goals of quick start project.\n* [x] Test `NQueenProblemDemo` in regular build, too, in order to ensure, that the introductory code is still correct.\n* [x] Add short summary to every chapter.\n* [x] Performance got broken.\n* [ ] Create basic explenation of data model.\n* [x] Make object location perfect and highly consistent in images (not across all images).\n   * [x] Add this SVG to guidelines.\n* [ ] Create default color schema, if colors are used.\n* [ ] Fix the background image.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1644531554,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9zim_Tus"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish additional trust.\n* [ ] Explain where to find predefined rating and grouping functions.\n* [ ] Visualize the propagation of lines inside the constraint tree.\n* [x] Demonstrate solving the problem and explain, why hill climber often does not solve the problem.\n* [x] Find out why performance is so bad (hint number of database allocations).\n   * [x] Organize performance tests. -\u003e Was ignored.\n   * [x] Ratings are expensive, because the whole tree needs to queried for the rating of the root node.\n   * [x] MetaRating is costly.\n   * [x] Grammar of #10 should not cause bad performance. -\u003e Was ignored.\n   * [x] Constraint are based on Allocations, which causes many allocations. -\u003e Was ignored.\n* [ ] The end of this issue creates the next major version.\nBlog why version 3 was such a bad version.\nBlog about major content of version 4 and main issue of next version.\n* [x] Show POM that would work for example project and how to get the dependency.\n* [x] Create quick start project, so it's easy to try out things fast.\n   * [x] Use quick start project for alternative superfast introduction and recommended project template.\n   * [x] Document goals of quick start project.\n* [x] Test `NQueenProblemDemo` in regular build, too, in order to ensure, that the introductory code is still correct.\n* [x] Add short summary to every chapter.\n* [x] Performance got broken.\n* [ ] Create basic explenation of data model.\n* [x] Make object location perfect and highly consistent in images (not across all images).\n   * [x] Add this SVG to guidelines.\n* [ ] Fix the background image.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1644531562,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9zim_T1E"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish additional trust.\n* [ ] Explain where to find predefined rating and grouping functions.\n* [x] Visualize the propagation of lines inside the constraint tree.\n* [x] Demonstrate solving the problem and explain, why hill climber often does not solve the problem.\n* [x] Find out why performance is so bad (hint number of database allocations).\n   * [x] Organize performance tests. -\u003e Was ignored.\n   * [x] Ratings are expensive, because the whole tree needs to queried for the rating of the root node.\n   * [x] MetaRating is costly.\n   * [x] Grammar of #10 should not cause bad performance. -\u003e Was ignored.\n   * [x] Constraint are based on Allocations, which causes many allocations. -\u003e Was ignored.\n* [ ] The end of this issue creates the next major version.\nBlog why version 3 was such a bad version.\nBlog about major content of version 4 and main issue of next version.\n* [x] Show POM that would work for example project and how to get the dependency.\n* [x] Create quick start project, so it's easy to try out things fast.\n   * [x] Use quick start project for alternative superfast introduction and recommended project template.\n   * [x] Document goals of quick start project.\n* [x] Test `NQueenProblemDemo` in regular build, too, in order to ensure, that the introductory code is still correct.\n* [x] Add short summary to every chapter.\n* [x] Performance got broken.\n* [ ] Create basic explenation of data model.\n* [x] Make object location perfect and highly consistent in images (not across all images).\n   * [x] Add this SVG to guidelines.\n* [ ] Fix the background image.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1644531606,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9zim_UPQ"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish additional trust.\n* [ ] Explain where to find predefined rating and grouping functions.\n* [x] Visualize the propagation of lines inside the constraint tree.\n* [x] Demonstrate solving the problem and explain, why hill climber often does not solve the problem.\n* [x] Find out why performance is so bad (hint number of database allocations).\n   * [x] Organize performance tests. -\u003e Was ignored.\n   * [x] Ratings are expensive, because the whole tree needs to queried for the rating of the root node.\n   * [x] MetaRating is costly.\n   * [x] Grammar of #10 should not cause bad performance. -\u003e Was ignored.\n   * [x] Constraint are based on Allocations, which causes many allocations. -\u003e Was ignored.\n* [ ] The end of this issue creates the next major version.\nBlog why version 3 was such a bad version.\nBlog about major content of version 4 and main issue of next version.\n* [x] Show POM that would work for example project and how to get the dependency.\n* [x] Create quick start project, so it's easy to try out things fast.\n   * [x] Use quick start project for alternative superfast introduction and recommended project template.\n   * [x] Document goals of quick start project.\n* [x] Test `NQueenProblemDemo` in regular build, too, in order to ensure, that the introductory code is still correct.\n* [x] Add short summary to every chapter.\n* [x] Performance got broken.\n* [ ] Create basic explenation of data model.\n* [x] Make object location perfect and highly consistent in images (not across all images).\n   * [x] Add this SVG to guidelines.\n* [ ] Fix the background image.\n* [ ] Fix list visualization (its hard to see where one point starts and end).","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1644532573,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9zim_dfw"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish additional trust.\n* [ ] Explain where to find predefined rating and grouping functions.\n* [x] Visualize the propagation of lines inside the constraint tree.\n* [x] Demonstrate solving the problem and explain, why hill climber often does not solve the problem.\n* [x] Find out why performance is so bad (hint number of database allocations).\n   * [x] Organize performance tests. -\u003e Was ignored.\n   * [x] Ratings are expensive, because the whole tree needs to queried for the rating of the root node.\n   * [x] MetaRating is costly.\n   * [x] Grammar of #10 should not cause bad performance. -\u003e Was ignored.\n   * [x] Constraint are based on Allocations, which causes many allocations. -\u003e Was ignored.\n* [ ] The end of this issue creates the next major version.\nBlog why version 3 was such a bad version.\nBlog about major content of version 4 and main issue of next version.\n* [x] Show POM that would work for example project and how to get the dependency.\n* [x] Create quick start project, so it's easy to try out things fast.\n   * [x] Use quick start project for alternative superfast introduction and recommended project template.\n   * [x] Document goals of quick start project.\n* [x] Test `NQueenProblemDemo` in regular build, too, in order to ensure, that the introductory code is still correct.\n* [x] Add short summary to every chapter.\n* [x] Performance got broken.\n* [ ] Create basic explenation of data model.\n* [x] Make object location perfect and highly consistent in images (not across all images).\n   * [x] Add this SVG to guidelines.\n* [ ] Fix list visualization (its hard to see where one point starts and end).","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1644533261,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9zim_j3U"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish additional trust.\n* [ ] Explain where to find predefined rating and grouping functions.\n* [x] Visualize the propagation of lines inside the constraint tree.\n* [x] Demonstrate solving the problem and explain, why hill climber often does not solve the problem.\n* [x] Find out why performance is so bad (hint number of database allocations).\n   * [x] Organize performance tests. -\u003e Was ignored.\n   * [x] Ratings are expensive, because the whole tree needs to queried for the rating of the root node.\n   * [x] MetaRating is costly.\n   * [x] Grammar of #10 should not cause bad performance. -\u003e Was ignored.\n   * [x] Constraint are based on Allocations, which causes many allocations. -\u003e Was ignored.\n* [ ] The end of this issue creates the next major version.\nBlog why version 3 was such a bad version.\nBlog about major content of version 4 and main issue of next version.\n* [x] Show POM that would work for example project and how to get the dependency.\n* [x] Create quick start project, so it's easy to try out things fast.\n   * [x] Use quick start project for alternative superfast introduction and recommended project template.\n   * [x] Document goals of quick start project.\n* [x] Test `NQueenProblemDemo` in regular build, too, in order to ensure, that the introductory code is still correct.\n* [x] Add short summary to every chapter.\n* [x] Performance got broken.\n* [ ] Create basic explenation of data model.\n* [x] Make object location perfect and highly consistent in images (not across all images).\n   * [x] Add this SVG to guidelines.\n* [x] Fix list visualization (its hard to see where one point starts and end).","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1644533340,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9zim_kjc"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish additional trust.\n* [ ] Explain where to find predefined rating and grouping functions.\n* [x] Visualize the propagation of lines inside the constraint tree.\n* [x] Demonstrate solving the problem and explain, why hill climber often does not solve the problem.\n* [x] Find out why performance is so bad (hint number of database allocations).\n   * [x] Organize performance tests. -\u003e Was ignored.\n   * [x] Ratings are expensive, because the whole tree needs to queried for the rating of the root node.\n   * [x] MetaRating is costly.\n   * [x] Grammar of #10 should not cause bad performance. -\u003e Was ignored.\n   * [x] Constraint are based on Allocations, which causes many allocations. -\u003e Was ignored.\n* [ ] The end of this issue creates the next major version.\nBlog why version 3 was such a bad version.\nBlog about major content of version 4 and main issue of next version.\n* [x] Show POM that would work for example project and how to get the dependency.\n* [x] Create quick start project, so it's easy to try out things fast.\n   * [x] Use quick start project for alternative superfast introduction and recommended project template.\n   * [x] Document goals of quick start project.\n* [x] Test `NQueenProblemDemo` in regular build, too, in order to ensure, that the introductory code is still correct.\n* [x] Add short summary to every chapter.\n* [x] Performance got broken.\n* [ ] Create basic explenation of data model.\n* [x] Make object location perfect and highly consistent in images (not across all images).\n   * [x] Add this SVG to guidelines.\n* [x] Fix list visualization (its hard to see where one point starts and end).\n* [ ] Remove disturbing background of images.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1644533349,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9zim_kp8"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish additional trust.\n* [ ] Explain where to find predefined rating and grouping functions.\n* [x] Visualize the propagation of lines inside the constraint tree.\n* [x] Demonstrate solving the problem and explain, why hill climber often does not solve the problem.\n* [x] Find out why performance is so bad (hint number of database allocations).\n   * [x] Organize performance tests. -\u003e Was ignored.\n   * [x] Ratings are expensive, because the whole tree needs to queried for the rating of the root node.\n   * [x] MetaRating is costly.\n   * [x] Grammar of #10 should not cause bad performance. -\u003e Was ignored.\n   * [x] Constraint are based on Allocations, which causes many allocations. -\u003e Was ignored.\n* [ ] The end of this issue creates the next major version.\nBlog why version 3 was such a bad version.\nBlog about major content of version 4 and main issue of next version.\n* [x] Show POM that would work for example project and how to get the dependency.\n* [x] Create quick start project, so it's easy to try out things fast.\n   * [x] Use quick start project for alternative superfast introduction and recommended project template.\n   * [x] Document goals of quick start project.\n* [x] Test `NQueenProblemDemo` in regular build, too, in order to ensure, that the introductory code is still correct.\n* [x] Add short summary to every chapter.\n* [x] Performance got broken.\n* [ ] Create basic explenation of data model.\n* [x] Make object location perfect and highly consistent in images (not across all images).\n   * [x] Add this SVG to guidelines.\n* [x] Fix list visualization (its hard to see where one point starts and end).\n* [ ] Try to remove disturbing background of images.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1644533392,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9zim_lBs"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish additional trust.\n* [ ] Explain where to find predefined rating and grouping functions.\n* [x] Visualize the propagation of lines inside the constraint tree.\n* [x] Demonstrate solving the problem and explain, why hill climber often does not solve the problem.\n* [x] Find out why performance is so bad (hint number of database allocations).\n   * [x] Organize performance tests. -\u003e Was ignored.\n   * [x] Ratings are expensive, because the whole tree needs to queried for the rating of the root node.\n   * [x] MetaRating is costly.\n   * [x] Grammar of #10 should not cause bad performance. -\u003e Was ignored.\n   * [x] Constraint are based on Allocations, which causes many allocations. -\u003e Was ignored.\n* [ ] The end of this issue creates the next major version.\nBlog why version 3 was such a bad version.\nBlog about major content of version 4 and main issue of next version.\n* [x] Show POM that would work for example project and how to get the dependency.\n* [x] Create quick start project, so it's easy to try out things fast.\n   * [x] Use quick start project for alternative superfast introduction and recommended project template.\n   * [x] Document goals of quick start project.\n* [x] Test `NQueenProblemDemo` in regular build, too, in order to ensure, that the introductory code is still correct.\n* [x] Add short summary to every chapter.\n* [x] Performance got broken.\n* [ ] Create basic explenation of data model.\n* [x] Make object location perfect and highly consistent in images (not across all images).\n   * [x] Add this SVG to guidelines.\n* [x] Fix list visualization (its hard to see where one point starts and end).\n* [ ] Try to remove disturbing background of images.\n* [ ] Fix styling of code blocks.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1644787201,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9zinVCek"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish additional trust.\n* [ ] Explain where to find predefined rating and grouping functions.\n* [x] Visualize the propagation of lines inside the constraint tree.\n* [x] Demonstrate solving the problem and explain, why hill climber often does not solve the problem.\n* [x] Find out why performance is so bad (hint number of database allocations).\n   * [x] Organize performance tests. -\u003e Was ignored.\n   * [x] Ratings are expensive, because the whole tree needs to queried for the rating of the root node.\n   * [x] MetaRating is costly.\n   * [x] Grammar of #10 should not cause bad performance. -\u003e Was ignored.\n   * [x] Constraint are based on Allocations, which causes many allocations. -\u003e Was ignored.\n* [ ] The end of this issue creates the next major version.\nBlog why version 3 was such a bad version.\nBlog about major content of version 4 and main issue of next version.\n* [x] Show POM that would work for example project and how to get the dependency.\n* [x] Create quick start project, so it's easy to try out things fast.\n   * [x] Use quick start project for alternative superfast introduction and recommended project template.\n   * [x] Document goals of quick start project.\n* [x] Test `NQueenProblemDemo` in regular build, too, in order to ensure, that the introductory code is still correct.\n* [x] Add short summary to every chapter.\n* [x] Performance got broken.\n* [ ] Create basic explenation of data model.\n* [x] Make object location perfect and highly consistent in images (not across all images).\n   * [x] Add this SVG to guidelines.\n* [x] Fix list visualization (its hard to see where one point starts and end).\n* [ ] Try to remove disturbing background of images.\n* [x] Fix styling of code blocks.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1644790628,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9zinVM64"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [ ] Explain custom groupings, as a way to play with Gel's API details and establish additional trust.\n* [ ] Explain where to find predefined rating and grouping functions.\n* [x] Visualize the propagation of lines inside the constraint tree.\n* [x] Demonstrate solving the problem and explain, why hill climber often does not solve the problem.\n* [x] Find out why performance is so bad (hint number of database allocations).\n   * [x] Organize performance tests. -\u003e Was ignored.\n   * [x] Ratings are expensive, because the whole tree needs to queried for the rating of the root node.\n   * [x] MetaRating is costly.\n   * [x] Grammar of #10 should not cause bad performance. -\u003e Was ignored.\n   * [x] Constraint are based on Allocations, which causes many allocations. -\u003e Was ignored.\n* [ ] The end of this issue creates the next major version.\nBlog why version 3 was such a bad version.\nBlog about major content of version 4 and main issue of next version.\n* [x] Show POM that would work for example project and how to get the dependency.\n* [x] Create quick start project, so it's easy to try out things fast.\n   * [x] Use quick start project for alternative superfast introduction and recommended project template.\n   * [x] Document goals of quick start project.\n* [x] Test `NQueenProblemDemo` in regular build, too, in order to ensure, that the introductory code is still correct.\n* [x] Add short summary to every chapter.\n* [x] Performance got broken.\n* [ ] Create basic explenation of data model.\n* [x] Make object location perfect and highly consistent in images (not across all images).\n   * [x] Add this SVG to guidelines.\n* [x] Fix list visualization (its hard to see where one point starts and end).\n* [x] Try to remove disturbing line in background.\n* [x] Fix styling of code blocks.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1644792900,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9zinVT7w"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [x] Explain custom groupings, as a way to play with Gel's API details and establish additional trust.-\u003e Not needed right now, because it is just an introduction to constraint system. Too many details will make the introduction harder to understand.\n* [x] Explain where to find predefined rating and grouping functions. -\u003e Not needed right now, because it is just an introduction to constraint system. Too many details will make the introduction harder to understand.\n* [x] Visualize the propagation of lines inside the constraint tree.\n* [x] Demonstrate solving the problem and explain, why hill climber often does not solve the problem.\n* [x] Find out why performance is so bad (hint number of database allocations).\n   * [x] Organize performance tests. -\u003e Was ignored.\n   * [x] Ratings are expensive, because the whole tree needs to queried for the rating of the root node.\n   * [x] MetaRating is costly.\n   * [x] Grammar of #10 should not cause bad performance. -\u003e Was ignored.\n   * [x] Constraint are based on Allocations, which causes many allocations. -\u003e Was ignored.\n* [ ] The end of this issue creates the next major version.\nBlog why version 3 was such a bad version.\nBlog about major content of version 4 and main issue of next version.\n* [x] Show POM that would work for example project and how to get the dependency.\n* [x] Create quick start project, so it's easy to try out things fast.\n   * [x] Use quick start project for alternative superfast introduction and recommended project template.\n   * [x] Document goals of quick start project.\n* [x] Test `NQueenProblemDemo` in regular build, too, in order to ensure, that the introductory code is still correct.\n* [x] Add short summary to every chapter.\n* [x] Performance got broken.\n* [ ] Create basic explanation of data model.\n* [x] Make object location perfect and highly consistent in images (not across all images).\n   * [x] Add this SVG to guidelines.\n* [x] Fix list visualization (its hard to see where one point starts and end).\n* [x] Try to remove disturbing line in background.\n* [x] Fix styling of code blocks.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1644795418,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9zinVdUQ"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [x] Explain custom groupings, as a way to play with Gel's API details and establish additional trust.-\u003e Not needed right now, because it is just an introduction to constraint system. Too many details will make the introduction harder to understand.\n* [x] Explain where to find predefined rating and grouping functions. -\u003e Not needed right now, because it is just an introduction to constraint system. Too many details will make the introduction harder to understand.\n* [x] Visualize the propagation of lines inside the constraint tree.\n* [x] Demonstrate solving the problem and explain, why hill climber often does not solve the problem.\n* [x] Find out why performance is so bad (hint number of database allocations).\n   * [x] Organize performance tests. -\u003e Was ignored.\n   * [x] Ratings are expensive, because the whole tree needs to queried for the rating of the root node.\n   * [x] MetaRating is costly.\n   * [x] Grammar of #10 should not cause bad performance. -\u003e Was ignored.\n   * [x] Constraint are based on Allocations, which causes many allocations. -\u003e Was ignored.\n* [x] The end of this issue creates the next major version.\nBlog why version 3 was such a bad version.\nBlog about major content of version 4 and main issue of next version.\n* [x] Show POM that would work for example project and how to get the dependency.\n* [x] Create quick start project, so it's easy to try out things fast.\n   * [x] Use quick start project for alternative superfast introduction and recommended project template.\n   * [x] Document goals of quick start project.\n* [x] Test `NQueenProblemDemo` in regular build, too, in order to ensure, that the introductory code is still correct.\n* [x] Add short summary to every chapter.\n* [x] Performance got broken.\n* [ ] Create basic explanation of data model.\n* [x] Make object location perfect and highly consistent in images (not across all images).\n   * [x] Add this SVG to guidelines.\n* [x] Fix list visualization (its hard to see where one point starts and end).\n* [x] Try to remove disturbing line in background.\n* [x] Fix styling of code blocks.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1644800700,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9zinV2fU"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [x] Explain custom groupings, as a way to play with Gel's API details and establish additional trust.-\u003e Not needed right now, because it is just an introduction to constraint system. Too many details will make the introduction harder to understand.\n* [x] Explain where to find predefined rating and grouping functions. -\u003e Not needed right now, because it is just an introduction to constraint system. Too many details will make the introduction harder to understand.\n* [x] Visualize the propagation of lines inside the constraint tree.\n* [x] Demonstrate solving the problem and explain, why hill climber often does not solve the problem.\n* [x] Find out why performance is so bad (hint number of database allocations).\n   * [x] Organize performance tests. -\u003e Was ignored.\n   * [x] Ratings are expensive, because the whole tree needs to queried for the rating of the root node.\n   * [x] MetaRating is costly.\n   * [x] Grammar of #10 should not cause bad performance. -\u003e Was ignored.\n   * [x] Constraint are based on Allocations, which causes many allocations. -\u003e Was ignored.\n* [x] The end of this issue creates the next major version.\n* [ ] Blog why version 3 was such a bad version.\nBlog about major content of version 4 and main issue of next version.\n* [x] Show POM that would work for example project and how to get the dependency.\n* [x] Create quick start project, so it's easy to try out things fast.\n   * [x] Use quick start project for alternative superfast introduction and recommended project template.\n   * [x] Document goals of quick start project.\n* [x] Test `NQueenProblemDemo` in regular build, too, in order to ensure, that the introductory code is still correct.\n* [x] Add short summary to every chapter.\n* [x] Performance got broken.\n* [ ] Create basic explanation of data model.\n* [x] Make object location perfect and highly consistent in images (not across all images).\n   * [x] Add this SVG to guidelines.\n* [x] Fix list visualization (its hard to see where one point starts and end).\n* [x] Try to remove disturbing line in background.\n* [x] Fix styling of code blocks.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1645044053,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9zioDrao"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [x] Explain custom groupings, as a way to play with Gel's API details and establish additional trust.-\u003e Not needed right now, because it is just an introduction to constraint system. Too many details will make the introduction harder to understand.\n* [x] Explain where to find predefined rating and grouping functions. -\u003e Not needed right now, because it is just an introduction to constraint system. Too many details will make the introduction harder to understand.\n* [x] Visualize the propagation of lines inside the constraint tree.\n* [x] Demonstrate solving the problem and explain, why hill climber often does not solve the problem.\n* [x] Find out why performance is so bad (hint number of database allocations).\n   * [x] Organize performance tests. -\u003e Was ignored.\n   * [x] Ratings are expensive, because the whole tree needs to queried for the rating of the root node.\n   * [x] MetaRating is costly.\n   * [x] Grammar of #10 should not cause bad performance. -\u003e Was ignored.\n   * [x] Constraint are based on Allocations, which causes many allocations. -\u003e Was ignored.\n* [x] The end of this issue creates the next major version.\n* [x] Blog why version 3 was such a bad version.\nBlog about major content of version 4 and main issue of next version.\n* [x] Show POM that would work for example project and how to get the dependency.\n* [x] Create quick start project, so it's easy to try out things fast.\n   * [x] Use quick start project for alternative superfast introduction and recommended project template.\n   * [x] Document goals of quick start project.\n* [x] Test `NQueenProblemDemo` in regular build, too, in order to ensure, that the introductory code is still correct.\n* [x] Add short summary to every chapter.\n* [x] Performance got broken.\n* [ ] Create basic explanation of data model.\n* [x] Make object location perfect and highly consistent in images (not across all images).\n   * [x] Add this SVG to guidelines.\n* [x] Fix list visualization (its hard to see where one point starts and end).\n* [x] Try to remove disturbing line in background.\n* [x] Fix styling of code blocks.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1645044061,"metadata":{"github-id":"UCE_lAHOFCNQW84-BlO9zioDrgc"},"target":"f19c7c3adb90c3c84ea29b1f612d47154e758cbe383a2a133601d439d4c1f546","message":"Use the N-Queen problem for this.\n* [x] Document how to add Gel as a dependency and how to build it.\n* [x] Solve the N Queen Problem.\n    * [x] Create integration test command.\n* [x] Explain custom groupings, as a way to play with Gel's API details and establish additional trust.-\u003e Not needed right now, because it is just an introduction to constraint system. Too many details will make the introduction harder to understand.\n* [x] Explain where to find predefined rating and grouping functions. -\u003e Not needed right now, because it is just an introduction to constraint system. Too many details will make the introduction harder to understand.\n* [x] Visualize the propagation of lines inside the constraint tree.\n* [x] Demonstrate solving the problem and explain, why hill climber often does not solve the problem.\n* [x] Find out why performance is so bad (hint number of database allocations).\n   * [x] Organize performance tests. -\u003e Was ignored.\n   * [x] Ratings are expensive, because the whole tree needs to queried for the rating of the root node.\n   * [x] MetaRating is costly.\n   * [x] Grammar of #10 should not cause bad performance. -\u003e Was ignored.\n   * [x] Constraint are based on Allocations, which causes many allocations. -\u003e Was ignored.\n* [x] The end of this issue creates the next major version.\n* [x] Blog why version 3 was such a bad version.\nBlog about major content of version 4 and main issue of next version.\n* [x] Show POM that would work for example project and how to get the dependency.\n* [x] Create quick start project, so it's easy to try out things fast.\n   * [x] Use quick start project for alternative superfast introduction and recommended project template.\n   * [x] Document goals of quick start project.\n* [x] Test `NQueenProblemDemo` in regular build, too, in order to ensure, that the introductory code is still correct.\n* [x] Add short summary to every chapter.\n* [x] Performance got broken.\n* [x] Create basic explanation of data model.\n* [x] Make object location perfect and highly consistent in images (not across all images).\n   * [x] Add this SVG to guidelines.\n* [x] Fix list visualization (its hard to see where one point starts and end).\n* [x] Try to remove disturbing line in background.\n* [x] Fix styling of code blocks.","files":null},{"type":5,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1635720501,"metadata":{"github-id":"LE_lADOFCNQW84-BlO9zwAAAAFKjm_g"},"added":["documentation"],"removed":[]},{"type":3,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1638604488,"metadata":{"github-id":"IC_kwDOFCNQW846xPe5","github-url":"https://github.com/www-splitcells-net/net.splitcells.network/issues/138#issuecomment-985987001"},"message":"![image](https://user-images.githubusercontent.com/7956931/144702134-f3c4366f-f742-4690-8645-4c0c1e1d79f2.png)","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1638604488,"metadata":{"github-id":"UCE_lALOFCNQW846xPe5zh9frO8"},"target":"72125f59dfa27836c8a2403f18197a7c377e6d4b77224e2f1b1884d7e442c317","message":"![image](https://user-images.githubusercontent.com/7956931/144702196-3d876a97-ae58-4c85-ae98-f0ff2bf61b03.png)","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1638604560,"metadata":{"github-id":"UCE_lALOFCNQW846xPe5zh9frSI"},"target":"72125f59dfa27836c8a2403f18197a7c377e6d4b77224e2f1b1884d7e442c317","message":"Performance problem because of complex MetaRating.\n![image](https://user-images.githubusercontent.com/7956931/144702196-3d876a97-ae58-4c85-ae98-f0ff2bf61b03.png)\nPerformance problem of rating calculation, because of complete query.\n![image](https://user-images.githubusercontent.com/7956931/144702238-b9178a77-8293-44cf-baf4-8cc7586b3eb4.png)","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1638605008,"metadata":{"github-id":"UCE_lALOFCNQW846xPe5zh9frsc"},"target":"72125f59dfa27836c8a2403f18197a7c377e6d4b77224e2f1b1884d7e442c317","message":"# Performance Problems:\n* [ ] Performance problem because of complex MetaRating.\n![image](https://user-images.githubusercontent.com/7956931/144702196-3d876a97-ae58-4c85-ae98-f0ff2bf61b03.png)\n* [ ] Performance problem of rating calculation, because of complete query.\n![image](https://user-images.githubusercontent.com/7956931/144702238-b9178a77-8293-44cf-baf4-8cc7586b3eb4.png)\n* [ ] History changes causes rating calculation.\n![image](https://user-images.githubusercontent.com/7956931/144702390-bf6a050d-a094-4bbd-bbb0-24cdc67a5bb6.png)","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1638605358,"metadata":{"github-id":"UCE_lALOFCNQW846xPe5zh9fr_M"},"target":"72125f59dfa27836c8a2403f18197a7c377e6d4b77224e2f1b1884d7e442c317","message":"# Performance Problems:\n* [ ] Performance problem because of complex MetaRating.\n![image](https://user-images.githubusercontent.com/7956931/144702196-3d876a97-ae58-4c85-ae98-f0ff2bf61b03.png)\n* [ ] Performance problem of rating calculation, because of complete query.\n![image](https://user-images.githubusercontent.com/7956931/144702238-b9178a77-8293-44cf-baf4-8cc7586b3eb4.png)\n* [ ] History changes causes rating calculation.\n![image](https://user-images.githubusercontent.com/7956931/144702390-bf6a050d-a094-4bbd-bbb0-24cdc67a5bb6.png)\n* [ ] The history handles reset like normal line removal, which is part of history again.\n![image](https://user-images.githubusercontent.com/7956931/144702553-ac813c5a-05d6-428a-9915-b84d555e51f7.png)","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1639122580,"metadata":{"github-id":"UCE_lALOFCNQW846xPe5zh-CfNk"},"target":"72125f59dfa27836c8a2403f18197a7c377e6d4b77224e2f1b1884d7e442c317","message":"# Performance Problems:\n* [ ] Performance problem because of complex MetaRating.\n![image](https://user-images.githubusercontent.com/7956931/144702196-3d876a97-ae58-4c85-ae98-f0ff2bf61b03.png)\n* [ ] Performance problem of rating calculation, because of complete query.\n![image](https://user-images.githubusercontent.com/7956931/144702238-b9178a77-8293-44cf-baf4-8cc7586b3eb4.png)\n* [ ] History changes causes rating calculation.\n![image](https://user-images.githubusercontent.com/7956931/144702390-bf6a050d-a094-4bbd-bbb0-24cdc67a5bb6.png)\n* [x] The history handles reset like normal line removal, which is part of history again.\n![image](https://user-images.githubusercontent.com/7956931/144702553-ac813c5a-05d6-428a-9915-b84d555e51f7.png)","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1639529080,"metadata":{"github-id":"UCE_lALOFCNQW846xPe5zh-aJQM"},"target":"72125f59dfa27836c8a2403f18197a7c377e6d4b77224e2f1b1884d7e442c317","message":"# Performance Problems:\nThe performance for solving the N Queen problem is too bad:\nit takes more than a minute, while other code takes some seconds or even less than one second.\nWhile the runtime is not the top priority of this project,\none needs to keep in mind,\nthat such a bad performance makes for bad advertisement.\n* [ ] Performance problem because of complex MetaRating.\n![image](https://user-images.githubusercontent.com/7956931/144702196-3d876a97-ae58-4c85-ae98-f0ff2bf61b03.png)\n* [ ] Performance problem of rating calculation, because of complete query.\n![image](https://user-images.githubusercontent.com/7956931/144702238-b9178a77-8293-44cf-baf4-8cc7586b3eb4.png)\n* [ ] History changes causes rating calculation.\n![image](https://user-images.githubusercontent.com/7956931/144702390-bf6a050d-a094-4bbd-bbb0-24cdc67a5bb6.png)\n* [x] The history handles reset like normal line removal, which is part of history again.\n![image](https://user-images.githubusercontent.com/7956931/144702553-ac813c5a-05d6-428a-9915-b84d555e51f7.png)","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1639529102,"metadata":{"github-id":"UCE_lALOFCNQW846xPe5zh-aJWQ"},"target":"72125f59dfa27836c8a2403f18197a7c377e6d4b77224e2f1b1884d7e442c317","message":"# Performance Problems:\nThe performance for solving the N Queen problem is too bad:\nit takes more than a minute, while other code takes some seconds or even less than one second.\nWhile the runtime is not the top priority of this project,\none needs to keep in mind,\nthat such a bad performance makes for bad advertisement.\n* [x] Performance problem because of complex MetaRating.\n![image](https://user-images.githubusercontent.com/7956931/144702196-3d876a97-ae58-4c85-ae98-f0ff2bf61b03.png)\n* [ ] Performance problem of rating calculation, because of complete query.\n![image](https://user-images.githubusercontent.com/7956931/144702238-b9178a77-8293-44cf-baf4-8cc7586b3eb4.png)\n* [ ] History changes causes rating calculation.\n![image](https://user-images.githubusercontent.com/7956931/144702390-bf6a050d-a094-4bbd-bbb0-24cdc67a5bb6.png)\n* [x] The history handles reset like normal line removal, which is part of history again.\n![image](https://user-images.githubusercontent.com/7956931/144702553-ac813c5a-05d6-428a-9915-b84d555e51f7.png)","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1639612451,"metadata":{"github-id":"UCE_lALOFCNQW846xPe5zh-hbEY"},"target":"72125f59dfa27836c8a2403f18197a7c377e6d4b77224e2f1b1884d7e442c317","message":"# Performance Problems:\nThe performance for solving the N Queen problem is too bad:\nit takes more than a minute, while other code takes some seconds or even less than one second.\nWhile the runtime is not the top priority of this project,\none needs to keep in mind,\nthat such a bad performance makes for bad advertisement.\n* [ ] Avoid usage of meta ratings, if possible, because they cause significant overhead.\n* [x] Performance problem because of complex MetaRating.\n![image](https://user-images.githubusercontent.com/7956931/144702196-3d876a97-ae58-4c85-ae98-f0ff2bf61b03.png)\n* [ ] Performance problem of rating calculation, because of complete query.\n![image](https://user-images.githubusercontent.com/7956931/144702238-b9178a77-8293-44cf-baf4-8cc7586b3eb4.png)\n* [ ] History changes causes rating calculation.\n![image](https://user-images.githubusercontent.com/7956931/144702390-bf6a050d-a094-4bbd-bbb0-24cdc67a5bb6.png)\n* [x] The history handles reset like normal line removal, which is part of history again.\n![image](https://user-images.githubusercontent.com/7956931/144702553-ac813c5a-05d6-428a-9915-b84d555e51f7.png)","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1639612732,"metadata":{"github-id":"UCE_lALOFCNQW846xPe5zh-hcMw"},"target":"72125f59dfa27836c8a2403f18197a7c377e6d4b77224e2f1b1884d7e442c317","message":"# Performance Problems:\nThe performance for solving the N Queen problem is too bad:\nit takes more than a minute, while other code takes some seconds or even less than one second.\nWhile the runtime is not the top priority of this project,\none needs to keep in mind,\nthat such a bad performance makes for bad advertisement.\n* [ ] Avoid usage of meta ratings in constraints by default, if possible, because they cause significant overhead.\n* [x] Performance problem because of complex MetaRating.\n![image](https://user-images.githubusercontent.com/7956931/144702196-3d876a97-ae58-4c85-ae98-f0ff2bf61b03.png)\n* [ ] Performance problem of rating calculation, because of complete query.\n![image](https://user-images.githubusercontent.com/7956931/144702238-b9178a77-8293-44cf-baf4-8cc7586b3eb4.png)\n* [ ] History changes causes rating calculation.\n![image](https://user-images.githubusercontent.com/7956931/144702390-bf6a050d-a094-4bbd-bbb0-24cdc67a5bb6.png)\n* [x] The history handles reset like normal line removal, which is part of history again.\n![image](https://user-images.githubusercontent.com/7956931/144702553-ac813c5a-05d6-428a-9915-b84d555e51f7.png)","files":null},{"type":3,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1639123154,"metadata":{"github-id":"IC_kwDOFCNQW847DQIa","github-url":"https://github.com/www-splitcells-net/net.splitcells.network/issues/138#issuecomment-990708250"},"message":"* [ ] We need a repo, where performance data is stored.\nIts content should be rendered on the website.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1639123154,"metadata":{"github-id":"UCE_lALOFCNQW847DQIazh-Chf8"},"target":"d29f2bf6a655ce3e2d961b1974aacbacc235defcbee8893884f6a5f9190b4375","message":"* [ ] We need a repo, where performance data is stored.\n* [ ] Its content should be rendered on the website.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1639186455,"metadata":{"github-id":"UCE_lALOFCNQW847DQIazh-HwO0"},"target":"d29f2bf6a655ce3e2d961b1974aacbacc235defcbee8893884f6a5f9190b4375","message":"* [ ] We need a repo, where performance data is stored.\n* [ ] Its content should be rendered on the website.\n* [ ] Document new repository.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1639186468,"metadata":{"github-id":"UCE_lALOFCNQW847DQIazh-HwQA"},"target":"d29f2bf6a655ce3e2d961b1974aacbacc235defcbee8893884f6a5f9190b4375","message":"* [ ] We need a repo, where performance data is stored.\n* [ ] Its content should be rendered on the website.\n* [ ] Document new repository.\n* [ ] Make new repository optional.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1639186563,"metadata":{"github-id":"UCE_lALOFCNQW847DQIazh-HwZk"},"target":"d29f2bf6a655ce3e2d961b1974aacbacc235defcbee8893884f6a5f9190b4375","message":"* [ ] We need a repo, where performance data is stored.\n* [x] Its content should be rendered on the website.\n* [ ] Document new repository.\n* [ ] Make new repository optional.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1639186570,"metadata":{"github-id":"UCE_lALOFCNQW847DQIazh-Hwak"},"target":"d29f2bf6a655ce3e2d961b1974aacbacc235defcbee8893884f6a5f9190b4375","message":"* [ ] We need a repo, where performance data is stored.\n* [x] Its content should be rendered on the website. -\u003e http://splitcells.net/net/splitcells/gel/test/functionality/NQueenProblemTest/test_8_queen_problem_with_backtracking/splitcells-XPS-15-9570.csv.html\n* [ ] Document new repository.\n* [ ] Make new repository optional.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1639187455,"metadata":{"github-id":"UCE_lALOFCNQW847DQIazh-Hx3s"},"target":"d29f2bf6a655ce3e2d961b1974aacbacc235defcbee8893884f6a5f9190b4375","message":"* [ ] We need a repo, where performance data is stored.\n* [x] Its content should be rendered on the website. -\u003e http://splitcells.net/net/splitcells/gel/test/functionality/NQueenProblemTest/test_8_queen_problem_with_backtracking/splitcells-XPS-15-9570.csv.html\n* [ ] Document new repository.\n* [ ] Make new repository optional.\n* [ ] Push updates to new and old public repository via one command.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1639187459,"metadata":{"github-id":"UCE_lALOFCNQW847DQIazh-Hx4I"},"target":"d29f2bf6a655ce3e2d961b1974aacbacc235defcbee8893884f6a5f9190b4375","message":"* [x] We need a repo, where performance data is stored.\n* [x] Its content should be rendered on the website. -\u003e http://splitcells.net/net/splitcells/gel/test/functionality/NQueenProblemTest/test_8_queen_problem_with_backtracking/splitcells-XPS-15-9570.csv.html\n* [ ] Document new repository.\n* [ ] Make new repository optional.\n* [ ] Push updates to new and old public repository via one command.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1639187469,"metadata":{"github-id":"UCE_lALOFCNQW847DQIazh-Hx5w"},"target":"d29f2bf6a655ce3e2d961b1974aacbacc235defcbee8893884f6a5f9190b4375","message":"* [x] We need a repo, where performance data is stored. -\u003e https://github.com/www-splitcells-net/net.splitcells.network.log\n* [x] Its content should be rendered on the website. -\u003e http://splitcells.net/net/splitcells/gel/test/functionality/NQueenProblemTest/test_8_queen_problem_with_backtracking/splitcells-XPS-15-9570.csv.html\n* [ ] Document new repository.\n* [ ] Make new repository optional.\n* [ ] Push updates to new and old public repository via one command.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1640042939,"metadata":{"github-id":"UCE_lALOFCNQW847DQIazh-4owA"},"target":"d29f2bf6a655ce3e2d961b1974aacbacc235defcbee8893884f6a5f9190b4375","message":"* [x] We need a repo, where performance data is stored. -\u003e https://github.com/www-splitcells-net/net.splitcells.network.log\n* [x] Its content should be rendered on the website. -\u003e http://splitcells.net/net/splitcells/gel/test/functionality/NQueenProblemTest/test_8_queen_problem_with_backtracking/splitcells-XPS-15-9570.csv.html\n* [x] Document new repository.\n* [ ] Make new repository optional.\n* [ ] Push updates to new and old public repository via one command.","files":null},{"type":3,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1640044044,"metadata":{"github-id":"IC_kwDOFCNQW847QXuH","github-url":"https://github.com/www-splitcells-net/net.splitcells.network/issues/138#issuecomment-994147207"},"message":"* [ ] Execute test based on tags for standard tests.\nCurrently, functionality test have to be disabled completely.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1640044044,"metadata":{"github-id":"UCE_lALOFCNQW847QXuHzh-4uLE"},"target":"049a24cf8cc2616cf068fe0c993521192a97fdcbfd5430f8f669134435520baf","message":"* [x] Execute test based on tags for standard tests.\nCurrently, functionality test have to be disabled completely.","files":null},{"type":3,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1639528950,"metadata":{"github-id":"IC_kwDOFCNQW847QfuM","github-url":"https://github.com/www-splitcells-net/net.splitcells.network/issues/138#issuecomment-994179980"},"message":"* [ ] Create typed mapping interface with 2 implementations (based on List and based on Map) for `MetaRatingI#ratingMap`.\nCreate benchmark for both and decide on the better one.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1639528950,"metadata":{"github-id":"UCE_lALOFCNQW847QfuMzh-aIbs"},"target":"a92a2f151f82037f834ce7b3a231eae68d630dfd4ee980f4edcebe8abd1f5f63","message":"* [ ] Create typed mapping interface with 2 implementations (based on List and based on Map) for `MetaRatingI#ratingMap`.\nCreate benchmark for both and decide on the better one.\n* [ ] Remove mutability of `MetaRatingI#merger`, because this may only cause problems.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1639611951,"metadata":{"github-id":"UCE_lALOFCNQW847QfuMzh-hY94"},"target":"a92a2f151f82037f834ce7b3a231eae68d630dfd4ee980f4edcebe8abd1f5f63","message":"* [X] Create typed mapping interface with 2 implementations (based on List and based on Map) for `MetaRatingI#ratingMap`.\nCreate benchmark for both and decide on the better one. -\u003e Move task into source code repo.\n* [ ] Remove mutability of `MetaRatingI#merger`, because this may only cause problems.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1639612375,"metadata":{"github-id":"UCE_lALOFCNQW847QfuMzh-haxk"},"target":"a92a2f151f82037f834ce7b3a231eae68d630dfd4ee980f4edcebe8abd1f5f63","message":"* [X] Create typed mapping interface with 2 implementations (based on List and based on Map) for `MetaRatingI#ratingMap`.\nCreate benchmark for both and decide on the better one. -\u003e Move task into source code repo.\n* [X] Remove mutability of `MetaRatingI#merger`, because this may only cause problems. -\u003e Moved task to repo.","files":null},{"type":3,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1645044173,"metadata":{"github-id":"IC_kwDOFCNQW8481iW8","github-url":"https://github.com/www-splitcells-net/net.splitcells.network/issues/138#issuecomment-1020667324"},"message":"* [ ] This does not seem to make sense:\n![image](https://user-images.githubusercontent.com/7956931/150884694-b4369208-b78f-4912-b42d-f719b0a74211.png)","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1645044173,"metadata":{"github-id":"UCE_lALOFCNQW8481iW8ziD6YCY"},"target":"ffdc6e3903b673871f24d563b6a3b819acde479c99517fbc04f8a70e9c36f5f4","message":"* [x] This does not seem to make sense:\n![image](https://user-images.githubusercontent.com/7956931/150884694-b4369208-b78f-4912-b42d-f719b0a74211.png)","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1645044185,"metadata":{"github-id":"UCE_lALOFCNQW8481iW8ziD6YGw"},"target":"ffdc6e3903b673871f24d563b6a3b819acde479c99517fbc04f8a70e9c36f5f4","message":"* [x] This does not seem to make sense: -\u003e Added as TODO in source code.\n![image](https://user-images.githubusercontent.com/7956931/150884694-b4369208-b78f-4912-b42d-f719b0a74211.png)","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1645044298,"metadata":{"github-id":"UCE_lALOFCNQW8481iW8ziD6Y9U"},"target":"ffdc6e3903b673871f24d563b6a3b819acde479c99517fbc04f8a70e9c36f5f4","message":"* [x] This does not seem to make sense: -\u003e Makes sense: select free supply and demand by index and use it for allocation. Selecting via used supplies/demands would not make sense.\n![image](https://user-images.githubusercontent.com/7956931/150884694-b4369208-b78f-4912-b42d-f719b0a74211.png)","files":null},{"type":4,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1645044067,"metadata":{"github-id":"CE_lADOFCNQW84-BlO9zwAAAAFqvJzJ"},"status":2}]}