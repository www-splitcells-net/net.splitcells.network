{"version":1,"ops":[{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1657492777,"metadata":{"github-id":"UCE_lAHOFCNQW848IOAKzjC0yHk"},"target":"42d062668a65b574db7f970c29081652f670b53bf46d2e9b1c648c4fb6a5e38a","message":"This makes sure, that the Java code is releasable via Maven at any time.\n\n- [ ] Create guidelines/checklist for Maven Central public release.\n- [ ] Release to GitHub repo first for initial testing.\n   - [ ] https://stackoverflow.com/questions/53637262/setting-the-developerconnection-for-the-maven-release-plugin-from-the-command-li/54250791#54250791\n   - [ ] Make snapshot deployments:\n      - [ ] `mci \u0026\u0026 mvn deploy:deploy`\n      - [ ] [Ensure GitHub authentication works.](https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-apache-maven-registry)\n   - [ ] Create release script.\n```\nmci\nmvn release:prepare -Drepo-github-enable=1\nmvn release:perform -Drepo-github-enable=1\n```\n- [ ] Create release guidelines.\n   - [ ] https://dzone.com/articles/how-to-create-and-release-a-jar-to-maven-central\n      - [ ] https://maven.apache.org/repository/guide-central-repository-upload.html\n         - [ ] Deploy sources.\n         - [ ] Deploy javadoc.\n         - [ ] Provide checksums.\n         - [ ] SIng files with GPG/PGP\n         - [x] name\n         - [x] description\n         - [x] url\n         - [x] License\n         - [x] Developer Information\n         - [x] SCM Informations\n- [ ] Release to Maven Central. Do this with multiple deploys and not multiple release performs.\n   - [ ] https://central.sonatype.org/publish/publish-guide/\n- [ ] Create Minimum POM information\n- [ ] Add PGP signing: https://central.sonatype.org/publish/requirements/#provide-files-checksums","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1657492783,"metadata":{"github-id":"UCE_lAHOFCNQW848IOAKzjC0yJc"},"target":"42d062668a65b574db7f970c29081652f670b53bf46d2e9b1c648c4fb6a5e38a","message":"This makes sure, that the Java code is releasable via Maven at any time.\n\n- [x] Create guidelines/checklist for Maven Central public release.\n- [ ] Release to GitHub repo first for initial testing.\n   - [ ] https://stackoverflow.com/questions/53637262/setting-the-developerconnection-for-the-maven-release-plugin-from-the-command-li/54250791#54250791\n   - [ ] Make snapshot deployments:\n      - [ ] `mci \u0026\u0026 mvn deploy:deploy`\n      - [ ] [Ensure GitHub authentication works.](https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-apache-maven-registry)\n   - [ ] Create release script.\n```\nmci\nmvn release:prepare -Drepo-github-enable=1\nmvn release:perform -Drepo-github-enable=1\n```\n- [ ] Create release guidelines.\n   - [ ] https://dzone.com/articles/how-to-create-and-release-a-jar-to-maven-central\n      - [ ] https://maven.apache.org/repository/guide-central-repository-upload.html\n         - [ ] Deploy sources.\n         - [ ] Deploy javadoc.\n         - [ ] Provide checksums.\n         - [ ] SIng files with GPG/PGP\n         - [x] name\n         - [x] description\n         - [x] url\n         - [x] License\n         - [x] Developer Information\n         - [x] SCM Informations\n- [ ] Release to Maven Central. Do this with multiple deploys and not multiple release performs.\n   - [ ] https://central.sonatype.org/publish/publish-guide/\n- [ ] Create Minimum POM information\n- [ ] Add PGP signing: https://central.sonatype.org/publish/requirements/#provide-files-checksums","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1657493408,"metadata":{"github-id":"UCE_lAHOFCNQW848IOAKzjC0z-c"},"target":"42d062668a65b574db7f970c29081652f670b53bf46d2e9b1c648c4fb6a5e38a","message":"This makes sure, that the Java code is releasable via Maven at any time.\n\n- [x] Create guidelines/checklist for Maven Central public release.\n- [ ] Release to GitHub repo first for initial testing.\n   - [ ] https://stackoverflow.com/questions/53637262/setting-the-developerconnection-for-the-maven-release-plugin-from-the-command-li/54250791#54250791\n   - [ ] Make snapshot deployments:\n      - [ ] `mci \u0026\u0026 mvn deploy:deploy -Drepo-github-enable=1`\n      - [ ] [Ensure GitHub authentication works.](https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-apache-maven-registry)\n      - [ ] Document Maven repo on GitHub as an alternative to Maven Central, which would especially suitable for snapshot builds.\n   - [ ] Create release script.\n```\nmci\nmvn release:prepare -Drepo-github-enable=1\nmvn release:perform -Drepo-github-enable=1\n```\n- [ ] Create release guidelines.\n   - [ ] https://dzone.com/articles/how-to-create-and-release-a-jar-to-maven-central\n      - [ ] https://maven.apache.org/repository/guide-central-repository-upload.html\n         - [ ] Deploy sources.\n         - [ ] Deploy javadoc.\n         - [ ] Provide checksums.\n         - [ ] SIng files with GPG/PGP\n         - [x] name\n         - [x] description\n         - [x] url\n         - [x] License\n         - [x] Developer Information\n         - [x] SCM Informations\n- [ ] Release to Maven Central. Do this with multiple deploys and not multiple release performs.\n   - [ ] https://central.sonatype.org/publish/publish-guide/\n- [ ] Create Minimum POM information\n- [ ] Add PGP signing: https://central.sonatype.org/publish/requirements/#provide-files-checksums","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1657493707,"metadata":{"github-id":"UCE_lAHOFCNQW848IOAKzjC009c"},"target":"42d062668a65b574db7f970c29081652f670b53bf46d2e9b1c648c4fb6a5e38a","message":"This makes sure, that the Java code is releasable via Maven at any time.\n\n- [x] Create guidelines/checklist for Maven Central public release.\n- [ ] Release to GitHub repo first for initial testing.\n   - [ ] https://stackoverflow.com/questions/53637262/setting-the-developerconnection-for-the-maven-release-plugin-from-the-command-li/54250791#54250791\n   - [ ] Make snapshot deployments:\n      - [ ] `mci \u0026\u0026 mvn deploy -Drepo-github-enable=1`\n      - [ ] [Ensure GitHub authentication works.](https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-apache-maven-registry)\n      - [ ] Document Maven repo on GitHub as an alternative to Maven Central, which would especially suitable for snapshot builds.\n   - [ ] Create release script.\n```\nmci\nmvn release:prepare -Drepo-github-enable=1\nmvn release:perform -Drepo-github-enable=1\n```\n- [ ] Create release guidelines.\n   - [ ] https://dzone.com/articles/how-to-create-and-release-a-jar-to-maven-central\n      - [ ] https://maven.apache.org/repository/guide-central-repository-upload.html\n         - [ ] Deploy sources.\n         - [ ] Deploy javadoc.\n         - [ ] Provide checksums.\n         - [ ] SIng files with GPG/PGP\n         - [x] name\n         - [x] description\n         - [x] url\n         - [x] License\n         - [x] Developer Information\n         - [x] SCM Informations\n- [ ] Release to Maven Central. Do this with multiple deploys and not multiple release performs.\n   - [ ] https://central.sonatype.org/publish/publish-guide/\n- [ ] Create Minimum POM information\n- [ ] Add PGP signing: https://central.sonatype.org/publish/requirements/#provide-files-checksums","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1657493730,"metadata":{"github-id":"UCE_lAHOFCNQW848IOAKzjC01Dg"},"target":"42d062668a65b574db7f970c29081652f670b53bf46d2e9b1c648c4fb6a5e38a","message":"This makes sure, that the Java code is releasable via Maven at any time.\n\n- [x] Create guidelines/checklist for Maven Central public release.\n- [ ] Release to GitHub repo first for initial testing.\n   - [ ] https://stackoverflow.com/questions/53637262/setting-the-developerconnection-for-the-maven-release-plugin-from-the-command-li/54250791#54250791\n   - [ ] Make snapshot deployments:\n      - [x] `mci \u0026\u0026 mvn deploy -Drepo-github-enable=1`\n      - [ ] [Ensure GitHub authentication works.](https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-apache-maven-registry)\n      - [ ] Document Maven repo on GitHub as an alternative to Maven Central, which would especially suitable for snapshot builds.\n   - [ ] Create release script.\n```\nmci\nmvn release:prepare -Drepo-github-enable=1\nmvn release:perform -Drepo-github-enable=1\n```\n- [ ] Create release guidelines.\n   - [ ] https://dzone.com/articles/how-to-create-and-release-a-jar-to-maven-central\n      - [ ] https://maven.apache.org/repository/guide-central-repository-upload.html\n         - [ ] Deploy sources.\n         - [ ] Deploy javadoc.\n         - [ ] Provide checksums.\n         - [ ] SIng files with GPG/PGP\n         - [x] name\n         - [x] description\n         - [x] url\n         - [x] License\n         - [x] Developer Information\n         - [x] SCM Informations\n- [ ] Release to Maven Central. Do this with multiple deploys and not multiple release performs.\n   - [ ] https://central.sonatype.org/publish/publish-guide/\n- [ ] Create Minimum POM information\n- [ ] Add PGP signing: https://central.sonatype.org/publish/requirements/#provide-files-checksums","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1657493731,"metadata":{"github-id":"UCE_lAHOFCNQW848IOAKzjC01D8"},"target":"42d062668a65b574db7f970c29081652f670b53bf46d2e9b1c648c4fb6a5e38a","message":"This makes sure, that the Java code is releasable via Maven at any time.\n\n- [x] Create guidelines/checklist for Maven Central public release.\n- [ ] Release to GitHub repo first for initial testing.\n   - [ ] https://stackoverflow.com/questions/53637262/setting-the-developerconnection-for-the-maven-release-plugin-from-the-command-li/54250791#54250791\n   - [ ] Make snapshot deployments:\n      - [ ] `mci \u0026\u0026 mvn deploy -Drepo-github-enable=1`\n      - [ ] [Ensure GitHub authentication works.](https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-apache-maven-registry)\n      - [ ] Document Maven repo on GitHub as an alternative to Maven Central, which would especially suitable for snapshot builds.\n   - [ ] Create release script.\n```\nmci\nmvn release:prepare -Drepo-github-enable=1\nmvn release:perform -Drepo-github-enable=1\n```\n- [ ] Create release guidelines.\n   - [ ] https://dzone.com/articles/how-to-create-and-release-a-jar-to-maven-central\n      - [ ] https://maven.apache.org/repository/guide-central-repository-upload.html\n         - [ ] Deploy sources.\n         - [ ] Deploy javadoc.\n         - [ ] Provide checksums.\n         - [ ] SIng files with GPG/PGP\n         - [x] name\n         - [x] description\n         - [x] url\n         - [x] License\n         - [x] Developer Information\n         - [x] SCM Informations\n- [ ] Release to Maven Central. Do this with multiple deploys and not multiple release performs.\n   - [ ] https://central.sonatype.org/publish/publish-guide/\n- [ ] Create Minimum POM information\n- [ ] Add PGP signing: https://central.sonatype.org/publish/requirements/#provide-files-checksums","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1657493793,"metadata":{"github-id":"UCE_lAHOFCNQW848IOAKzjC01S0"},"target":"42d062668a65b574db7f970c29081652f670b53bf46d2e9b1c648c4fb6a5e38a","message":"This makes sure, that the Java code is releasable via Maven at any time.\n\n- [x] Create guidelines/checklist for Maven Central public release.\n- [ ] Release to GitHub repo first for initial testing.\n   - [ ] https://stackoverflow.com/questions/53637262/setting-the-developerconnection-for-the-maven-release-plugin-from-the-command-li/54250791#54250791\n   - [ ] Make snapshot deployments:\n      - [ ] `mci \u0026\u0026 mvn deploy -Drepo-github-enable=1`\n      - [ ] [Ensure GitHub authentication works.](https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-apache-maven-registry)\n      - [ ] Document Maven repo on GitHub as an alternative to Maven Central, which would especially suitable for snapshot builds.\n      - [ ] Test and document using snapshot builds as a dependency.\n   - [ ] Create release script.\n```\nmci\nmvn release:prepare -Drepo-github-enable=1\nmvn release:perform -Drepo-github-enable=1\n```\n- [ ] Create release guidelines.\n   - [ ] https://dzone.com/articles/how-to-create-and-release-a-jar-to-maven-central\n      - [ ] https://maven.apache.org/repository/guide-central-repository-upload.html\n         - [ ] Deploy sources.\n         - [ ] Deploy javadoc.\n         - [ ] Provide checksums.\n         - [ ] SIng files with GPG/PGP\n         - [x] name\n         - [x] description\n         - [x] url\n         - [x] License\n         - [x] Developer Information\n         - [x] SCM Informations\n- [ ] Release to Maven Central. Do this with multiple deploys and not multiple release performs.\n   - [ ] https://central.sonatype.org/publish/publish-guide/\n- [ ] Create Minimum POM information\n- [ ] Add PGP signing: https://central.sonatype.org/publish/requirements/#provide-files-checksums","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1657494986,"metadata":{"github-id":"UCE_lAHOFCNQW848IOAKzjC05lw"},"target":"42d062668a65b574db7f970c29081652f670b53bf46d2e9b1c648c4fb6a5e38a","message":"This makes sure, that the Java code is releasable via Maven at any time.\n\n- [x] Create guidelines/checklist for Maven Central public release.\n- [ ] Release to GitHub repo first for initial testing.\n   - [ ] https://stackoverflow.com/questions/53637262/setting-the-developerconnection-for-the-maven-release-plugin-from-the-command-li/54250791#54250791\n   - [ ] Make snapshot deployments:\n      - [x] `mci \u0026\u0026 mvn deploy -Drepo-github-enable=1`\n      - [ ] [Ensure GitHub authentication works.](https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-apache-maven-registry)\n      - [ ] Document Maven repo on GitHub as an alternative to Maven Central, which would especially suitable for snapshot builds.\n      - [ ] Test and document using snapshot builds as a dependency.\n   - [ ] Create release script.\n```\nmci\nmvn release:prepare -Drepo-github-enable=1\nmvn release:perform -Drepo-github-enable=1\n```\n- [ ] Create release guidelines.\n   - [ ] https://dzone.com/articles/how-to-create-and-release-a-jar-to-maven-central\n      - [ ] https://maven.apache.org/repository/guide-central-repository-upload.html\n         - [ ] Deploy sources.\n         - [ ] Deploy javadoc.\n         - [ ] Provide checksums.\n         - [ ] SIng files with GPG/PGP\n         - [x] name\n         - [x] description\n         - [x] url\n         - [x] License\n         - [x] Developer Information\n         - [x] SCM Informations\n- [ ] Release to Maven Central. Do this with multiple deploys and not multiple release performs.\n   - [ ] https://central.sonatype.org/publish/publish-guide/\n- [ ] Create Minimum POM information\n- [ ] Add PGP signing: https://central.sonatype.org/publish/requirements/#provide-files-checksums","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1657495111,"metadata":{"github-id":"UCE_lAHOFCNQW848IOAKzjC06Bk"},"target":"42d062668a65b574db7f970c29081652f670b53bf46d2e9b1c648c4fb6a5e38a","message":"This makes sure, that the Java code is releasable via Maven at any time.\n\n- [x] Create guidelines/checklist for Maven Central public release.\n- [ ] Release to GitHub repo first for initial testing.\n   - [ ] https://stackoverflow.com/questions/53637262/setting-the-developerconnection-for-the-maven-release-plugin-from-the-command-li/54250791#54250791\n   - [ ] Make snapshot deployments:\n      - [x] `mci \u0026\u0026 mvn deploy -Drepo-github-enable=1`\n      - [ ] [Ensure GitHub authentication works.](https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-apache-maven-registry)\n      - [ ] Document Maven repo on GitHub as an alternative to Maven Central, which would especially suitable for snapshot builds.\n      - [ ] Test and document using snapshot builds as a dependency.\n      - [ ] Use one version for all packages and document reasoning for this.\n   - [ ] Create release script.\n```\nmci\nmvn release:prepare -Drepo-github-enable=1\nmvn release:perform -Drepo-github-enable=1\n```\n- [ ] Create release guidelines.\n   - [ ] https://dzone.com/articles/how-to-create-and-release-a-jar-to-maven-central\n      - [ ] https://maven.apache.org/repository/guide-central-repository-upload.html\n         - [ ] Deploy sources.\n         - [ ] Deploy javadoc.\n         - [ ] Provide checksums.\n         - [ ] SIng files with GPG/PGP\n         - [x] name\n         - [x] description\n         - [x] url\n         - [x] License\n         - [x] Developer Information\n         - [x] SCM Informations\n- [ ] Release to Maven Central. Do this with multiple deploys and not multiple release performs.\n   - [ ] https://central.sonatype.org/publish/publish-guide/\n- [ ] Create Minimum POM information\n- [ ] Add PGP signing: https://central.sonatype.org/publish/requirements/#provide-files-checksums","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1657495148,"metadata":{"github-id":"UCE_lAHOFCNQW848IOAKzjC06Kw"},"target":"42d062668a65b574db7f970c29081652f670b53bf46d2e9b1c648c4fb6a5e38a","message":"This makes sure, that the Java code is releasable via Maven at any time.\n\n- [x] Create guidelines/checklist for Maven Central public release.\n- [ ] Release to GitHub repo first for initial testing.\n   - [ ] https://stackoverflow.com/questions/53637262/setting-the-developerconnection-for-the-maven-release-plugin-from-the-command-li/54250791#54250791\n   - [ ] Make snapshot deployments:\n      - [x] `mci \u0026\u0026 mvn deploy -Drepo-github-enable=1`\n      - [ ] [Ensure GitHub authentication works.](https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-apache-maven-registry)\n      - [ ] Document Maven repo on GitHub as an alternative to Maven Central, which would especially suitable for snapshot builds.\n      - [ ] Test and document using snapshot builds as a dependency.\n   - [ ] Create release script.\n```\nmci\nmvn release:prepare -Drepo-github-enable=1\nmvn release:perform -Drepo-github-enable=1\n```\n- [ ] Create release guidelines.\n   - [ ] https://dzone.com/articles/how-to-create-and-release-a-jar-to-maven-central\n      - [ ] https://maven.apache.org/repository/guide-central-repository-upload.html\n         - [ ] Deploy sources.\n         - [ ] Deploy javadoc.\n         - [ ] Provide checksums.\n         - [ ] SIng files with GPG/PGP\n         - [x] name\n         - [x] description\n         - [x] url\n         - [x] License\n         - [x] Developer Information\n         - [x] SCM Informations\n- [ ] Release to Maven Central. Do this with multiple deploys and not multiple release performs.\n   - [ ] https://central.sonatype.org/publish/publish-guide/\n- [ ] Create Minimum POM information\n- [ ] Add PGP signing: https://central.sonatype.org/publish/requirements/#provide-files-checksums","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1657495426,"metadata":{"github-id":"UCE_lAHOFCNQW848IOAKzjC07Gw"},"target":"42d062668a65b574db7f970c29081652f670b53bf46d2e9b1c648c4fb6a5e38a","message":"This makes sure, that the Java code is releasable via Maven at any time.\n\n- [x] Create guidelines/checklist for Maven Central public release.\n- [ ] Release to GitHub repo first for initial testing.\n   - [ ] https://stackoverflow.com/questions/53637262/setting-the-developerconnection-for-the-maven-release-plugin-from-the-command-li/54250791#54250791\n   - [ ] Make snapshot deployments:\n      - [x] `mci \u0026\u0026 mvn deploy -Drepo-github-enable=1`\n      - [ ] [Ensure GitHub authentication works.](https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-apache-maven-registry)\n      - [ ] Document Maven repo on GitHub as an alternative to Maven Central, which would especially suitable for snapshot builds.\n      - [ ] Test and document using snapshot builds as a dependency.\n      - [ ] Use Bill of material in order to keep managing versions of all projects simple: http://djl.ai/bom/\n   - [ ] Create release script.\n```\nmci\nmvn release:prepare -Drepo-github-enable=1\nmvn release:perform -Drepo-github-enable=1\n```\n- [ ] Create release guidelines.\n   - [ ] https://dzone.com/articles/how-to-create-and-release-a-jar-to-maven-central\n      - [ ] https://maven.apache.org/repository/guide-central-repository-upload.html\n         - [ ] Deploy sources.\n         - [ ] Deploy javadoc.\n         - [ ] Provide checksums.\n         - [ ] SIng files with GPG/PGP\n         - [x] name\n         - [x] description\n         - [x] url\n         - [x] License\n         - [x] Developer Information\n         - [x] SCM Informations\n- [ ] Release to Maven Central. Do this with multiple deploys and not multiple release performs.\n   - [ ] https://central.sonatype.org/publish/publish-guide/\n- [ ] Create Minimum POM information\n- [ ] Add PGP signing: https://central.sonatype.org/publish/requirements/#provide-files-checksums","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1658079837,"metadata":{"github-id":"UCE_lAHOFCNQW848IOAKzjEIBGc"},"target":"42d062668a65b574db7f970c29081652f670b53bf46d2e9b1c648c4fb6a5e38a","message":"This makes sure, that the Java code is releasable via Maven at any time.\n\n- [x] Create guidelines/checklist for Maven Central public release.\n- [ ] Release to GitHub repo first for initial testing.\n   - [ ] https://stackoverflow.com/questions/53637262/setting-the-developerconnection-for-the-maven-release-plugin-from-the-command-li/54250791#54250791\n   - [ ] Make snapshot deployments:\n      - [x] `mci \u0026\u0026 mvn deploy -Drepo-github-enable=1`\n      - [x] [Ensure GitHub authentication works.](https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-apache-maven-registry)\n      - [ ] Document Maven repo on GitHub as an alternative to Maven Central, which would especially suitable for snapshot builds.\n      - [ ] Test and document using snapshot builds as a dependency.\n      - [ ] Use Bill of material in order to keep managing versions of all projects simple: http://djl.ai/bom/\n   - [ ] Create release script.\n```\nmci\nmvn release:prepare -Drepo-github-enable=1\nmvn release:perform -Drepo-github-enable=1\n```\n- [ ] Create release guidelines.\n   - [ ] https://dzone.com/articles/how-to-create-and-release-a-jar-to-maven-central\n      - [ ] https://maven.apache.org/repository/guide-central-repository-upload.html\n         - [ ] Deploy sources.\n         - [ ] Deploy javadoc.\n         - [ ] Provide checksums.\n         - [ ] SIng files with GPG/PGP\n         - [x] name\n         - [x] description\n         - [x] url\n         - [x] License\n         - [x] Developer Information\n         - [x] SCM Informations\n- [ ] Release to Maven Central. Do this with multiple deploys and not multiple release performs.\n   - [ ] https://central.sonatype.org/publish/publish-guide/\n- [ ] Create Minimum POM information\n- [ ] Add PGP signing: https://central.sonatype.org/publish/requirements/#provide-files-checksums","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1658080289,"metadata":{"github-id":"UCE_lAHOFCNQW848IOAKzjEICh4"},"target":"42d062668a65b574db7f970c29081652f670b53bf46d2e9b1c648c4fb6a5e38a","message":"This makes sure, that the Java code is releasable via Maven at any time.\n\n- [x] Create guidelines/checklist for Maven Central public release.\n- [ ] Release to GitHub repo first for initial testing.\n   - [ ] https://stackoverflow.com/questions/53637262/setting-the-developerconnection-for-the-maven-release-plugin-from-the-command-li/54250791#54250791\n   - [ ] Make snapshot deployments:\n      - [x] `mci \u0026\u0026 mvn deploy -Drepo-github-enable=1`\n      - [x] [Ensure GitHub authentication works.](https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-apache-maven-registry)\n      - [ ] Document Maven repo on GitHub as an alternative to Maven Central, which would especially suitable for snapshot builds.\n      - [ ] Test and document using snapshot builds as a dependency. Use a dedicated settings file for this.\n      - [ ] Use Bill of material in order to keep managing versions of all projects simple: http://djl.ai/bom/\n   - [ ] Create release script.\n```\nmci\nmvn release:prepare -Drepo-github-enable=1\nmvn release:perform -Drepo-github-enable=1\n```\n- [ ] Create release guidelines.\n   - [ ] https://dzone.com/articles/how-to-create-and-release-a-jar-to-maven-central\n      - [ ] https://maven.apache.org/repository/guide-central-repository-upload.html\n         - [ ] Deploy sources.\n         - [ ] Deploy javadoc.\n         - [ ] Provide checksums.\n         - [ ] SIng files with GPG/PGP\n         - [x] name\n         - [x] description\n         - [x] url\n         - [x] License\n         - [x] Developer Information\n         - [x] SCM Informations\n- [ ] Release to Maven Central. Do this with multiple deploys and not multiple release performs.\n   - [ ] https://central.sonatype.org/publish/publish-guide/\n- [ ] Create Minimum POM information\n- [ ] Add PGP signing: https://central.sonatype.org/publish/requirements/#provide-files-checksums","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1658080331,"metadata":{"github-id":"UCE_lAHOFCNQW848IOAKzjEICp0"},"target":"42d062668a65b574db7f970c29081652f670b53bf46d2e9b1c648c4fb6a5e38a","message":"This makes sure, that the Java code is releasable via Maven at any time.\n\n- [x] Create guidelines/checklist for Maven Central public release.\n- [ ] Release to GitHub repo first for initial testing.\n   - [ ] https://stackoverflow.com/questions/53637262/setting-the-developerconnection-for-the-maven-release-plugin-from-the-command-li/54250791#54250791\n   - [ ] Make snapshot deployments:\n      - [x] `mci \u0026\u0026 mvn deploy -Drepo-github-enable=1`\n      - [x] [Ensure GitHub authentication works.](https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-apache-maven-registry)\n      - [ ] Document Maven repo on GitHub as an alternative to Maven Central, which would especially suitable for snapshot builds.\n      - [ ] Test and document using snapshot builds as a dependency. Use a dedicated settings file with environment variables for this.\n      - [ ] Use Bill of material in order to keep managing versions of all projects simple: http://djl.ai/bom/\n   - [ ] Create release script.\n```\nmci\nmvn release:prepare -Drepo-github-enable=1\nmvn release:perform -Drepo-github-enable=1\n```\n- [ ] Create release guidelines.\n   - [ ] https://dzone.com/articles/how-to-create-and-release-a-jar-to-maven-central\n      - [ ] https://maven.apache.org/repository/guide-central-repository-upload.html\n         - [ ] Deploy sources.\n         - [ ] Deploy javadoc.\n         - [ ] Provide checksums.\n         - [ ] SIng files with GPG/PGP\n         - [x] name\n         - [x] description\n         - [x] url\n         - [x] License\n         - [x] Developer Information\n         - [x] SCM Informations\n- [ ] Release to Maven Central. Do this with multiple deploys and not multiple release performs.\n   - [ ] https://central.sonatype.org/publish/publish-guide/\n- [ ] Create Minimum POM information\n- [ ] Add PGP signing: https://central.sonatype.org/publish/requirements/#provide-files-checksums","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1658080365,"metadata":{"github-id":"UCE_lAHOFCNQW848IOAKzjEICxM"},"target":"42d062668a65b574db7f970c29081652f670b53bf46d2e9b1c648c4fb6a5e38a","message":"This makes sure, that the Java code is releasable via Maven at any time.\n\n- [x] Create guidelines/checklist for Maven Central public release.\n- [ ] Release to GitHub repo first for initial testing.\n   - [ ] https://stackoverflow.com/questions/53637262/setting-the-developerconnection-for-the-maven-release-plugin-from-the-command-li/54250791#54250791\n   - [ ] Make snapshot deployments:\n      - [x] `mci \u0026\u0026 mvn deploy -Drepo-github-enable=1`\n      - [x] [Ensure GitHub authentication works.](https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-apache-maven-registry)\n      - [ ] Document Maven repo on GitHub as an alternative to Maven Central, which would especially suitable for snapshot builds.\n      - [ ] Test and document using snapshot builds as a dependency. Use a dedicated settings file with environment variables for this (see https://stackoverflow.com/questions/31251259/how-to-pass-maven-settings-via-environmental-vars and https://stackoverflow.com/questions/25277866/maven-command-line-how-to-point-to-a-specific-settings-xml-for-a-single-command).\n      - [ ] Use Bill of material in order to keep managing versions of all projects simple: http://djl.ai/bom/\n   - [ ] Create release script.\n```\nmci\nmvn release:prepare -Drepo-github-enable=1\nmvn release:perform -Drepo-github-enable=1\n```\n- [ ] Create release guidelines.\n   - [ ] https://dzone.com/articles/how-to-create-and-release-a-jar-to-maven-central\n      - [ ] https://maven.apache.org/repository/guide-central-repository-upload.html\n         - [ ] Deploy sources.\n         - [ ] Deploy javadoc.\n         - [ ] Provide checksums.\n         - [ ] SIng files with GPG/PGP\n         - [x] name\n         - [x] description\n         - [x] url\n         - [x] License\n         - [x] Developer Information\n         - [x] SCM Informations\n- [ ] Release to Maven Central. Do this with multiple deploys and not multiple release performs.\n   - [ ] https://central.sonatype.org/publish/publish-guide/\n- [ ] Create Minimum POM information\n- [ ] Add PGP signing: https://central.sonatype.org/publish/requirements/#provide-files-checksums","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1658080403,"metadata":{"github-id":"UCE_lAHOFCNQW848IOAKzjEIC38"},"target":"42d062668a65b574db7f970c29081652f670b53bf46d2e9b1c648c4fb6a5e38a","message":"This makes sure, that the Java code is releasable via Maven at any time.\n\n- [x] Create guidelines/checklist for Maven Central public release.\n- [ ] Release to GitHub repo first for initial testing.\n   - [ ] https://stackoverflow.com/questions/53637262/setting-the-developerconnection-for-the-maven-release-plugin-from-the-command-li/54250791#54250791\n   - [ ] Make snapshot deployments:\n      - [x] `mci \u0026\u0026 mvn deploy -Drepo-github-enable=1`\n      - [x] [Ensure GitHub authentication works.](https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-apache-maven-registry)\n      - [ ] Document Maven repo on GitHub as an alternative to Maven Central, which would especially suitable for snapshot builds.\n      - [ ] Test and document using snapshot builds as a dependency. Use a dedicated settings file with environment variables for this (see https://stackoverflow.com/questions/31251259/how-to-pass-maven-settings-via-environmental-vars and https://stackoverflow.com/questions/25277866/maven-command-line-how-to-point-to-a-specific-settings-xml-for-a-single-command).\n      - [ ] Use temporary m2 folder for testing.\n      - [ ] Use Bill of material in order to keep managing versions of all projects simple: http://djl.ai/bom/\n   - [ ] Create release script.\n```\nmci\nmvn release:prepare -Drepo-github-enable=1\nmvn release:perform -Drepo-github-enable=1\n```\n- [ ] Create release guidelines.\n   - [ ] https://dzone.com/articles/how-to-create-and-release-a-jar-to-maven-central\n      - [ ] https://maven.apache.org/repository/guide-central-repository-upload.html\n         - [ ] Deploy sources.\n         - [ ] Deploy javadoc.\n         - [ ] Provide checksums.\n         - [ ] SIng files with GPG/PGP\n         - [x] name\n         - [x] description\n         - [x] url\n         - [x] License\n         - [x] Developer Information\n         - [x] SCM Informations\n- [ ] Release to Maven Central. Do this with multiple deploys and not multiple release performs.\n   - [ ] https://central.sonatype.org/publish/publish-guide/\n- [ ] Create Minimum POM information\n- [ ] Add PGP signing: https://central.sonatype.org/publish/requirements/#provide-files-checksums","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1658528296,"metadata":{"github-id":"UCE_lAHOFCNQW848IOAKzjFWmzY"},"target":"42d062668a65b574db7f970c29081652f670b53bf46d2e9b1c648c4fb6a5e38a","message":"This makes sure, that the Java code is releasable via Maven at any time.\n\n- [x] Create guidelines/checklist for Maven Central public release.\n- [ ] Release to GitHub repo first for initial testing.\n   - [ ] https://stackoverflow.com/questions/53637262/setting-the-developerconnection-for-the-maven-release-plugin-from-the-command-li/54250791#54250791\n   - [ ] Make snapshot deployments:\n      - [x] `mci \u0026\u0026 mvn deploy -Drepo-github-enable=1`\n      - [x] [Ensure GitHub authentication works.](https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-apache-maven-registry)\n      - [ ] Document Maven repo on GitHub as an alternative to Maven Central, which would especially suitable for snapshot builds.\n      - [ ] Test and document using snapshot builds as a dependency. Use a dedicated settings file with environment variables for this (see https://stackoverflow.com/questions/31251259/how-to-pass-maven-settings-via-environmental-vars and https://stackoverflow.com/questions/25277866/maven-command-line-how-to-point-to-a-specific-settings-xml-for-a-single-command).\n      - [x] Use temporary m2 folder for testing.\n      - [ ] Use Bill of material in order to keep managing versions of all projects simple: http://djl.ai/bom/\n   - [ ] Create release script.\n```\nmci\nmvn release:prepare -Drepo-github-enable=1\nmvn release:perform -Drepo-github-enable=1\n```\n- [ ] Create release guidelines.\n   - [ ] https://dzone.com/articles/how-to-create-and-release-a-jar-to-maven-central\n      - [ ] https://maven.apache.org/repository/guide-central-repository-upload.html\n         - [ ] Deploy sources.\n         - [ ] Deploy javadoc.\n         - [ ] Provide checksums.\n         - [ ] SIng files with GPG/PGP\n         - [x] name\n         - [x] description\n         - [x] url\n         - [x] License\n         - [x] Developer Information\n         - [x] SCM Informations\n- [ ] Release to Maven Central. Do this with multiple deploys and not multiple release performs.\n   - [ ] https://central.sonatype.org/publish/publish-guide/\n- [ ] Create Minimum POM information\n- [ ] Add PGP signing: https://central.sonatype.org/publish/requirements/#provide-files-checksums","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1658528299,"metadata":{"github-id":"UCE_lAHOFCNQW848IOAKzjFWm0U"},"target":"42d062668a65b574db7f970c29081652f670b53bf46d2e9b1c648c4fb6a5e38a","message":"This makes sure, that the Java code is releasable via Maven at any time.\n\n- [x] Create guidelines/checklist for Maven Central public release.\n- [ ] Release to GitHub repo first for initial testing.\n   - [ ] https://stackoverflow.com/questions/53637262/setting-the-developerconnection-for-the-maven-release-plugin-from-the-command-li/54250791#54250791\n   - [ ] Make snapshot deployments:\n      - [x] `mci \u0026\u0026 mvn deploy -Drepo-github-enable=1`\n      - [x] [Ensure GitHub authentication works.](https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-apache-maven-registry)\n      - [ ] Document Maven repo on GitHub as an alternative to Maven Central, which would especially suitable for snapshot builds.\n      - [x] Test and document using snapshot builds as a dependency. Use a dedicated settings file with environment variables for this (see https://stackoverflow.com/questions/31251259/how-to-pass-maven-settings-via-environmental-vars and https://stackoverflow.com/questions/25277866/maven-command-line-how-to-point-to-a-specific-settings-xml-for-a-single-command).\n      - [x] Use temporary m2 folder for testing.\n      - [ ] Use Bill of material in order to keep managing versions of all projects simple: http://djl.ai/bom/\n   - [ ] Create release script.\n```\nmci\nmvn release:prepare -Drepo-github-enable=1\nmvn release:perform -Drepo-github-enable=1\n```\n- [ ] Create release guidelines.\n   - [ ] https://dzone.com/articles/how-to-create-and-release-a-jar-to-maven-central\n      - [ ] https://maven.apache.org/repository/guide-central-repository-upload.html\n         - [ ] Deploy sources.\n         - [ ] Deploy javadoc.\n         - [ ] Provide checksums.\n         - [ ] SIng files with GPG/PGP\n         - [x] name\n         - [x] description\n         - [x] url\n         - [x] License\n         - [x] Developer Information\n         - [x] SCM Informations\n- [ ] Release to Maven Central. Do this with multiple deploys and not multiple release performs.\n   - [ ] https://central.sonatype.org/publish/publish-guide/\n- [ ] Create Minimum POM information\n- [ ] Add PGP signing: https://central.sonatype.org/publish/requirements/#provide-files-checksums","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1658528338,"metadata":{"github-id":"UCE_lAHOFCNQW848IOAKzjFWnFI"},"target":"42d062668a65b574db7f970c29081652f670b53bf46d2e9b1c648c4fb6a5e38a","message":"This makes sure, that the Java code is releasable via Maven at any time.\n\n- [x] Create guidelines/checklist for Maven Central public release.\n- [ ] Release to GitHub repo first for initial testing.\n   - [ ] https://stackoverflow.com/questions/53637262/setting-the-developerconnection-for-the-maven-release-plugin-from-the-command-li/54250791#54250791\n   - [ ] Make snapshot deployments:\n      - [x] `mci \u0026\u0026 mvn deploy -Drepo-github-enable=1`\n      - [x] [Ensure GitHub authentication works.](https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-apache-maven-registry)\n      - [ ] Document Maven repo on GitHub as an alternative to Maven Central, which would especially suitable for snapshot builds.\n      - [x] Test and document using snapshot builds as a dependency. Use a dedicated settings file with environment variables for this (see https://stackoverflow.com/questions/31251259/how-to-pass-maven-settings-via-environmental-vars and https://stackoverflow.com/questions/25277866/maven-command-line-how-to-point-to-a-specific-settings-xml-for-a-single-command).\n      - [x] Use temporary m2 folder for testing.\n      - [ ] Use all projects as Snapshot dependencies for system project, which in turn can be used as a full GitHub test.\n      - [ ] Use Bill of material in order to keep managing versions of all projects simple: http://djl.ai/bom/\n   - [ ] Create release script.\n```\nmci\nmvn release:prepare -Drepo-github-enable=1\nmvn release:perform -Drepo-github-enable=1\n```\n- [ ] Create release guidelines.\n   - [ ] https://dzone.com/articles/how-to-create-and-release-a-jar-to-maven-central\n      - [ ] https://maven.apache.org/repository/guide-central-repository-upload.html\n         - [ ] Deploy sources.\n         - [ ] Deploy javadoc.\n         - [ ] Provide checksums.\n         - [ ] SIng files with GPG/PGP\n         - [x] name\n         - [x] description\n         - [x] url\n         - [x] License\n         - [x] Developer Information\n         - [x] SCM Informations\n- [ ] Release to Maven Central. Do this with multiple deploys and not multiple release performs.\n   - [ ] https://central.sonatype.org/publish/publish-guide/\n- [ ] Create Minimum POM information\n- [ ] Add PGP signing: https://central.sonatype.org/publish/requirements/#provide-files-checksums","files":null}]}