{"version":1,"ops":[{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1644802435,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzinWD48"},"target":"0eb22468ca430590b64b912186acbd5aa7e5c9e9a6966a91d8d4ed43f30a317c","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1651259261,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzi1GnVM"},"target":"0eb22468ca430590b64b912186acbd5aa7e5c9e9a6966a91d8d4ed43f30a317c","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [ ] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1651259467,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzi1GpeI"},"target":"0eb22468ca430590b64b912186acbd5aa7e5c9e9a6966a91d8d4ed43f30a317c","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [ ] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [ ] Adapt repo.process` to this new config.\n* [ ] Document this.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1651259661,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzi1Grkg"},"target":"0eb22468ca430590b64b912186acbd5aa7e5c9e9a6966a91d8d4ed43f30a317c","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [ ] Adapt repo.process` to this new config.\n* [ ] Document this.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1651906522,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzi2XvkU"},"target":"0eb22468ca430590b64b912186acbd5aa7e5c9e9a6966a91d8d4ed43f30a317c","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [ ] Adapt repo.process` to this new config.\n   * [ ] Read file if present in local repo.\n   * [ ] List all individual repos.\n   * [ ] Generate URLs.\n   * [ ] Process URLs.\n* [ ] Document this.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1651906612,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzi2Xv-E"},"target":"0eb22468ca430590b64b912186acbd5aa7e5c9e9a6966a91d8d4ed43f30a317c","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [ ] Adapt repo.process` to this new config.\n   * [ ] `net.splitcells.osi.repos.peers`\n      * [ ] Read file if present in local repo.\n      * [ ] List all individual repos.\n      * [ ] Generate URLs.\n      * [ ] Process URLs.\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [ ] Document this.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1651907441,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzi2X0P8"},"target":"0eb22468ca430590b64b912186acbd5aa7e5c9e9a6966a91d8d4ed43f30a317c","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [ ] Adapt repo.process` to this new config.\n   * [ ] `net.splitcells.osi.repos.peers`\n      * [x] Read file if present in local repo.\n      * [ ] List all individual repos.\n      * [ ] Generate URLs.\n      * [ ] Process URLs.\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [ ] Document this.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1652648397,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzi3ztfU"},"target":"0eb22468ca430590b64b912186acbd5aa7e5c9e9a6966a91d8d4ed43f30a317c","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [ ] Adapt repo.process` to this new config.\n   * [ ] `net.splitcells.osi.repos.peers`\n      * [x] Read file if present in local repo.\n      * [x] List all individual repos.\n      * [ ] Generate URLs.\n      * [ ] Process URLs.\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [ ] Document this.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1652648808,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzi3zvwQ"},"target":"0eb22468ca430590b64b912186acbd5aa7e5c9e9a6966a91d8d4ed43f30a317c","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [ ] Adapt repo.process` to this new config.\n   * [ ] `net.splitcells.osi.repos.peers`\n      * [x] Read file if present in local repo.\n      * [x] List all individual repos.\n      * [ ] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [ ] Process URLs.\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [ ] Document this.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1653088147,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzi5FJRw"},"target":"0eb22468ca430590b64b912186acbd5aa7e5c9e9a6966a91d8d4ed43f30a317c","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [ ] Adapt repo.process` to this new config.\n   * [ ] `net.splitcells.osi.repos.peers`\n      * [x] Read file if present in local repo.\n      * [x] List all individual repos.\n      * [ ] Move processing of sub repo to dedicated method, that does not know where the sub is located.\n      * [ ] Call sub process method on peer elements.\n   * [ ] `net.splitcells.osi.repos.hosts`\n      * [ ] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [ ] Process URLs.\n* [ ] Document this.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1653762490,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzi6ikVk"},"target":"0eb22468ca430590b64b912186acbd5aa7e5c9e9a6966a91d8d4ed43f30a317c","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [ ] Adapt repo.process` to this new config.\n   * [ ] `net.splitcells.osi.repos.peers`\n      * [x] Read file if present in local repo.\n      * [x] List all individual repos.\n      * [x] Move processing of sub repo to dedicated method, that does not know where the sub is located.\n      * [ ] Call sub process method on peer elements.\n   * [ ] `net.splitcells.osi.repos.hosts`\n      * [ ] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [ ] Process URLs.\n* [ ] Document this.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1653762491,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzi6ikV0"},"target":"0eb22468ca430590b64b912186acbd5aa7e5c9e9a6966a91d8d4ed43f30a317c","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [ ] Adapt repo.process` to this new config.\n   * [ ] `net.splitcells.osi.repos.peers`\n      * [x] Read file if present in local repo.\n      * [x] List all individual repos.\n      * [x] Move processing of sub repo to dedicated method, that does not know where the sub is located.\n      * [x] Call sub process method on peer elements.\n   * [ ] `net.splitcells.osi.repos.hosts`\n      * [ ] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [ ] Process URLs.\n* [ ] Document this.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1653765519,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzi6is6g"},"target":"0eb22468ca430590b64b912186acbd5aa7e5c9e9a6966a91d8d4ed43f30a317c","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [ ] Adapt repo.process` to this new config.\n   * [x] `net.splitcells.osi.repos.peers`\n      * [x] Read file if present in local repo.\n      * [x] List all individual repos.\n      * [x] Move processing of sub repo to dedicated method, that does not know where the sub is located.\n      * [x] Call sub process method on peer elements.\n   * [ ] `net.splitcells.osi.repos.hosts`\n      * [ ] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [ ] Process URLs.\n* [ ] Document this.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1653765848,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzi6it7w"},"target":"0eb22468ca430590b64b912186acbd5aa7e5c9e9a6966a91d8d4ed43f30a317c","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [ ] Adapt repo.process` to this new config.\n   * [ ] `net.splitcells.osi.repos.peers`\n      * [x] Read file if present in local repo.\n      * [x] List all individual repos.\n      * [x] Move processing of sub repo to dedicated method, that does not know where the sub is located.\n      * [x] Call sub process method on peer elements.\n   * [ ] `net.splitcells.osi.repos.hosts`\n      * [ ] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [ ] Process URLs.\n* [ ] Document this.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1653765883,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzi6iuDM"},"target":"0eb22468ca430590b64b912186acbd5aa7e5c9e9a6966a91d8d4ed43f30a317c","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [ ] Adapt repo.process` to this new config.\n   * [ ] `net.splitcells.osi.repos.peers`\n      * [x] Read file if present in local repo.\n      * [x] List all individual repos.\n      * [x] Move processing of sub repo to dedicated method, that does not know where the sub is located.\n      * [x] Call sub process method on peer elements.\n      * [ ] Document functionality.\n   * [ ] `net.splitcells.osi.repos.hosts`\n      * [ ] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [ ] Process URLs.\n* [ ] Document this.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1653766463,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzi6ivt0"},"target":"0eb22468ca430590b64b912186acbd5aa7e5c9e9a6966a91d8d4ed43f30a317c","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [ ] Adapt repo.process` to this new config.\n   * [ ] `net.splitcells.osi.repos.peers`\n      * [x] Read file if present in local repo.\n      * [x] List all individual repos.\n      * [x] Move processing of sub repo to dedicated method, that does not know where the sub is located.\n      * [x] Call sub process method on peer elements.\n   * [ ] `net.splitcells.osi.repos.hosts`\n      * [ ] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [ ] Process URLs.\n* [ ] Document this.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [ ] Test functionality.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1653766466,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzi6ivuQ"},"target":"0eb22468ca430590b64b912186acbd5aa7e5c9e9a6966a91d8d4ed43f30a317c","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [ ] Adapt repo.process` to this new config.\n   * [x] `net.splitcells.osi.repos.peers`\n      * [x] Read file if present in local repo.\n      * [x] List all individual repos.\n      * [x] Move processing of sub repo to dedicated method, that does not know where the sub is located.\n      * [x] Call sub process method on peer elements.\n   * [ ] `net.splitcells.osi.repos.hosts`\n      * [ ] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [ ] Process URLs.\n* [ ] Document this.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [ ] Test functionality.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1654371271,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzi77buo"},"target":"0eb22468ca430590b64b912186acbd5aa7e5c9e9a6966a91d8d4ed43f30a317c","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [ ] Adapt repo.process` to this new config.\n   * [x] `net.splitcells.osi.repos.peers` in `repo.process`\n      * [x] Read file if present in local repo.\n      * [x] List all individual repos.\n      * [x] Move processing of sub repo to dedicated method, that does not know where the sub is located.\n      * [x] Call sub process method on peer elements.\n   * [ ] `net.splitcells.osi.repos.hosts` via new command `repo.push.to.all`.\n      * [ ] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [ ] Process URLs.\n* [ ] Document this.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [ ] Test functionality.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1654371309,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzi77b4I"},"target":"0eb22468ca430590b64b912186acbd5aa7e5c9e9a6966a91d8d4ed43f30a317c","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [ ] Adapt repo.process` to this new config.\n   * [x] `net.splitcells.osi.repos.peers` in `repo.process`\n      * [x] Read file if present in local repo.\n      * [x] List all individual repos.\n      * [x] Move processing of sub repo to dedicated method, that does not know where the sub is located.\n      * [x] Call sub process method on peer elements.\n   * [ ] `net.splitcells.osi.repos.hosts` via new command `repo.push.at.all`.\n      * [ ] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [ ] Process URLs.\n* [ ] Document this.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [ ] Test functionality.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1654372635,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzi77f4M"},"target":"0eb22468ca430590b64b912186acbd5aa7e5c9e9a6966a91d8d4ed43f30a317c","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [ ] Adapt repo.process` to this new config.\n   * [x] `net.splitcells.osi.repos.peers` in `repo.process`\n      * [x] Read file if present in local repo.\n      * [x] List all individual repos.\n      * [x] Move processing of sub repo to dedicated method, that does not know where the sub is located.\n      * [x] Call sub process method on peer elements.\n   * [ ] `net.splitcells.osi.repos.hosts` via new command `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [ ] Process URLs.\n* [ ] Document this.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [ ] Test functionality.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1654372785,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzi77gQ8"},"target":"0eb22468ca430590b64b912186acbd5aa7e5c9e9a6966a91d8d4ed43f30a317c","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [ ] Adapt repo.process` to this new config.\n   * [x] `net.splitcells.osi.repos.peers` in `repo.process`\n      * [x] Read file if present in local repo.\n      * [x] List all individual repos.\n      * [x] Move processing of sub repo to dedicated method, that does not know where the sub is located.\n      * [x] Call sub process method on peer elements.\n   * [ ] `net.splitcells.osi.repos.hosts` via new command `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [ ] Process URLs.\n   * [ ] `net.splitcells.osi.repos.hosts` via `repo.process`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [ ] Process URLs.\n      * [ ] Propagate values to child repo calls of `repo.process`. \n      * [ ] Provide these values to command calls during the processing of one repo node,\n         so it could be used by `repo.push.at.all`.\n* [ ] Document this.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [ ] Test functionality.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1654372791,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzi77gSg"},"target":"0eb22468ca430590b64b912186acbd5aa7e5c9e9a6966a91d8d4ed43f30a317c","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [ ] Adapt repo.process` to this new config.\n   * [x] `net.splitcells.osi.repos.peers` in `repo.process`\n      * [x] Read file if present in local repo.\n      * [x] List all individual repos.\n      * [x] Move processing of sub repo to dedicated method, that does not know where the sub is located.\n      * [x] Call sub process method on peer elements.\n   * [ ] `net.splitcells.osi.repos.hosts` via new command `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [ ] Process URLs.\n   * [ ] `net.splitcells.osi.repos.hosts` via `repo.process`.\n      * [ ] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [ ] Process URLs.\n      * [ ] Propagate values to child repo calls of `repo.process`. \n      * [ ] Provide these values to command calls during the processing of one repo node,\n         so it could be used by `repo.push.at.all`.\n* [ ] Document this.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [ ] Test functionality.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1655553454,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzi-oY7c"},"target":"0eb22468ca430590b64b912186acbd5aa7e5c9e9a6966a91d8d4ed43f30a317c","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [ ] Adapt repo.process` to this new config.\n   * [x] `net.splitcells.osi.repos.peers` in `repo.process`\n      * [x] Read file if present in local repo.\n      * [x] List all individual repos.\n      * [x] Move processing of sub repo to dedicated method, that does not know where the sub is located.\n      * [x] Call sub process method on peer elements.\n   * [ ] `net.splitcells.osi.repos.hosts` via new command `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n   * [ ] `net.splitcells.osi.repos.hosts` via `repo.process`.\n      * [ ] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [ ] Process URLs.\n      * [ ] Propagate values to child repo calls of `repo.process`. \n      * [ ] Provide these values to command calls during the processing of one repo node,\n         so it could be used by `repo.push.at.all`.\n* [ ] Document this.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [ ] Test functionality.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1655553707,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzi-oZtk"},"target":"0eb22468ca430590b64b912186acbd5aa7e5c9e9a6966a91d8d4ed43f30a317c","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [ ] Adapt repo.process` to this new config.\n   * [x] `net.splitcells.osi.repos.peers` in `repo.process`\n      * [x] Read file if present in local repo.\n      * [x] List all individual repos.\n      * [x] Move processing of sub repo to dedicated method, that does not know where the sub is located.\n      * [x] Call sub process method on peer elements.\n   * [x] `net.splitcells.osi.repos.hosts` via new command `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n   * [ ] `net.splitcells.osi.repos.hosts` via `repo.process`.\n      * [ ] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [ ] Process URLs.\n      * [ ] Propagate values to child repo calls of `repo.process`. \n      * [ ] Provide these values to command calls during the processing of one repo node,\n         so it could be used by `repo.push.at.all`.\n* [ ] Document this.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [ ] Test functionality.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1655554931,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzi-odjw"},"target":"0eb22468ca430590b64b912186acbd5aa7e5c9e9a6966a91d8d4ed43f30a317c","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [ ] Adapt repo.process` to this new config.\n   * [x] `net.splitcells.osi.repos.peers` in `repo.process`\n      * [x] Read file if present in local repo.\n      * [x] List all individual repos.\n      * [x] Move processing of sub repo to dedicated method, that does not know where the sub is located.\n      * [x] Call sub process method on peer elements.\n   * [ ] `net.splitcells.osi.repos.hosts` via new command `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [ ] Use `repo.process` in order to push to peer repos..\n   * [ ] `net.splitcells.osi.repos.hosts` via `repo.process`.\n      * [ ] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [ ] Process URLs.\n      * [ ] Propagate values to child repo calls of `repo.process`. \n      * [ ] Provide these values to command calls during the processing of one repo node,\n         so it could be used by `repo.push.at.all`.\n* [ ] Document this.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [ ] Test functionality.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1655554944,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzi-odlI"},"target":"0eb22468ca430590b64b912186acbd5aa7e5c9e9a6966a91d8d4ed43f30a317c","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [ ] Adapt repo.process` to this new config.\n   * [x] `net.splitcells.osi.repos.peers` in `repo.process`\n      * [x] Read file if present in local repo.\n      * [x] List all individual repos.\n      * [x] Move processing of sub repo to dedicated method, that does not know where the sub is located.\n      * [x] Call sub process method on peer elements.\n   * [ ] `net.splitcells.osi.repos.hosts` via new command `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [ ] Use `repo.process` in order to push to peer repos and not only to the current repo.\n   * [ ] `net.splitcells.osi.repos.hosts` via `repo.process`.\n      * [ ] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [ ] Process URLs.\n      * [ ] Propagate values to child repo calls of `repo.process`. \n      * [ ] Provide these values to command calls during the processing of one repo node,\n         so it could be used by `repo.push.at.all`.\n* [ ] Document this.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [ ] Test functionality.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1656977053,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzjBw-DE"},"target":"0eb22468ca430590b64b912186acbd5aa7e5c9e9a6966a91d8d4ed43f30a317c","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [ ] Adapt repo.process` to this new config.\n   * [x] `net.splitcells.osi.repos.peers` in `repo.process`\n      * [x] Read file if present in local repo.\n      * [x] List all individual repos.\n      * [x] Move processing of sub repo to dedicated method, that does not know where the sub is located.\n      * [x] Call sub process method on peer elements.\n   * [ ] `net.splitcells.osi.repos.hosts` via new command `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [ ] Use `repo.process` in order to push to peer repos and not only to the current repo.\n      * [ ] Abort process on first error.\n   * [ ] `net.splitcells.osi.repos.hosts` via `repo.process`.\n      * [ ] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [ ] Process URLs.\n      * [ ] Propagate values to child repo calls of `repo.process`. \n      * [ ] Provide these values to command calls during the processing of one repo node,\n         so it could be used by `repo.push.at.all`.\n* [ ] Document this.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [ ] Test functionality.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1656977462,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzjBxAhQ"},"target":"0eb22468ca430590b64b912186acbd5aa7e5c9e9a6966a91d8d4ed43f30a317c","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [ ] Adapt repo.process` to this new config.\n   * [x] `net.splitcells.osi.repos.peers` in `repo.process`\n      * [x] Read file if present in local repo.\n      * [x] List all individual repos.\n      * [x] Move processing of sub repo to dedicated method, that does not know where the sub is located.\n      * [x] Call sub process method on peer elements.\n   * [ ] `net.splitcells.osi.repos.hosts` via new command `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [ ] Use `repo.process` in order to push to peer repos and not only to the current repo.\n      * [ ] Abort process on first error.\n   * [ ] `net.splitcells.osi.repos.hosts` via `repo.process`.\n      * [ ] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [ ] Process URLs.\n      * [ ] Propagate values to child repo calls of `repo.process`. \n      * [ ] Provide these values to command calls during the processing of one repo node,\n         so it could be used by `repo.push.at.all`.\n* [ ] Document this.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [ ] Test functionality.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [ ] Document all public and private arguments of `repo.process`.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1656977673,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzjBxBiE"},"target":"0eb22468ca430590b64b912186acbd5aa7e5c9e9a6966a91d8d4ed43f30a317c","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [ ] Adapt repo.process` to this new config.\n   * [x] `net.splitcells.osi.repos.peers` in `repo.process`\n      * [x] Read file if present in local repo.\n      * [x] List all individual repos.\n      * [x] Move processing of sub repo to dedicated method, that does not know where the sub is located.\n      * [x] Call sub process method on peer elements.\n   * [ ] `net.splitcells.osi.repos.hosts` via new command `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [ ] Use `repo.process` in order to push to peer repos and not only to the current repo.\n      * [ ] Abort process on first error.\n      * [ ] Document `$peerRepo` of `repo.process`.\n   * [ ] `net.splitcells.osi.repos.hosts` via `repo.process`.\n      * [ ] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [ ] Process URLs.\n      * [ ] Propagate values to child repo calls of `repo.process`. \n      * [ ] Provide these values to command calls during the processing of one repo node,\n         so it could be used by `repo.push.at.all`.\n* [ ] Document this.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [ ] Test functionality.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [ ] Document all public and private arguments of `repo.process`.\n* [ ] Document `$subRepo` of `repo.process`.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1656978284,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzjBxEZk"},"target":"0eb22468ca430590b64b912186acbd5aa7e5c9e9a6966a91d8d4ed43f30a317c","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [ ] Adapt repo.process` to this new config.\n   * [x] `net.splitcells.osi.repos.peers` in `repo.process`\n      * [x] Read file if present in local repo.\n      * [x] List all individual repos.\n      * [x] Move processing of sub repo to dedicated method, that does not know where the sub is located.\n      * [x] Call sub process method on peer elements.\n   * [ ] `net.splitcells.osi.repos.hosts` via new command `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Use `repo.process` in order to push to peer repos and not only to the current repo.\n      * [ ] Abort process on first error.\n      * [ ] Document `$peerRepo` of `repo.process`.\n   * [ ] `net.splitcells.osi.repos.hosts` via `repo.process`.\n      * [ ] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [ ] Process URLs.\n      * [ ] Propagate values to child repo calls of `repo.process`. \n      * [ ] Provide these values to command calls during the processing of one repo node,\n         so it could be used by `repo.push.at.all`.\n* [ ] Document this.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [ ] Test functionality.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [ ] Document all public and private arguments of `repo.process`.\n* [ ] Document `$subRepo` of `repo.process`.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1657404205,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzjCxHPE"},"target":"0eb22468ca430590b64b912186acbd5aa7e5c9e9a6966a91d8d4ed43f30a317c","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [ ] Adapt repo.process` to this new config.\n   * [x] `net.splitcells.osi.repos.peers` in `repo.process`\n      * [x] Read file if present in local repo.\n      * [x] List all individual repos.\n      * [x] Move processing of sub repo to dedicated method, that does not know where the sub is located.\n      * [x] Call sub process method on peer elements.\n   * [ ] `net.splitcells.osi.repos.hosts` via new command `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Use `repo.process` in order to push to peer repos and not only to the current repo.\n      * [x] Abort process on first error.\n      * [ ] Document `$peerRepo` of `repo.process`.\n   * [ ] `net.splitcells.osi.repos.hosts` via `repo.process`.\n      * [ ] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [ ] Process URLs.\n      * [ ] Propagate values to child repo calls of `repo.process`. \n      * [ ] Provide these values to command calls during the processing of one repo node,\n         so it could be used by `repo.push.at.all`.\n* [ ] Document this.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [ ] Test functionality.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [ ] Document all public and private arguments of `repo.process`.\n* [ ] Document `$subRepo` of `repo.process`.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1658020274,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzjEFOUw"},"target":"0eb22468ca430590b64b912186acbd5aa7e5c9e9a6966a91d8d4ed43f30a317c","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [ ] Adapt repo.process` to this new config.\n   * [x] `net.splitcells.osi.repos.peers` in `repo.process`\n      * [x] Read file if present in local repo.\n      * [x] List all individual repos.\n      * [x] Move processing of sub repo to dedicated method, that does not know where the sub is located.\n      * [x] Call sub process method on peer elements.\n   * [ ] `net.splitcells.osi.repos.hosts` via new command `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Use `repo.process` in order to push to peer repos and not only to the current repo.\n      * [x] Abort process on first error.\n      * [x] Document `$peerRepo` of `repo.process`.\n   * [ ] `net.splitcells.osi.repos.hosts` via `repo.process`.\n      * [ ] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [ ] Process URLs.\n      * [ ] Propagate values to child repo calls of `repo.process`. \n      * [ ] Provide these values to command calls during the processing of one repo node,\n         so it could be used by `repo.push.at.all`.\n* [ ] Document this.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [ ] Test functionality.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [ ] Document all public and private arguments of `repo.process`.\n* [ ] Document `$subRepo` of `repo.process`.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1658020276,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzjEFOWM"},"target":"0eb22468ca430590b64b912186acbd5aa7e5c9e9a6966a91d8d4ed43f30a317c","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [ ] Adapt repo.process` to this new config.\n   * [x] `net.splitcells.osi.repos.peers` in `repo.process`\n      * [x] Read file if present in local repo.\n      * [x] List all individual repos.\n      * [x] Move processing of sub repo to dedicated method, that does not know where the sub is located.\n      * [x] Call sub process method on peer elements.\n   * [x] `net.splitcells.osi.repos.hosts` via new command `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Use `repo.process` in order to push to peer repos and not only to the current repo.\n      * [x] Abort process on first error.\n      * [x] Document `$peerRepo` of `repo.process`.\n   * [ ] `net.splitcells.osi.repos.hosts` via `repo.process`.\n      * [ ] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [ ] Process URLs.\n      * [ ] Propagate values to child repo calls of `repo.process`. \n      * [ ] Provide these values to command calls during the processing of one repo node,\n         so it could be used by `repo.push.at.all`.\n* [ ] Document this.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [ ] Test functionality.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [ ] Document all public and private arguments of `repo.process`.\n* [ ] Document `$subRepo` of `repo.process`.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1658522498,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzjFV4hA"},"target":"0eb22468ca430590b64b912186acbd5aa7e5c9e9a6966a91d8d4ed43f30a317c","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [ ] Adapt repo.process` to this new config.\n   * [x] `net.splitcells.osi.repos.peers` in `repo.process`\n      * [x] Read file if present in local repo.\n      * [x] List all individual repos.\n      * [x] Move processing of sub repo to dedicated method, that does not know where the sub is located.\n      * [x] Call sub process method on peer elements.\n   * [x] `net.splitcells.osi.repos.hosts` via new command `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Use `repo.process` in order to push to peer repos and not only to the current repo.\n      * [x] Abort process on first error.\n      * [x] Document `$peerRepo` of `repo.process`.\n   * [ ] `net.splitcells.osi.repos.hosts` via `repo.process`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [ ] Process URLs.\n      * [ ] Propagate values to child repo calls of `repo.process`. \n      * [ ] Provide these values to command calls during the processing of one repo node,\n         so it could be used by `repo.push.at.all`.\n* [ ] Document this.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [ ] Test functionality.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [ ] Document all public and private arguments of `repo.process`.\n* [ ] Document `$subRepo` of `repo.process`.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1658522500,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzjFV4hk"},"target":"0eb22468ca430590b64b912186acbd5aa7e5c9e9a6966a91d8d4ed43f30a317c","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [ ] Adapt repo.process` to this new config.\n   * [x] `net.splitcells.osi.repos.peers` in `repo.process`\n      * [x] Read file if present in local repo.\n      * [x] List all individual repos.\n      * [x] Move processing of sub repo to dedicated method, that does not know where the sub is located.\n      * [x] Call sub process method on peer elements.\n   * [x] `net.splitcells.osi.repos.hosts` via new command `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Use `repo.process` in order to push to peer repos and not only to the current repo.\n      * [x] Abort process on first error.\n      * [x] Document `$peerRepo` of `repo.process`.\n   * [ ] `net.splitcells.osi.repos.hosts` via `repo.process`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [ ] Propagate values to child repo calls of `repo.process`. \n      * [ ] Provide these values to command calls during the processing of one repo node,\n         so it could be used by `repo.push.at.all`.\n* [ ] Document this.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [ ] Test functionality.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [ ] Document all public and private arguments of `repo.process`.\n* [ ] Document `$subRepo` of `repo.process`.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1658522504,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzjFV4j8"},"target":"0eb22468ca430590b64b912186acbd5aa7e5c9e9a6966a91d8d4ed43f30a317c","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [ ] Adapt repo.process` to this new config.\n   * [x] `net.splitcells.osi.repos.peers` in `repo.process`\n      * [x] Read file if present in local repo.\n      * [x] List all individual repos.\n      * [x] Move processing of sub repo to dedicated method, that does not know where the sub is located.\n      * [x] Call sub process method on peer elements.\n   * [x] `net.splitcells.osi.repos.hosts` via new command `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Use `repo.process` in order to push to peer repos and not only to the current repo.\n      * [x] Abort process on first error.\n      * [x] Document `$peerRepo` of `repo.process`.\n   * [ ] `net.splitcells.osi.repos.hosts` via `repo.process`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Propagate values to child repo calls of `repo.process`. \n      * [ ] Provide these values to command calls during the processing of one repo node,\n         so it could be used by `repo.push.at.all`.\n* [ ] Document this.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [ ] Test functionality.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [ ] Document all public and private arguments of `repo.process`.\n* [ ] Document `$subRepo` of `repo.process`.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1658522559,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzjFV5C0"},"target":"0eb22468ca430590b64b912186acbd5aa7e5c9e9a6966a91d8d4ed43f30a317c","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [ ] Adapt repo.process` to this new config.\n   * [x] `net.splitcells.osi.repos.peers` in `repo.process`\n      * [x] Read file if present in local repo.\n      * [x] List all individual repos.\n      * [x] Move processing of sub repo to dedicated method, that does not know where the sub is located.\n      * [x] Call sub process method on peer elements.\n   * [x] `net.splitcells.osi.repos.hosts` via new command `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Use `repo.process` in order to push to peer repos and not only to the current repo.\n      * [x] Abort process on first error.\n      * [x] Document `$peerRepo` of `repo.process`.\n   * [ ] `net.splitcells.osi.repos.hosts` via `repo.process`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Propagate values to child repo calls of `repo.process`. \n      * [x] Provide these values to command calls during the processing of one repo node,\n         so it could be used by `repo.push.at.all`.\n* [ ] Document this.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [ ] Test functionality.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [ ] Document all public and private arguments of `repo.process`.\n* [ ] Document `$subRepo` of `repo.process`.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1658522580,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzjFV5Nw"},"target":"0eb22468ca430590b64b912186acbd5aa7e5c9e9a6966a91d8d4ed43f30a317c","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [ ] Adapt repo.process` to this new config.\n   * [x] `net.splitcells.osi.repos.peers` in `repo.process`\n      * [x] Read file if present in local repo.\n      * [x] List all individual repos.\n      * [x] Move processing of sub repo to dedicated method, that does not know where the sub is located.\n      * [x] Call sub process method on peer elements.\n   * [x] `net.splitcells.osi.repos.hosts` via new command `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Use `repo.process` in order to push to peer repos and not only to the current repo.\n      * [x] Abort process on first error.\n      * [x] Document `$peerRepo` of `repo.process`.\n   * [x] `net.splitcells.osi.repos.hosts` via `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Propagate values to child repo calls of `repo.process`. \n      * [x] Provide these values to command calls during the processing of one repo node,\n         so it could be used by `repo.push.at.all`.\n* [ ] Document this.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [ ] Test functionality.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [ ] Document all public and private arguments of `repo.process`.\n* [ ] Document `$subRepo` of `repo.process`.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1658522763,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzjFV6zw"},"target":"0eb22468ca430590b64b912186acbd5aa7e5c9e9a6966a91d8d4ed43f30a317c","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [ ] Adapt repo.process` to this new config.\n   * [x] `net.splitcells.osi.repos.peers` in `repo.process`\n      * [x] Read file if present in local repo.\n      * [x] List all individual repos.\n      * [x] Move processing of sub repo to dedicated method, that does not know where the sub is located.\n      * [x] Call sub process method on peer elements.\n   * [x] `net.splitcells.osi.repos.hosts` via new command `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Use `repo.process` in order to push to peer repos and not only to the current repo.\n      * [x] Abort process on first error.\n      * [x] Document `$peerRepo` of `repo.process`.\n   * [x] `net.splitcells.osi.repos.hosts` via `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Propagate values to child repo calls of `repo.process`. \n      * [x] Provide these values to command calls during the processing of one repo node,\n         so it could be used by `repo.push.at.all`.\n* [ ] Document this.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [ ] Test functionality.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [ ] Document all public and private arguments of `repo.process`.\n* [x] Document `$subRepo` of `repo.process`.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1658522771,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzjFV64E"},"target":"0eb22468ca430590b64b912186acbd5aa7e5c9e9a6966a91d8d4ed43f30a317c","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [ ] Adapt repo.process` to this new config.\n   * [x] `net.splitcells.osi.repos.peers` in `repo.process`\n      * [x] Read file if present in local repo.\n      * [x] List all individual repos.\n      * [x] Move processing of sub repo to dedicated method, that does not know where the sub is located.\n      * [x] Call sub process method on peer elements.\n   * [x] `net.splitcells.osi.repos.hosts` via new command `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Use `repo.process` in order to push to peer repos and not only to the current repo.\n      * [x] Abort process on first error.\n      * [x] Document `$peerRepo` of `repo.process`.\n   * [x] `net.splitcells.osi.repos.hosts` via `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Propagate values to child repo calls of `repo.process`. \n      * [x] Provide these values to command calls during the processing of one repo node,\n         so it could be used by `repo.push.at.all`.\n* [ ] Document this.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [ ] Test functionality.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [x] Document all public and private arguments of `repo.process`.\n* [x] Document `$subRepo` of `repo.process`.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1658522777,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzjFV658"},"target":"0eb22468ca430590b64b912186acbd5aa7e5c9e9a6966a91d8d4ed43f30a317c","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [ ] Adapt repo.process` to this new config.\n   * [x] `net.splitcells.osi.repos.peers` in `repo.process`\n      * [x] Read file if present in local repo.\n      * [x] List all individual repos.\n      * [x] Move processing of sub repo to dedicated method, that does not know where the sub is located.\n      * [x] Call sub process method on peer elements.\n   * [x] `net.splitcells.osi.repos.hosts` via new command `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Use `repo.process` in order to push to peer repos and not only to the current repo.\n      * [x] Abort process on first error.\n      * [x] Document `$peerRepo` of `repo.process`.\n   * [x] `net.splitcells.osi.repos.hosts` via `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Propagate values to child repo calls of `repo.process`. \n      * [x] Provide these values to command calls during the processing of one repo node,\n         so it could be used by `repo.push.at.all`.\n* [ ] Document this.\n   * [x] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [ ] Test functionality.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [x] Document all public and private arguments of `repo.process`.\n* [x] Document `$subRepo` of `repo.process`.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1658523079,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzjFV9ng"},"target":"0eb22468ca430590b64b912186acbd5aa7e5c9e9a6966a91d8d4ed43f30a317c","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [ ] Adapt repo.process` to this new config.\n   * [x] `net.splitcells.osi.repos.peers` in `repo.process`\n      * [x] Read file if present in local repo.\n      * [x] List all individual repos.\n      * [x] Move processing of sub repo to dedicated method, that does not know where the sub is located.\n      * [x] Call sub process method on peer elements.\n   * [x] `net.splitcells.osi.repos.hosts` via new command `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Use `repo.process` in order to push to peer repos and not only to the current repo.\n      * [x] Abort process on first error.\n      * [x] Document `$peerRepo` of `repo.process`.\n   * [x] `net.splitcells.osi.repos.hosts` via `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Propagate values to child repo calls of `repo.process`. \n      * [x] Provide these values to command calls during the processing of one repo node,\n         so it could be used by `repo.push.at.all`.\n* [x] Document this.\n   * [x] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [ ] Test functionality.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [x] Document all public and private arguments of `repo.process`.\n* [x] Document `$subRepo` of `repo.process`.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1658523079,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzjFV9nw"},"target":"0eb22468ca430590b64b912186acbd5aa7e5c9e9a6966a91d8d4ed43f30a317c","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [ ] Adapt repo.process` to this new config.\n   * [x] `net.splitcells.osi.repos.peers` in `repo.process`\n      * [x] Read file if present in local repo.\n      * [x] List all individual repos.\n      * [x] Move processing of sub repo to dedicated method, that does not know where the sub is located.\n      * [x] Call sub process method on peer elements.\n   * [x] `net.splitcells.osi.repos.hosts` via new command `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Use `repo.process` in order to push to peer repos and not only to the current repo.\n      * [x] Abort process on first error.\n      * [x] Document `$peerRepo` of `repo.process`.\n   * [x] `net.splitcells.osi.repos.hosts` via `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Propagate values to child repo calls of `repo.process`. \n      * [x] Provide these values to command calls during the processing of one repo node,\n         so it could be used by `repo.push.at.all`.\n* [x] Document this.\n   * [x] `net.splitcells.osi.repos.peers`\n   * [x] `net.splitcells.osi.repos.hosts`\n* [ ] Test functionality.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [x] Document all public and private arguments of `repo.process`.\n* [x] Document `$subRepo` of `repo.process`.","files":null},{"type":5,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1644802187,"metadata":{"github-id":"LE_lADOFCNQW85Dv2uuzwAAAAFpZzmW"},"added":["enhancement"],"removed":[]}]}