{"version":1,"ops":[{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1615148765,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlRWRpdDo1MDQwNjk1MDE="},"target":"db57d484a370d66102456bcd59d41eb7cba946288d1d0586e43b217ae0975377","message":"This is implemented at OralExamsTest.\nThe problem should be solved via the ConstraintGroupBasedRepair.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1615149796,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlRWRpdDo1MDQwNzI5OTI="},"target":"db57d484a370d66102456bcd59d41eb7cba946288d1d0586e43b217ae0975377","message":"- [ ] Implement this at OralExamsTest.\n- [ ] The problem should be solved via the ConstraintGroupBasedRepair.\n   - [ ] Original version combines overlapping groups. Imitate that\n   - [ ] Implement custom constraint group optimization order.\n   - [ ] Implement custom heuristics.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1615150059,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlRWRpdDo1MDQwNzM2NTY="},"target":"db57d484a370d66102456bcd59d41eb7cba946288d1d0586e43b217ae0975377","message":"Currently the development is done on OralExamsTest#testCurrent.\n\n- [ ] Implement this at OralExamsTest.\n- [ ] The problem should be solved via the ConstraintGroupBasedRepair.\n   - [ ] Original version combines overlapping groups. Imitate that\n   - [ ] Implement custom constraint group optimization order.\n   - [ ] Implement custom heuristics.\n- [ ] Use Escalator.\n- [ ] Manually validate the solution.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1615150135,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlRWRpdDo1MDQwNzM4ODI="},"target":"db57d484a370d66102456bcd59d41eb7cba946288d1d0586e43b217ae0975377","message":"Currently the development is done on OralExamsTest#testCurrent.\n\n- [ ] Implement this at OralExamsTest.\n- [ ] The problem should be solved via the ConstraintGroupBasedRepair.\n   - [ ] Original version combines overlapping groups. Imitate that\n   - [ ] Implement custom constraint group optimization order.\n   - [ ] Implement custom heuristics.\n- [x] Use Escalator optimization.\n- [ ] Manually validate the solution.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1615150339,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlRWRpdDo1MDQwNzQ0NTg="},"target":"db57d484a370d66102456bcd59d41eb7cba946288d1d0586e43b217ae0975377","message":"Currently the development is done on OralExamsTest#testCurrent.\n\n- [ ] Implement this at OralExamsTest.\n- [ ] Solve randomly generated instance.\n- [ ] The problem should be solved via the ConstraintGroupBasedRepair.\n   - [ ] Original version combines overlapping groups. Imitate that, in order to improve solution.\n   - [ ] Implement custom constraint group optimization order.\n   - [ ] Implement custom heuristics.\n- [x] Use Escalator optimization.\n- [ ] Manually validate the solution.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1615159698,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlRWRpdDo1MDQwOTc2Mjg="},"target":"db57d484a370d66102456bcd59d41eb7cba946288d1d0586e43b217ae0975377","message":"Currently the development is done on OralExamsTest#testCurrent.\n\n- [x] Implement this at OralExamsTest.\n- [ ] Solve randomly generated instance.\n- [ ] The problem should be solved via the ConstraintGroupBasedRepair.\n   - [ ] Original version combines overlapping groups. Imitate that, in order to improve solution.\n   - [ ] Implement custom constraint group optimization order.\n   - [ ] Implement custom heuristics.\n- [x] Use Escalator optimization.\n- [ ] Manually validate the solution.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1615159714,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlRWRpdDo1MDQwOTc2NjI="},"target":"db57d484a370d66102456bcd59d41eb7cba946288d1d0586e43b217ae0975377","message":"Currently the development is done on OralExamsTest#testCurrent.\n\n- [ ] Implement this at OralExamsTest.\n- [ ] Solve randomly generated instance.\n- [ ] The problem should be solved via the ConstraintGroupBasedRepair.\n   - [ ] Original version combines overlapping groups. Imitate that, in order to improve solution.\n   - [ ] Implement custom constraint group optimization order.\n   - [ ] Implement custom heuristics.\n- [x] Use Escalator optimization.\n- [ ] Manually validate the solution.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1616012595,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlRWRpdDo1MDk1NzEyMzg="},"target":"db57d484a370d66102456bcd59d41eb7cba946288d1d0586e43b217ae0975377","message":"Currently the development is done on OralExamsTest#testCurrent.\n\n- [ ] Implement this at OralExamsTest.\n- [x] Solve randomly generated instance.\n- [ ] The problem should be solved via the ConstraintGroupBasedRepair.\n   - [ ] Original version combines overlapping groups. Imitate that, in order to improve solution.\n   - [ ] Implement custom constraint group optimization order.\n   - [ ] Implement custom heuristics.\n- [x] Use Escalator optimization.\n- [ ] Manually validate the solution.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1616012601,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlRWRpdDo1MDk1NzEzMTU="},"target":"db57d484a370d66102456bcd59d41eb7cba946288d1d0586e43b217ae0975377","message":"Currently the development is done on OralExamsTest#testCurrent.\n\n- [ ] Implement this at OralExamsTest.\n- [x] Solve randomly generated instance.\n- [ ] The problem should be solved via the ConstraintGroupBasedRepair.\n   - [x] Original version combines overlapping groups. Imitate that, in order to improve solution.\n   - [ ] Implement custom constraint group optimization order.\n   - [ ] Implement custom heuristics.\n- [x] Use Escalator optimization.\n- [ ] Manually validate the solution.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1616012641,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlRWRpdDo1MDk1NzE2NTM="},"target":"db57d484a370d66102456bcd59d41eb7cba946288d1d0586e43b217ae0975377","message":"Currently the development is done on OralExamsTest#testCurrent.\n\n- [ ] Implement this at OralExamsTest.\n- [x] Solve randomly generated instance.\n- [ ] The problem should be solved via the ConstraintGroupBasedRepair.\n   - [x] Original version combines overlapping groups. Imitate that, in order to improve solution.\n   - [x] Implement custom constraint group optimization order. -\u003e This is not needed.\n   - [x] Implement custom heuristics. -\u003e This is not needed.\n- [x] Use Escalator optimization.\n- [ ] Manually validate the solution.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1616012684,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlRWRpdDo1MDk1NzE5OTU="},"target":"db57d484a370d66102456bcd59d41eb7cba946288d1d0586e43b217ae0975377","message":"Currently the development is done on OralExamsTest#testCurrent.\n\n- [ ] Implement this at OralExamsTest.\n- [x] Solve randomly generated instance.\n- [x] The problem should be solved via the ConstraintGroupBasedRepair.\n   - [x] Original version combines overlapping groups. Imitate that, in order to improve solution.\n   - [x] Implement custom constraint group optimization order. -\u003e This is not needed.\n   - [x] Implement custom heuristics. -\u003e This is not needed.\n- [x] Use Escalator optimization.\n- [ ] Manually validate the solution.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1616012688,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlRWRpdDo1MDk1NzIwMzc="},"target":"db57d484a370d66102456bcd59d41eb7cba946288d1d0586e43b217ae0975377","message":"Currently the development is done on OralExamsTest#testCurrent.\n\n- [x] Implement this at OralExamsTest.\n- [x] Solve randomly generated instance.\n- [x] The problem should be solved via the ConstraintGroupBasedRepair.\n   - [x] Original version combines overlapping groups. Imitate that, in order to improve solution.\n   - [x] Implement custom constraint group optimization order. -\u003e This is not needed.\n   - [x] Implement custom heuristics. -\u003e This is not needed.\n- [x] Use Escalator optimization.\n- [ ] Manually validate the solution.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1616012898,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlRWRpdDo1MDk1NzM3MTI="},"target":"db57d484a370d66102456bcd59d41eb7cba946288d1d0586e43b217ae0975377","message":"Currently the development is done on OralExamsTest#testCurrent.\n\n- [x] Implement this at OralExamsTest.\n- [x] Solve randomly generated instance.\n- [x] The problem should be solved via the ConstraintGroupBasedRepair.\n   - [x] Original version combines overlapping groups. Imitate that, in order to improve solution.\n   - [x] Implement custom constraint group optimization order. -\u003e This is not needed.\n   - [x] Implement custom heuristics. -\u003e This is not needed.\n- [x] Use Escalator optimization.\n- [ ] Manually validate the solution.\n- [ ] Create and execute integration test suite.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1616456382,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlRWRpdDo1MTE4NDkwNTM="},"target":"db57d484a370d66102456bcd59d41eb7cba946288d1d0586e43b217ae0975377","message":"Currently the development is done on OralExamsTest#testCurrent.\n\n- [x] Implement this at OralExamsTest.\n- [ ] Solve randomly generated instance.\n- [x] The problem should be solved via the ConstraintGroupBasedRepair.\n   - [x] Original version combines overlapping groups. Imitate that, in order to improve solution.\n   - [x] Implement custom constraint group optimization order. -\u003e This is not needed.\n   - [x] Implement custom heuristics. -\u003e This is not needed.\n- [x] Use Escalator optimization.\n- [ ] Manually validate the solution.\n- [ ] Create and execute integration test suite.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1616537657,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlRWRpdDo1MTI0OTkxMDg="},"target":"db57d484a370d66102456bcd59d41eb7cba946288d1d0586e43b217ae0975377","message":"Currently the development is done on OralExamsTest#testCurrent.\n\n- [x] Implement this at OralExamsTest.\n- [ ] Solve randomly generated instance.\n- [x] The problem should be solved via the ConstraintGroupBasedRepair.\n   - [x] Original version combines overlapping groups. Imitate that, in order to improve solution.\n   - [x] Implement custom constraint group optimization order. -\u003e This is not needed.\n   - [x] Implement custom heuristics. -\u003e This is not needed.\n- [x] Use Escalator optimization.\n- [ ] Manually validate the solution.\n- [ ] Create and execute integration test suite.\n- [ ] Compare ConstraintGroupBasedRepair and hill climber performance.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1617918098,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlRWRpdDo1MjA2NjE5OTE="},"target":"db57d484a370d66102456bcd59d41eb7cba946288d1d0586e43b217ae0975377","message":"Currently the development is done on OralExamsTest#testCurrent.\n\n- [x] Implement this at OralExamsTest.\n- [ ] Solve randomly generated instance.\n- [x] The problem should be solved via the ConstraintGroupBasedRepair.\n   - [x] Original version combines overlapping groups. Imitate that, in order to improve solution.\n   - [x] Implement custom constraint group optimization order. -\u003e This is not needed.\n   - [x] Implement custom heuristics. -\u003e This is not needed.\n- [x] Use Escalator optimization.\n- [ ] Manually validate the solution.\n- [ ] Create and execute integration test suite.\n- [ ] Compare ConstraintGroupBasedRepair and hill climber performance.\n- [ ] Make integration test deterministic.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1617921146,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlRWRpdDo1MjA2ODE3MDc="},"target":"db57d484a370d66102456bcd59d41eb7cba946288d1d0586e43b217ae0975377","message":"Currently the development is done on OralExamsTest#testCurrent.\n\n- [x] Implement this at OralExamsTest.\n- [ ] Solve randomly generated instance.\n- [x] The problem should be solved via the ConstraintGroupBasedRepair.\n   - [x] Original version combines overlapping groups. Imitate that, in order to improve solution.\n   - [x] Implement custom constraint group optimization order. -\u003e This is not needed.\n   - [x] Implement custom heuristics. -\u003e This is not needed.\n- [x] Use Escalator optimization.\n- [ ] Manually validate the solution.\n- [ ] Create and execute integration test suite.\n- [ ] Compare ConstraintGroupBasedRepair and hill climber performance.\n- [ ] Make integration test deterministic.\n- [ ] Make set builder configureable.\n- [ ] Make map builder configureable.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1618000265,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlRWRpdDo1MjEyMzY1MjU="},"target":"db57d484a370d66102456bcd59d41eb7cba946288d1d0586e43b217ae0975377","message":"Currently the development is done on OralExamsTest#testCurrent.\n\n- [x] Implement this at OralExamsTest.\n- [ ] Solve randomly generated instance.\n- [x] The problem should be solved via the ConstraintGroupBasedRepair.\n   - [x] Original version combines overlapping groups. Imitate that, in order to improve solution.\n   - [x] Implement custom constraint group optimization order. -\u003e This is not needed.\n   - [x] Implement custom heuristics. -\u003e This is not needed.\n- [x] Use Escalator optimization.\n- [ ] Manually validate the solution.\n- [ ] Create and execute integration test suite.\n- [ ] Compare ConstraintGroupBasedRepair and hill climber performance.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1618000313,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlRWRpdDo1MjEyMzY4NDE="},"target":"db57d484a370d66102456bcd59d41eb7cba946288d1d0586e43b217ae0975377","message":"Currently the development is done on OralExamsTest#testCurrent.\n\n- [x] Implement this at OralExamsTest.\n- [ ] Solve randomly generated instance.\n- [x] The problem should be solved via the ConstraintGroupBasedRepair.\n   - [x] Original version combines overlapping groups. Imitate that, in order to improve solution.\n   - [x] Implement custom constraint group optimization order. -\u003e This is not needed.\n   - [x] Implement custom heuristics. -\u003e This is not needed.\n- [x] Use Escalator optimization.\n- [ ] Manually validate the solution.\n- [ ] Compare ConstraintGroupBasedRepair and hill climber performance.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1618263158,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlRWRpdDo1MjIyNTQzODg="},"target":"db57d484a370d66102456bcd59d41eb7cba946288d1d0586e43b217ae0975377","message":"Currently the development is done on OralExamsTest#testCurrent.\n\n- [x] Implement this at OralExamsTest.\n- [x] Solve randomly generated instance.\n- [x] The problem should be solved via the ConstraintGroupBasedRepair.\n   - [x] Original version combines overlapping groups. Imitate that, in order to improve solution.\n   - [x] Implement custom constraint group optimization order. -\u003e This is not needed.\n   - [x] Implement custom heuristics. -\u003e This is not needed.\n- [x] Use Escalator optimization.\n- [ ] Manually validate the solution.\n- [ ] Compare ConstraintGroupBasedRepair and hill climber performance.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1618266439,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlRWRpdDo1MjIyNzYwMTk="},"target":"db57d484a370d66102456bcd59d41eb7cba946288d1d0586e43b217ae0975377","message":"Currently the development is done on OralExamsTest#testCurrent.\n\n- [x] Implement this at OralExamsTest.\n- [x] Solve randomly generated instance.\n- [x] The problem should be solved via the ConstraintGroupBasedRepair.\n   - [x] Original version combines overlapping groups. Imitate that, in order to improve solution.\n   - [x] Implement custom constraint group optimization order. -\u003e This is not needed.\n   - [x] Implement custom heuristics. -\u003e This is not needed.\n- [x] Use Escalator optimization.\n- [ ] Manually validate the solution.\n- [ ] Compare ConstraintGroupBasedRepair and hill climber performance.\n- [ ] Make destinction between integration and functional test.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1618338713,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlRWRpdDo1MjI4MzE0NzA="},"target":"db57d484a370d66102456bcd59d41eb7cba946288d1d0586e43b217ae0975377","message":"Currently the development is done on OralExamsTest#testCurrent.\n\n- [x] Implement this at OralExamsTest.\n- [x] Solve randomly generated instance.\n- [x] The problem should be solved via the ConstraintGroupBasedRepair.\n   - [x] Original version combines overlapping groups. Imitate that, in order to improve solution.\n   - [x] Implement custom constraint group optimization order. -\u003e This is not needed.\n   - [x] Implement custom heuristics. -\u003e This is not needed.\n- [x] Use Escalator optimization.\n- [x] Manually validate the solution. -\u003e Check some parts randomly.\n- [ ] Compare ConstraintGroupBasedRepair and hill climber performance.\n- [ ] Make destinction between integration and functional test.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1618339951,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlRWRpdDo1MjI4NDE4Mjg="},"target":"db57d484a370d66102456bcd59d41eb7cba946288d1d0586e43b217ae0975377","message":"Currently the development is done on OralExamsTest#testCurrent.\n\n- [x] Implement this at OralExamsTest.\n- [x] Solve randomly generated instance.\n- [x] The problem should be solved via the ConstraintGroupBasedRepair.\n   - [x] Original version combines overlapping groups. Imitate that, in order to improve solution.\n   - [x] Implement custom constraint group optimization order. -\u003e This is not needed.\n   - [x] Implement custom heuristics. -\u003e This is not needed.\n- [x] Use Escalator optimization.\n- [x] Manually validate the solution. -\u003e Check some parts randomly.\n- [ ] Compare ConstraintGroupBasedRepair and hill climber performance.\n- [x] Make destinction between integration and functional test.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1618348205,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlRWRpdDo1MjI5MDY5NzE="},"target":"db57d484a370d66102456bcd59d41eb7cba946288d1d0586e43b217ae0975377","message":"Currently the development is done on OralExamsTest#testCurrent.\n\n- [x] Implement this at OralExamsTest.\n- [x] Solve randomly generated instance.\n- [x] The problem should be solved via the ConstraintGroupBasedRepair.\n   - [x] Original version combines overlapping groups. Imitate that, in order to improve solution.\n   - [x] Implement custom constraint group optimization order. -\u003e This is not needed.\n   - [x] Implement custom heuristics. -\u003e This is not needed.\n- [x] Use Escalator optimization.\n- [x] Manually validate the solution. -\u003e Check some parts randomly.\n- [x] Compare ConstraintGroupBasedRepair and hill climber performance.\n- [x] Make destinction between integration and functional test.","files":null},{"type":5,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1615148667,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDQ0MTg0NDI1Mjk="},"added":["enhancement"],"removed":[]},{"type":3,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1615157082,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDc5MjM2NzQxNQ==","github-url":"https://github.com/www-splitcells-net/net.splitcells.network/issues/7#issuecomment-792367415"},"message":"- [ ] Currently, there is an issue, that an already used demand is tried to be allocated by the Repair-Optimizer.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1615157082,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6NDQwNjc3ODA4"},"target":"2f03ca2035cc40b44d8082b041384038475b200a88cb8485db0758085ef9f32f","message":"Currently, there is an issue, that an already used demand is tried to be allocated by the Repair-Optimizer.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1615158727,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6NDQwNjgwMDUw"},"target":"2f03ca2035cc40b44d8082b041384038475b200a88cb8485db0758085ef9f32f","message":"Currently, there is an issue, that an already used demand is tried to be allocated by the Repair-Optimizer.\n-\u003e That was caused by applying optimization steps in the wrong order.","files":null},{"type":3,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1615159397,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDc5MjM3MjY1MQ==","github-url":"https://github.com/www-splitcells-net/net.splitcells.network/issues/7#issuecomment-792372651"},"message":"Currently, the solutions contain only a couple of wrong allocations.\nThere seem currently to be 3 main differences to my original solution:\n1. Only use plausible supplies for repair.\n2. Repair more than 1 group of the incorrect allocation.\n3. Slight differences, how the optimization escalation was implemented.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1615159397,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6NDQwNjgxMDU1"},"target":"8d5f8d55051875cc5683292227a2301240b7eee7b892f6a4fc2849061819ea1a","message":"Currently, the solutions contain only a couple of wrong allocations.\nThere seem currently to be 3 main differences to my original solution:\n1. Prioritize plausible supplies for repair\n2. Repair more than 1 group of the incorrect allocation.\n3. Slight differences, how the optimization escalation was implemented.\n\nI think the second point is the most useful one and easiest to implement.\nThe effect of the second one can be approximated via random repair with multiple tries, which is done.\n\nI have already changed the group selector in such a way, that multiple groups can be selected at once.\nNow I just need to implement a new group selector and check the results.","files":null},{"type":3,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1615246441,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDc5MzE3MDI0OQ==","github-url":"https://github.com/www-splitcells-net/net.splitcells.network/issues/7#issuecomment-793170249"},"message":"So I added the capability to repair multiple groups of a defiance at once,\nbut introduced the error of duplicate/too many optimization steps.\nThese need to be filtered.","files":null},{"type":3,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1615332551,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDc5NDU5ODk5NQ==","github-url":"https://github.com/www-splitcells-net/net.splitcells.network/issues/7#issuecomment-794598995"},"message":"Now I have filtered duplicate allocation steps regarding demand.\nThere are still multiple allocations for each supply.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1615332551,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6NDQxNDMzMjAy"},"target":"18478595277753f9e957b0a9d609fe5e817ec915c92ddf4a6dc488184cd83b31","message":"Now I have filtered duplicate allocation steps regarding demands.\nThere are still multiple allocations for each supply.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1615332660,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6NDQxNDMzNjQ2"},"target":"18478595277753f9e957b0a9d609fe5e817ec915c92ddf4a6dc488184cd83b31","message":"Now I have filtered duplicate allocation steps regarding demands.\nThere are still multiple allocations for each supply.\n\nHow were duplicate allocations for a supply omitted previously?","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1615332955,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6NDQxNDM0ODI0"},"target":"18478595277753f9e957b0a9d609fe5e817ec915c92ddf4a6dc488184cd83b31","message":"Now I have filtered duplicate allocation steps regarding demands.\nThere are still multiple allocations for each supply.\n\nHow were duplicate allocations for a supply omitted previously?\nThere is a set, memorizing all free supplies.\nDuring the creation of each allocation the set is updated.\n\nIn order to omit duplicate allocations according to the supplies,\na set of free supplies need to be shared between each run of the repair algorithm.\n\nAlternatively, it could be ensured, that only one run of the repair algorithm is done during each optimization.\nThis seems to be the best idea.\nIn this case a set of currently used demands for the current optimization step needs to be memorized.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1615333779,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6NDQxNDM3ODg0"},"target":"18478595277753f9e957b0a9d609fe5e817ec915c92ddf4a6dc488184cd83b31","message":"Now I have filtered duplicate allocation steps regarding demands.\nThere are still multiple allocations for each supply.\n\nHow were duplicate allocations for a supply omitted previously?\nThere is a set, memorizing all free supplies.\nDuring the creation of each allocation the set is updated.\n\nIn order to omit duplicate allocations according to the supplies,\na set of free supplies need to be shared between each run of the repair algorithm.\n\nAlternatively, it could be ensured, that only one run of the repair algorithm is done during each optimization.\nThis seems to be the best idea.\nIn this case a set of currently used demands for the current optimization step, needs to be memorized.","files":null},{"type":3,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1615418846,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDc5NjI4MjEyMA==","github-url":"https://github.com/www-splitcells-net/net.splitcells.network/issues/7#issuecomment-796282120"},"message":"So now duplicate optimization step.\n\n- [ ] Unfortunately, the solution is now worse.\n- [ ]  Also I need to do additional tests.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1615418846,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6NDQxODM0Mzk4"},"target":"7c4f961ce81ec70cafe739ca342a8f51a3cf3dfeb132521d6f6701c25507fbad","message":"So now duplicate optimization step.\n\n- [ ] Unfortunately, the solution is now worse.\n- [ ]  Also I need to do additional unit tests of the optimizer.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1615419350,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6NDQxODM2NTQ1"},"target":"7c4f961ce81ec70cafe739ca342a8f51a3cf3dfeb132521d6f6701c25507fbad","message":"So now duplicate optimization step.\n\n- [ ] Unfortunately, the solution is now worse.\n- [ ]  Also I need to do additional unit tests of the optimizer.\n\nI think, that I changed the algorithm in another way unintentionally, so I restored the optimization config.\nNow the algorithm does not work.\n - [ ] Support old functionality of ConstraintGroupBasedRepair.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1616010083,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6NDQzODE4MTY4"},"target":"7c4f961ce81ec70cafe739ca342a8f51a3cf3dfeb132521d6f6701c25507fbad","message":"So now duplicate optimization step.\n\n- [x] Unfortunately, the solution is now worse.\n- [ ]  Also I need to do additional unit tests of the optimizer.\n\nI think, that I changed the algorithm in another way unintentionally, so I restored the optimization config.\nNow the algorithm does not work.\n - [ ] Support old functionality of ConstraintGroupBasedRepair.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1616010086,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6NDQzODE4MTgy"},"target":"7c4f961ce81ec70cafe739ca342a8f51a3cf3dfeb132521d6f6701c25507fbad","message":"So now duplicate optimization step.\n\n- [x] Unfortunately, the solution is now worse.\n- [ ]  Also I need to do additional unit tests of the optimizer.\n\nI think, that I changed the algorithm in another way unintentionally, so I restored the optimization config.\nNow the algorithm does not work.\n - [x] Support old functionality of ConstraintGroupBasedRepair.","files":null},{"type":3,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1615933814,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDgwMDY1NjA1NQ==","github-url":"https://github.com/www-splitcells-net/net.splitcells.network/issues/7#issuecomment-800656055"},"message":"As mentioned in #16, we now have performance problems.","files":null},{"type":3,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1615939175,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDgwMDY5MTUxMA==","github-url":"https://github.com/www-splitcells-net/net.splitcells.network/issues/7#issuecomment-800691510"},"message":"The performance problem is now fixed, but the old functionality of the ConstraintGroupBasedRepair still does not work","files":null},{"type":3,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1616010079,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDgwMTM1OTM3OA==","github-url":"https://github.com/www-splitcells-net/net.splitcells.network/issues/7#issuecomment-801359378"},"message":"Found a new error in Randomness, after fixing it.\nThe solution now only contains 1 error, which is a great improvement.","files":null},{"type":3,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1616013925,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDgwMTQyMDU3OA==","github-url":"https://github.com/www-splitcells-net/net.splitcells.network/issues/7#issuecomment-801420578"},"message":"The oral exam test instance is now solved,\nbut the log files indicate an error.\n\nIt seems to be the case,\nthat optimal solutions with no error are still being \"corrected\".\nThis leads to new errors.\n\n- [ ] The optimizer should also stop its process immediately, when an optimum with no errors is found.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1616013925,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6NDQzODM3NzQx"},"target":"7c6dc57d76629ae9dfe1f31e984cc2cb4d160de1f5bd50412869db9110baf6a2","message":"The oral exam test instance is now solved,\nbut the log files indicate an error.\n\nIt seems to be the case,\nthat optimal solutions with no error are still being \"corrected\".\nThis leads to new errors.\n\n- [x] The optimizer should also stop its process immediately, when an optimum with no errors is found.","files":null},{"type":3,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1616537562,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDgwMTQzMTU5Ng==","github-url":"https://github.com/www-splitcells-net/net.splitcells.network/issues/7#issuecomment-801431596"},"message":"- [ ] There is currently the problem, that the solution is not complete after the execution of the ConstraintGroupBasedRepair.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1616537562,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6NDQ1NTE5NzYw"},"target":"909e4e5cfdc769dd084a10d2cb7da1a7aa1f65952cb469223ec856c8beb96db2","message":"- [x] There is currently the problem, that the solution is not complete after the execution of the ConstraintGroupBasedRepair.","files":null},{"type":3,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1616460494,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDgwNDUwMDU2OQ==","github-url":"https://github.com/www-splitcells-net/net.splitcells.network/issues/7#issuecomment-804500569"},"message":"Debugging lead me to en example, were the repair function returns an empty list.\nTherefore, no additions and only removals were created.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1616460494,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6NDQ1MTcyNDk4"},"target":"670d2d9cf57f3a52795af2641cefb67dca058496eba67896e7c990a5d7f42c5b","message":"Debugging lead me to en example, were the repair function returns an empty list.\nTherefore, no additions and only removals were created.\nFurther inspections revealed, that freeDemandGroups was empty and therefore no real repair could be done.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1616460805,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6NDQ1MTczNTM0"},"target":"670d2d9cf57f3a52795af2641cefb67dca058496eba67896e7c990a5d7f42c5b","message":"Debugging lead me to en example, were the repair function returns an empty list.\nTherefore, no additions and only removals were created.\nFurther inspections revealed, that freeDemandGroups was empty and therefore no real repair could be done.\nFollowing the trail, it is now clear, that the creation of demandGrouping based on demandGroupings is not working.\nThis creation seems to lead to the observer problem.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1616461430,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6NDQ1MTc1NDgx"},"target":"670d2d9cf57f3a52795af2641cefb67dca058496eba67896e7c990a5d7f42c5b","message":"Debugging lead me to en example, were the repair function returns an empty list.\nTherefore, no additions and only removals were created.\nFurther inspections revealed, that freeDemandGroups was empty and therefore no real repair could be done.\nFollowing the trail, it is now clear, that the creation of demandGrouping based on demandGroupings is not working.\nThis creation seems to lead to the observed problem.","files":null},{"type":2,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1616461452,"metadata":{"github-id":"MDE3OlJlbmFtZWRUaXRsZUV2ZW50NDQ5MzI0MzkwMg=="},"title":". Oral Exam problem","was":"Oral Exam problem."},{"type":2,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1616461482,"metadata":{"github-id":"MDE3OlJlbmFtZWRUaXRsZUV2ZW50NDQ5MzI0NTA0Ng=="},"title":"Oral Exam problem.","was":". Oral Exam problem"},{"type":3,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1616537603,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDgwNTMwMTI0MA==","github-url":"https://github.com/www-splitcells-net/net.splitcells.network/issues/7#issuecomment-805301240"},"message":"The freeDemandGroups merge problem is fixed,\nbut problems are not solved anymore.","files":null},{"type":3,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1616539945,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDgwNTMwNDc2OQ==","github-url":"https://github.com/www-splitcells-net/net.splitcells.network/issues/7#issuecomment-805304769"},"message":"I extended the solver with a restart functionality and made each step smaller.\nNow, sometimes an error appear in the ConstraintGroupBasedRepair,\nwhich previously was hidden.\n\n```\njava.lang.AssertionError: [No allocations for the given supply are present.] \nExpecting:\n \u003c{2=[49], 3=[23], 6=[147], 7=[34], 9=[145], 11=[69], 12=[114], 13=[12], 14=[41], 18=[14], 20=[138], 21=[18], 22=[149], 23=[171], 25=[67], 28=[116], 34=[38], 35=[11], 37=[126], 40=[174], 41=[84], 42=[50], 43=[139], 44=[144], 45=[62], 47=[15], 48=[97], 50=[164], 53=[73], 55=[92], 57=[127], 58=[103], 60=[142], 63=[143], 64=[154], 65=[151], 66=[109], 67=[81], 69=[157], 70=[162], 72=[160], 73=[173], 74=[107], 78=[35], 80=[46], 82=[98], 83=[21], 84=[30], 85=[77], 88=[85], 89=[64], 90=[169], 91=[45], 93=[159], 94=[24], 95=[26], 96=[136], 97=[61], 101=[158], 102=[55], 103=[72], 104=[133], 106=[175], 108=[99], 113=[37], 115=[66], 116=[60], 119=[87], 120=[40], 122=[17], 124=[130], 126=[71], 128=[132], 129=[42], 130=[2], 132=[94], 133=[63], 135=[115], 136=[68], 138=[131], 140=[74], 141=[43], 142=[156], 143=[58], 144=[44], 148=[155], 150=[141], 151=[148], 152=[91], 153=[119], 155=[140], 157=[80], 159=[25], 164=[76], 165=[108], 168=[146], 169=[5], 171=[111], 172=[106], 173=[122], 174=[28], 175=[79], 178=[8], 179=[47], 180=[101], 182=[48], 183=[168], 188=[120], 191=[123], 193=[29], 194=[95], 195=[22], 196=[102], 198=[16], 200=[65], 202=[134], 203=[53], 206=[83], 207=[32], 208=[153], 209=[27], 213=[161], 215=[1], 217=[0], 218=[56], 222=[152], 223=[52], 224=[89], 227=[54], 232=[82], 233=[96], 236=[31], 237=[86], 238=[70], 239=[100], 242=[19], 245=[129], 248=[36], 249=[4], 251=[124], 252=[170], 253=[33], 254=[117], 258=[121], 259=[59], 260=[13], 261=[10], 263=[112], 264=[104], 265=[51], 266=[128], 267=[172], 268=[105], 271=[75], 273=[166], 275=[57], 276=[3], 277=[125], 278=[90], 280=[110], 282=[150], 283=[6], 284=[135], 285=[163], 286=[20], 287=[167], 289=[78], 290=[88], 291=[7], 293=[165], 295=[113], 296=[9], 299=[118]}\u003e\nto contain key:\n \u003c231\u003e\n    at net.splitcells.gel.data.allocations.AllocationsIRef.allocations_of_supply (AllocationsIRef.java:168)\n    at net.splitcells.gel.data.allocation.Allocations.allocationsOf (Allocations.java:20)\n    at net.splitcells.gel.problem.ProblemI.allocationsOf (ProblemI.java:123)\n    at net.splitcells.gel.solution.SolutionI.allocationsOf (SolutionI.java:135)\n    at net.splitcells.gel.solution.Solution.optimize (Solution.java:96)\n    at net.splitcells.gel.solution.SolutionAspect.optimize (SolutionAspect.java:88)\n    at net.splitcells.gel.solution.Solution.optimize (Solution.java:78)\n    at java.util.ArrayList.forEach (ArrayList.java:1541)\n    at net.splitcells.gel.solution.Solution.optimize (Solution.java:66)\n    at net.splitcells.gel.solution.SolutionAspect.optimize (SolutionAspect.java:46)\n    at net.splitcells.gel.solution.Solution.optimizeWithFunction (Solution.java:44)\n    at net.splitcells.gel.test.integration.OralExamsTest.lambda$testCurrent$10 (OralExamsTest.java:137)\n    at java.util.stream.Streams$RangeIntSpliterator.forEachRemaining (Streams.java:104)\n    at java.util.stream.IntPipeline$Head.forEach (IntPipeline.java:593)\n    at net.splitcells.gel.test.integration.OralExamsTest.testCurrent (OralExamsTest.java:117)\n    at net.splitcells.gel.GelDev.lambda$main$0 (GelDev.java:28)\n    at net.splitcells.gel.GelEnv.lambda$process$0 (GelEnv.java:41)\n    at net.splitcells.dem.Dem.lambda$process$1 (Dem.java:63)\n    at java.lang.Thread.run (Thread.java:834)\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  54.512 s\n[INFO] Finished at: 2021-03-23T23:05:40+01:00\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.codehaus.mojo:exec-maven-plugin:1.6.0:java (default-cli) on project gel.sheath: An exception occured while executing the Java class. [No allocations for the given supply are present.] \n[ERROR] Expecting:\n[ERROR]  \u003c{2=[49], 3=[23], 6=[147], 7=[34], 9=[145], 11=[69], 12=[114], 13=[12], 14=[41], 18=[14], 20=[138], 21=[18], 22=[149], 23=[171], 25=[67], 28=[116], 34=[38], 35=[11], 37=[126], 40=[174], 41=[84], 42=[50], 43=[139], 44=[144], 45=[62], 47=[15], 48=[97], 50=[164], 53=[73], 55=[92], 57=[127], 58=[103], 60=[142], 63=[143], 64=[154], 65=[151], 66=[109], 67=[81], 69=[157], 70=[162], 72=[160], 73=[173], 74=[107], 78=[35], 80=[46], 82=[98], 83=[21], 84=[30], 85=[77], 88=[85], 89=[64], 90=[169], 91=[45], 93=[159], 94=[24], 95=[26], 96=[136], 97=[61], 101=[158], 102=[55], 103=[72], 104=[133], 106=[175], 108=[99], 113=[37], 115=[66], 116=[60], 119=[87], 120=[40], 122=[17], 124=[130], 126=[71], 128=[132], 129=[42], 130=[2], 132=[94], 133=[63], 135=[115], 136=[68], 138=[131], 140=[74], 141=[43], 142=[156], 143=[58], 144=[44], 148=[155], 150=[141], 151=[148], 152=[91], 153=[119], 155=[140], 157=[80], 159=[25], 164=[76], 165=[108], 168=[146], 169=[5], 171=[111], 172=[106], 173=[122], 174=[28], 175=[79], 178=[8], 179=[47], 180=[101], 182=[48], 183=[168], 188=[120], 191=[123], 193=[29], 194=[95], 195=[22], 196=[102], 198=[16], 200=[65], 202=[134], 203=[53], 206=[83], 207=[32], 208=[153], 209=[27], 213=[161], 215=[1], 217=[0], 218=[56], 222=[152], 223=[52], 224=[89], 227=[54], 232=[82], 233=[96], 236=[31], 237=[86], 238=[70], 239=[100], 242=[19], 245=[129], 248=[36], 249=[4], 251=[124], 252=[170], 253=[33], 254=[117], 258=[121], 259=[59], 260=[13], 261=[10], 263=[112], 264=[104], 265=[51], 266=[128], 267=[172], 268=[105], 271=[75], 273=[166], 275=[57], 276=[3], 277=[125], 278=[90], 280=[110], 282=[150], 283=[6], 284=[135], 285=[163], 286=[20], 287=[167], 289=[78], 290=[88], 291=[7], 293=[165], 295=[113], 296=[9], 299=[118]}\u003e\n[ERROR] to contain key:\n[ERROR]  \u003c231\u003e\n```","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1616539945,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6NDQ1NTI5OTk4"},"target":"d4688303cb3913d053dd5d55713863da51b8064ca34e86d130ad2b54efe5f04d","message":"I extended the solver with a restart functionality and made each step smaller.\nNow, sometimes an error appear in the ConstraintGroupBasedRepair,\nwhich previously was hidden.\n\n- [ ] Under certain circumstances the ConstraintGroupBasedRepair\ntries to remove a demand multiple times during a single step.\nThat i s not allowed.\n\n```\njava.lang.AssertionError: [No allocations for the given supply are present.] \nExpecting:\n \u003c{2=[49], 3=[23], 6=[147], 7=[34], 9=[145], 11=[69], 12=[114], 13=[12], 14=[41], 18=[14], 20=[138], 21=[18], 22=[149], 23=[171], 25=[67], 28=[116], 34=[38], 35=[11], 37=[126], 40=[174], 41=[84], 42=[50], 43=[139], 44=[144], 45=[62], 47=[15], 48=[97], 50=[164], 53=[73], 55=[92], 57=[127], 58=[103], 60=[142], 63=[143], 64=[154], 65=[151], 66=[109], 67=[81], 69=[157], 70=[162], 72=[160], 73=[173], 74=[107], 78=[35], 80=[46], 82=[98], 83=[21], 84=[30], 85=[77], 88=[85], 89=[64], 90=[169], 91=[45], 93=[159], 94=[24], 95=[26], 96=[136], 97=[61], 101=[158], 102=[55], 103=[72], 104=[133], 106=[175], 108=[99], 113=[37], 115=[66], 116=[60], 119=[87], 120=[40], 122=[17], 124=[130], 126=[71], 128=[132], 129=[42], 130=[2], 132=[94], 133=[63], 135=[115], 136=[68], 138=[131], 140=[74], 141=[43], 142=[156], 143=[58], 144=[44], 148=[155], 150=[141], 151=[148], 152=[91], 153=[119], 155=[140], 157=[80], 159=[25], 164=[76], 165=[108], 168=[146], 169=[5], 171=[111], 172=[106], 173=[122], 174=[28], 175=[79], 178=[8], 179=[47], 180=[101], 182=[48], 183=[168], 188=[120], 191=[123], 193=[29], 194=[95], 195=[22], 196=[102], 198=[16], 200=[65], 202=[134], 203=[53], 206=[83], 207=[32], 208=[153], 209=[27], 213=[161], 215=[1], 217=[0], 218=[56], 222=[152], 223=[52], 224=[89], 227=[54], 232=[82], 233=[96], 236=[31], 237=[86], 238=[70], 239=[100], 242=[19], 245=[129], 248=[36], 249=[4], 251=[124], 252=[170], 253=[33], 254=[117], 258=[121], 259=[59], 260=[13], 261=[10], 263=[112], 264=[104], 265=[51], 266=[128], 267=[172], 268=[105], 271=[75], 273=[166], 275=[57], 276=[3], 277=[125], 278=[90], 280=[110], 282=[150], 283=[6], 284=[135], 285=[163], 286=[20], 287=[167], 289=[78], 290=[88], 291=[7], 293=[165], 295=[113], 296=[9], 299=[118]}\u003e\nto contain key:\n \u003c231\u003e\n    at net.splitcells.gel.data.allocations.AllocationsIRef.allocations_of_supply (AllocationsIRef.java:168)\n    at net.splitcells.gel.data.allocation.Allocations.allocationsOf (Allocations.java:20)\n    at net.splitcells.gel.problem.ProblemI.allocationsOf (ProblemI.java:123)\n    at net.splitcells.gel.solution.SolutionI.allocationsOf (SolutionI.java:135)\n    at net.splitcells.gel.solution.Solution.optimize (Solution.java:96)\n    at net.splitcells.gel.solution.SolutionAspect.optimize (SolutionAspect.java:88)\n    at net.splitcells.gel.solution.Solution.optimize (Solution.java:78)\n    at java.util.ArrayList.forEach (ArrayList.java:1541)\n    at net.splitcells.gel.solution.Solution.optimize (Solution.java:66)\n    at net.splitcells.gel.solution.SolutionAspect.optimize (SolutionAspect.java:46)\n    at net.splitcells.gel.solution.Solution.optimizeWithFunction (Solution.java:44)\n    at net.splitcells.gel.test.integration.OralExamsTest.lambda$testCurrent$10 (OralExamsTest.java:137)\n    at java.util.stream.Streams$RangeIntSpliterator.forEachRemaining (Streams.java:104)\n    at java.util.stream.IntPipeline$Head.forEach (IntPipeline.java:593)\n    at net.splitcells.gel.test.integration.OralExamsTest.testCurrent (OralExamsTest.java:117)\n    at net.splitcells.gel.GelDev.lambda$main$0 (GelDev.java:28)\n    at net.splitcells.gel.GelEnv.lambda$process$0 (GelEnv.java:41)\n    at net.splitcells.dem.Dem.lambda$process$1 (Dem.java:63)\n    at java.lang.Thread.run (Thread.java:834)\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  54.512 s\n[INFO] Finished at: 2021-03-23T23:05:40+01:00\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.codehaus.mojo:exec-maven-plugin:1.6.0:java (default-cli) on project gel.sheath: An exception occured while executing the Java class. [No allocations for the given supply are present.] \n[ERROR] Expecting:\n[ERROR]  \u003c{2=[49], 3=[23], 6=[147], 7=[34], 9=[145], 11=[69], 12=[114], 13=[12], 14=[41], 18=[14], 20=[138], 21=[18], 22=[149], 23=[171], 25=[67], 28=[116], 34=[38], 35=[11], 37=[126], 40=[174], 41=[84], 42=[50], 43=[139], 44=[144], 45=[62], 47=[15], 48=[97], 50=[164], 53=[73], 55=[92], 57=[127], 58=[103], 60=[142], 63=[143], 64=[154], 65=[151], 66=[109], 67=[81], 69=[157], 70=[162], 72=[160], 73=[173], 74=[107], 78=[35], 80=[46], 82=[98], 83=[21], 84=[30], 85=[77], 88=[85], 89=[64], 90=[169], 91=[45], 93=[159], 94=[24], 95=[26], 96=[136], 97=[61], 101=[158], 102=[55], 103=[72], 104=[133], 106=[175], 108=[99], 113=[37], 115=[66], 116=[60], 119=[87], 120=[40], 122=[17], 124=[130], 126=[71], 128=[132], 129=[42], 130=[2], 132=[94], 133=[63], 135=[115], 136=[68], 138=[131], 140=[74], 141=[43], 142=[156], 143=[58], 144=[44], 148=[155], 150=[141], 151=[148], 152=[91], 153=[119], 155=[140], 157=[80], 159=[25], 164=[76], 165=[108], 168=[146], 169=[5], 171=[111], 172=[106], 173=[122], 174=[28], 175=[79], 178=[8], 179=[47], 180=[101], 182=[48], 183=[168], 188=[120], 191=[123], 193=[29], 194=[95], 195=[22], 196=[102], 198=[16], 200=[65], 202=[134], 203=[53], 206=[83], 207=[32], 208=[153], 209=[27], 213=[161], 215=[1], 217=[0], 218=[56], 222=[152], 223=[52], 224=[89], 227=[54], 232=[82], 233=[96], 236=[31], 237=[86], 238=[70], 239=[100], 242=[19], 245=[129], 248=[36], 249=[4], 251=[124], 252=[170], 253=[33], 254=[117], 258=[121], 259=[59], 260=[13], 261=[10], 263=[112], 264=[104], 265=[51], 266=[128], 267=[172], 268=[105], 271=[75], 273=[166], 275=[57], 276=[3], 277=[125], 278=[90], 280=[110], 282=[150], 283=[6], 284=[135], 285=[163], 286=[20], 287=[167], 289=[78], 290=[88], 291=[7], 293=[165], 295=[113], 296=[9], 299=[118]}\u003e\n[ERROR] to contain key:\n[ERROR]  \u003c231\u003e\n```","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1616624489,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6NDQ1OTE1MDEw"},"target":"d4688303cb3913d053dd5d55713863da51b8064ca34e86d130ad2b54efe5f04d","message":"I extended the solver with a restart functionality and made each step smaller.\nNow, sometimes an error appear in the ConstraintGroupBasedRepair,\nwhich previously was hidden.\n\n- [ ] Under certain circumstances the ConstraintGroupBasedRepair\ntries to remove a demand multiple times during a single step.\nThat is not allowed.\n\n```\njava.lang.AssertionError: [No allocations for the given supply are present.] \nExpecting:\n \u003c{2=[49], 3=[23], 6=[147], 7=[34], 9=[145], 11=[69], 12=[114], 13=[12], 14=[41], 18=[14], 20=[138], 21=[18], 22=[149], 23=[171], 25=[67], 28=[116], 34=[38], 35=[11], 37=[126], 40=[174], 41=[84], 42=[50], 43=[139], 44=[144], 45=[62], 47=[15], 48=[97], 50=[164], 53=[73], 55=[92], 57=[127], 58=[103], 60=[142], 63=[143], 64=[154], 65=[151], 66=[109], 67=[81], 69=[157], 70=[162], 72=[160], 73=[173], 74=[107], 78=[35], 80=[46], 82=[98], 83=[21], 84=[30], 85=[77], 88=[85], 89=[64], 90=[169], 91=[45], 93=[159], 94=[24], 95=[26], 96=[136], 97=[61], 101=[158], 102=[55], 103=[72], 104=[133], 106=[175], 108=[99], 113=[37], 115=[66], 116=[60], 119=[87], 120=[40], 122=[17], 124=[130], 126=[71], 128=[132], 129=[42], 130=[2], 132=[94], 133=[63], 135=[115], 136=[68], 138=[131], 140=[74], 141=[43], 142=[156], 143=[58], 144=[44], 148=[155], 150=[141], 151=[148], 152=[91], 153=[119], 155=[140], 157=[80], 159=[25], 164=[76], 165=[108], 168=[146], 169=[5], 171=[111], 172=[106], 173=[122], 174=[28], 175=[79], 178=[8], 179=[47], 180=[101], 182=[48], 183=[168], 188=[120], 191=[123], 193=[29], 194=[95], 195=[22], 196=[102], 198=[16], 200=[65], 202=[134], 203=[53], 206=[83], 207=[32], 208=[153], 209=[27], 213=[161], 215=[1], 217=[0], 218=[56], 222=[152], 223=[52], 224=[89], 227=[54], 232=[82], 233=[96], 236=[31], 237=[86], 238=[70], 239=[100], 242=[19], 245=[129], 248=[36], 249=[4], 251=[124], 252=[170], 253=[33], 254=[117], 258=[121], 259=[59], 260=[13], 261=[10], 263=[112], 264=[104], 265=[51], 266=[128], 267=[172], 268=[105], 271=[75], 273=[166], 275=[57], 276=[3], 277=[125], 278=[90], 280=[110], 282=[150], 283=[6], 284=[135], 285=[163], 286=[20], 287=[167], 289=[78], 290=[88], 291=[7], 293=[165], 295=[113], 296=[9], 299=[118]}\u003e\nto contain key:\n \u003c231\u003e\n    at net.splitcells.gel.data.allocations.AllocationsIRef.allocations_of_supply (AllocationsIRef.java:168)\n    at net.splitcells.gel.data.allocation.Allocations.allocationsOf (Allocations.java:20)\n    at net.splitcells.gel.problem.ProblemI.allocationsOf (ProblemI.java:123)\n    at net.splitcells.gel.solution.SolutionI.allocationsOf (SolutionI.java:135)\n    at net.splitcells.gel.solution.Solution.optimize (Solution.java:96)\n    at net.splitcells.gel.solution.SolutionAspect.optimize (SolutionAspect.java:88)\n    at net.splitcells.gel.solution.Solution.optimize (Solution.java:78)\n    at java.util.ArrayList.forEach (ArrayList.java:1541)\n    at net.splitcells.gel.solution.Solution.optimize (Solution.java:66)\n    at net.splitcells.gel.solution.SolutionAspect.optimize (SolutionAspect.java:46)\n    at net.splitcells.gel.solution.Solution.optimizeWithFunction (Solution.java:44)\n    at net.splitcells.gel.test.integration.OralExamsTest.lambda$testCurrent$10 (OralExamsTest.java:137)\n    at java.util.stream.Streams$RangeIntSpliterator.forEachRemaining (Streams.java:104)\n    at java.util.stream.IntPipeline$Head.forEach (IntPipeline.java:593)\n    at net.splitcells.gel.test.integration.OralExamsTest.testCurrent (OralExamsTest.java:117)\n    at net.splitcells.gel.GelDev.lambda$main$0 (GelDev.java:28)\n    at net.splitcells.gel.GelEnv.lambda$process$0 (GelEnv.java:41)\n    at net.splitcells.dem.Dem.lambda$process$1 (Dem.java:63)\n    at java.lang.Thread.run (Thread.java:834)\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  54.512 s\n[INFO] Finished at: 2021-03-23T23:05:40+01:00\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.codehaus.mojo:exec-maven-plugin:1.6.0:java (default-cli) on project gel.sheath: An exception occured while executing the Java class. [No allocations for the given supply are present.] \n[ERROR] Expecting:\n[ERROR]  \u003c{2=[49], 3=[23], 6=[147], 7=[34], 9=[145], 11=[69], 12=[114], 13=[12], 14=[41], 18=[14], 20=[138], 21=[18], 22=[149], 23=[171], 25=[67], 28=[116], 34=[38], 35=[11], 37=[126], 40=[174], 41=[84], 42=[50], 43=[139], 44=[144], 45=[62], 47=[15], 48=[97], 50=[164], 53=[73], 55=[92], 57=[127], 58=[103], 60=[142], 63=[143], 64=[154], 65=[151], 66=[109], 67=[81], 69=[157], 70=[162], 72=[160], 73=[173], 74=[107], 78=[35], 80=[46], 82=[98], 83=[21], 84=[30], 85=[77], 88=[85], 89=[64], 90=[169], 91=[45], 93=[159], 94=[24], 95=[26], 96=[136], 97=[61], 101=[158], 102=[55], 103=[72], 104=[133], 106=[175], 108=[99], 113=[37], 115=[66], 116=[60], 119=[87], 120=[40], 122=[17], 124=[130], 126=[71], 128=[132], 129=[42], 130=[2], 132=[94], 133=[63], 135=[115], 136=[68], 138=[131], 140=[74], 141=[43], 142=[156], 143=[58], 144=[44], 148=[155], 150=[141], 151=[148], 152=[91], 153=[119], 155=[140], 157=[80], 159=[25], 164=[76], 165=[108], 168=[146], 169=[5], 171=[111], 172=[106], 173=[122], 174=[28], 175=[79], 178=[8], 179=[47], 180=[101], 182=[48], 183=[168], 188=[120], 191=[123], 193=[29], 194=[95], 195=[22], 196=[102], 198=[16], 200=[65], 202=[134], 203=[53], 206=[83], 207=[32], 208=[153], 209=[27], 213=[161], 215=[1], 217=[0], 218=[56], 222=[152], 223=[52], 224=[89], 227=[54], 232=[82], 233=[96], 236=[31], 237=[86], 238=[70], 239=[100], 242=[19], 245=[129], 248=[36], 249=[4], 251=[124], 252=[170], 253=[33], 254=[117], 258=[121], 259=[59], 260=[13], 261=[10], 263=[112], 264=[104], 265=[51], 266=[128], 267=[172], 268=[105], 271=[75], 273=[166], 275=[57], 276=[3], 277=[125], 278=[90], 280=[110], 282=[150], 283=[6], 284=[135], 285=[163], 286=[20], 287=[167], 289=[78], 290=[88], 291=[7], 293=[165], 295=[113], 296=[9], 299=[118]}\u003e\n[ERROR] to contain key:\n[ERROR]  \u003c231\u003e\n```","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1616625542,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6NDQ1OTE5MzUy"},"target":"d4688303cb3913d053dd5d55713863da51b8064ca34e86d130ad2b54efe5f04d","message":"I extended the solver with a restart functionality and made each step smaller.\nNow, sometimes an error appear in the ConstraintGroupBasedRepair,\nwhich previously was hidden.\n\n- [ ] Under certain circumstances the ConstraintGroupBasedRepair\ntries to remove a demand multiple times during a single step.\nThat is not allowed.\n\nThis probably happens, when more than one group is selected per defiance.\nThis may mean, that the merging of multiple removal events does not work correctly.\n\n```\njava.lang.AssertionError: [No allocations for the given supply are present.] \nExpecting:\n \u003c{2=[49], 3=[23], 6=[147], 7=[34], 9=[145], 11=[69], 12=[114], 13=[12], 14=[41], 18=[14], 20=[138], 21=[18], 22=[149], 23=[171], 25=[67], 28=[116], 34=[38], 35=[11], 37=[126], 40=[174], 41=[84], 42=[50], 43=[139], 44=[144], 45=[62], 47=[15], 48=[97], 50=[164], 53=[73], 55=[92], 57=[127], 58=[103], 60=[142], 63=[143], 64=[154], 65=[151], 66=[109], 67=[81], 69=[157], 70=[162], 72=[160], 73=[173], 74=[107], 78=[35], 80=[46], 82=[98], 83=[21], 84=[30], 85=[77], 88=[85], 89=[64], 90=[169], 91=[45], 93=[159], 94=[24], 95=[26], 96=[136], 97=[61], 101=[158], 102=[55], 103=[72], 104=[133], 106=[175], 108=[99], 113=[37], 115=[66], 116=[60], 119=[87], 120=[40], 122=[17], 124=[130], 126=[71], 128=[132], 129=[42], 130=[2], 132=[94], 133=[63], 135=[115], 136=[68], 138=[131], 140=[74], 141=[43], 142=[156], 143=[58], 144=[44], 148=[155], 150=[141], 151=[148], 152=[91], 153=[119], 155=[140], 157=[80], 159=[25], 164=[76], 165=[108], 168=[146], 169=[5], 171=[111], 172=[106], 173=[122], 174=[28], 175=[79], 178=[8], 179=[47], 180=[101], 182=[48], 183=[168], 188=[120], 191=[123], 193=[29], 194=[95], 195=[22], 196=[102], 198=[16], 200=[65], 202=[134], 203=[53], 206=[83], 207=[32], 208=[153], 209=[27], 213=[161], 215=[1], 217=[0], 218=[56], 222=[152], 223=[52], 224=[89], 227=[54], 232=[82], 233=[96], 236=[31], 237=[86], 238=[70], 239=[100], 242=[19], 245=[129], 248=[36], 249=[4], 251=[124], 252=[170], 253=[33], 254=[117], 258=[121], 259=[59], 260=[13], 261=[10], 263=[112], 264=[104], 265=[51], 266=[128], 267=[172], 268=[105], 271=[75], 273=[166], 275=[57], 276=[3], 277=[125], 278=[90], 280=[110], 282=[150], 283=[6], 284=[135], 285=[163], 286=[20], 287=[167], 289=[78], 290=[88], 291=[7], 293=[165], 295=[113], 296=[9], 299=[118]}\u003e\nto contain key:\n \u003c231\u003e\n    at net.splitcells.gel.data.allocations.AllocationsIRef.allocations_of_supply (AllocationsIRef.java:168)\n    at net.splitcells.gel.data.allocation.Allocations.allocationsOf (Allocations.java:20)\n    at net.splitcells.gel.problem.ProblemI.allocationsOf (ProblemI.java:123)\n    at net.splitcells.gel.solution.SolutionI.allocationsOf (SolutionI.java:135)\n    at net.splitcells.gel.solution.Solution.optimize (Solution.java:96)\n    at net.splitcells.gel.solution.SolutionAspect.optimize (SolutionAspect.java:88)\n    at net.splitcells.gel.solution.Solution.optimize (Solution.java:78)\n    at java.util.ArrayList.forEach (ArrayList.java:1541)\n    at net.splitcells.gel.solution.Solution.optimize (Solution.java:66)\n    at net.splitcells.gel.solution.SolutionAspect.optimize (SolutionAspect.java:46)\n    at net.splitcells.gel.solution.Solution.optimizeWithFunction (Solution.java:44)\n    at net.splitcells.gel.test.integration.OralExamsTest.lambda$testCurrent$10 (OralExamsTest.java:137)\n    at java.util.stream.Streams$RangeIntSpliterator.forEachRemaining (Streams.java:104)\n    at java.util.stream.IntPipeline$Head.forEach (IntPipeline.java:593)\n    at net.splitcells.gel.test.integration.OralExamsTest.testCurrent (OralExamsTest.java:117)\n    at net.splitcells.gel.GelDev.lambda$main$0 (GelDev.java:28)\n    at net.splitcells.gel.GelEnv.lambda$process$0 (GelEnv.java:41)\n    at net.splitcells.dem.Dem.lambda$process$1 (Dem.java:63)\n    at java.lang.Thread.run (Thread.java:834)\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  54.512 s\n[INFO] Finished at: 2021-03-23T23:05:40+01:00\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.codehaus.mojo:exec-maven-plugin:1.6.0:java (default-cli) on project gel.sheath: An exception occured while executing the Java class. [No allocations for the given supply are present.] \n[ERROR] Expecting:\n[ERROR]  \u003c{2=[49], 3=[23], 6=[147], 7=[34], 9=[145], 11=[69], 12=[114], 13=[12], 14=[41], 18=[14], 20=[138], 21=[18], 22=[149], 23=[171], 25=[67], 28=[116], 34=[38], 35=[11], 37=[126], 40=[174], 41=[84], 42=[50], 43=[139], 44=[144], 45=[62], 47=[15], 48=[97], 50=[164], 53=[73], 55=[92], 57=[127], 58=[103], 60=[142], 63=[143], 64=[154], 65=[151], 66=[109], 67=[81], 69=[157], 70=[162], 72=[160], 73=[173], 74=[107], 78=[35], 80=[46], 82=[98], 83=[21], 84=[30], 85=[77], 88=[85], 89=[64], 90=[169], 91=[45], 93=[159], 94=[24], 95=[26], 96=[136], 97=[61], 101=[158], 102=[55], 103=[72], 104=[133], 106=[175], 108=[99], 113=[37], 115=[66], 116=[60], 119=[87], 120=[40], 122=[17], 124=[130], 126=[71], 128=[132], 129=[42], 130=[2], 132=[94], 133=[63], 135=[115], 136=[68], 138=[131], 140=[74], 141=[43], 142=[156], 143=[58], 144=[44], 148=[155], 150=[141], 151=[148], 152=[91], 153=[119], 155=[140], 157=[80], 159=[25], 164=[76], 165=[108], 168=[146], 169=[5], 171=[111], 172=[106], 173=[122], 174=[28], 175=[79], 178=[8], 179=[47], 180=[101], 182=[48], 183=[168], 188=[120], 191=[123], 193=[29], 194=[95], 195=[22], 196=[102], 198=[16], 200=[65], 202=[134], 203=[53], 206=[83], 207=[32], 208=[153], 209=[27], 213=[161], 215=[1], 217=[0], 218=[56], 222=[152], 223=[52], 224=[89], 227=[54], 232=[82], 233=[96], 236=[31], 237=[86], 238=[70], 239=[100], 242=[19], 245=[129], 248=[36], 249=[4], 251=[124], 252=[170], 253=[33], 254=[117], 258=[121], 259=[59], 260=[13], 261=[10], 263=[112], 264=[104], 265=[51], 266=[128], 267=[172], 268=[105], 271=[75], 273=[166], 275=[57], 276=[3], 277=[125], 278=[90], 280=[110], 282=[150], 283=[6], 284=[135], 285=[163], 286=[20], 287=[167], 289=[78], 290=[88], 291=[7], 293=[165], 295=[113], 296=[9], 299=[118]}\u003e\n[ERROR] to contain key:\n[ERROR]  \u003c231\u003e\n```","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1616625974,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6NDQ1OTIwOTE4"},"target":"d4688303cb3913d053dd5d55713863da51b8064ca34e86d130ad2b54efe5f04d","message":"I extended the solver with a restart functionality and made each step smaller.\nNow, sometimes an error appear in the ConstraintGroupBasedRepair,\nwhich previously was hidden.\n\n- [x] Under certain circumstances the ConstraintGroupBasedRepair\ntries to remove a demand multiple times during a single step.\nThat is not allowed.\n\nThis probably happens, when more than one group is selected per defiance.\nThis may mean, that the merging of multiple removal events does not work correctly.\n\n```\njava.lang.AssertionError: [No allocations for the given supply are present.] \nExpecting:\n \u003c{2=[49], 3=[23], 6=[147], 7=[34], 9=[145], 11=[69], 12=[114], 13=[12], 14=[41], 18=[14], 20=[138], 21=[18], 22=[149], 23=[171], 25=[67], 28=[116], 34=[38], 35=[11], 37=[126], 40=[174], 41=[84], 42=[50], 43=[139], 44=[144], 45=[62], 47=[15], 48=[97], 50=[164], 53=[73], 55=[92], 57=[127], 58=[103], 60=[142], 63=[143], 64=[154], 65=[151], 66=[109], 67=[81], 69=[157], 70=[162], 72=[160], 73=[173], 74=[107], 78=[35], 80=[46], 82=[98], 83=[21], 84=[30], 85=[77], 88=[85], 89=[64], 90=[169], 91=[45], 93=[159], 94=[24], 95=[26], 96=[136], 97=[61], 101=[158], 102=[55], 103=[72], 104=[133], 106=[175], 108=[99], 113=[37], 115=[66], 116=[60], 119=[87], 120=[40], 122=[17], 124=[130], 126=[71], 128=[132], 129=[42], 130=[2], 132=[94], 133=[63], 135=[115], 136=[68], 138=[131], 140=[74], 141=[43], 142=[156], 143=[58], 144=[44], 148=[155], 150=[141], 151=[148], 152=[91], 153=[119], 155=[140], 157=[80], 159=[25], 164=[76], 165=[108], 168=[146], 169=[5], 171=[111], 172=[106], 173=[122], 174=[28], 175=[79], 178=[8], 179=[47], 180=[101], 182=[48], 183=[168], 188=[120], 191=[123], 193=[29], 194=[95], 195=[22], 196=[102], 198=[16], 200=[65], 202=[134], 203=[53], 206=[83], 207=[32], 208=[153], 209=[27], 213=[161], 215=[1], 217=[0], 218=[56], 222=[152], 223=[52], 224=[89], 227=[54], 232=[82], 233=[96], 236=[31], 237=[86], 238=[70], 239=[100], 242=[19], 245=[129], 248=[36], 249=[4], 251=[124], 252=[170], 253=[33], 254=[117], 258=[121], 259=[59], 260=[13], 261=[10], 263=[112], 264=[104], 265=[51], 266=[128], 267=[172], 268=[105], 271=[75], 273=[166], 275=[57], 276=[3], 277=[125], 278=[90], 280=[110], 282=[150], 283=[6], 284=[135], 285=[163], 286=[20], 287=[167], 289=[78], 290=[88], 291=[7], 293=[165], 295=[113], 296=[9], 299=[118]}\u003e\nto contain key:\n \u003c231\u003e\n    at net.splitcells.gel.data.allocations.AllocationsIRef.allocations_of_supply (AllocationsIRef.java:168)\n    at net.splitcells.gel.data.allocation.Allocations.allocationsOf (Allocations.java:20)\n    at net.splitcells.gel.problem.ProblemI.allocationsOf (ProblemI.java:123)\n    at net.splitcells.gel.solution.SolutionI.allocationsOf (SolutionI.java:135)\n    at net.splitcells.gel.solution.Solution.optimize (Solution.java:96)\n    at net.splitcells.gel.solution.SolutionAspect.optimize (SolutionAspect.java:88)\n    at net.splitcells.gel.solution.Solution.optimize (Solution.java:78)\n    at java.util.ArrayList.forEach (ArrayList.java:1541)\n    at net.splitcells.gel.solution.Solution.optimize (Solution.java:66)\n    at net.splitcells.gel.solution.SolutionAspect.optimize (SolutionAspect.java:46)\n    at net.splitcells.gel.solution.Solution.optimizeWithFunction (Solution.java:44)\n    at net.splitcells.gel.test.integration.OralExamsTest.lambda$testCurrent$10 (OralExamsTest.java:137)\n    at java.util.stream.Streams$RangeIntSpliterator.forEachRemaining (Streams.java:104)\n    at java.util.stream.IntPipeline$Head.forEach (IntPipeline.java:593)\n    at net.splitcells.gel.test.integration.OralExamsTest.testCurrent (OralExamsTest.java:117)\n    at net.splitcells.gel.GelDev.lambda$main$0 (GelDev.java:28)\n    at net.splitcells.gel.GelEnv.lambda$process$0 (GelEnv.java:41)\n    at net.splitcells.dem.Dem.lambda$process$1 (Dem.java:63)\n    at java.lang.Thread.run (Thread.java:834)\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  54.512 s\n[INFO] Finished at: 2021-03-23T23:05:40+01:00\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.codehaus.mojo:exec-maven-plugin:1.6.0:java (default-cli) on project gel.sheath: An exception occured while executing the Java class. [No allocations for the given supply are present.] \n[ERROR] Expecting:\n[ERROR]  \u003c{2=[49], 3=[23], 6=[147], 7=[34], 9=[145], 11=[69], 12=[114], 13=[12], 14=[41], 18=[14], 20=[138], 21=[18], 22=[149], 23=[171], 25=[67], 28=[116], 34=[38], 35=[11], 37=[126], 40=[174], 41=[84], 42=[50], 43=[139], 44=[144], 45=[62], 47=[15], 48=[97], 50=[164], 53=[73], 55=[92], 57=[127], 58=[103], 60=[142], 63=[143], 64=[154], 65=[151], 66=[109], 67=[81], 69=[157], 70=[162], 72=[160], 73=[173], 74=[107], 78=[35], 80=[46], 82=[98], 83=[21], 84=[30], 85=[77], 88=[85], 89=[64], 90=[169], 91=[45], 93=[159], 94=[24], 95=[26], 96=[136], 97=[61], 101=[158], 102=[55], 103=[72], 104=[133], 106=[175], 108=[99], 113=[37], 115=[66], 116=[60], 119=[87], 120=[40], 122=[17], 124=[130], 126=[71], 128=[132], 129=[42], 130=[2], 132=[94], 133=[63], 135=[115], 136=[68], 138=[131], 140=[74], 141=[43], 142=[156], 143=[58], 144=[44], 148=[155], 150=[141], 151=[148], 152=[91], 153=[119], 155=[140], 157=[80], 159=[25], 164=[76], 165=[108], 168=[146], 169=[5], 171=[111], 172=[106], 173=[122], 174=[28], 175=[79], 178=[8], 179=[47], 180=[101], 182=[48], 183=[168], 188=[120], 191=[123], 193=[29], 194=[95], 195=[22], 196=[102], 198=[16], 200=[65], 202=[134], 203=[53], 206=[83], 207=[32], 208=[153], 209=[27], 213=[161], 215=[1], 217=[0], 218=[56], 222=[152], 223=[52], 224=[89], 227=[54], 232=[82], 233=[96], 236=[31], 237=[86], 238=[70], 239=[100], 242=[19], 245=[129], 248=[36], 249=[4], 251=[124], 252=[170], 253=[33], 254=[117], 258=[121], 259=[59], 260=[13], 261=[10], 263=[112], 264=[104], 265=[51], 266=[128], 267=[172], 268=[105], 271=[75], 273=[166], 275=[57], 276=[3], 277=[125], 278=[90], 280=[110], 282=[150], 283=[6], 284=[135], 285=[163], 286=[20], 287=[167], 289=[78], 290=[88], 291=[7], 293=[165], 295=[113], 296=[9], 299=[118]}\u003e\n[ERROR] to contain key:\n[ERROR]  \u003c231\u003e\n```","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1616626050,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6NDQ1OTIxMTcx"},"target":"d4688303cb3913d053dd5d55713863da51b8064ca34e86d130ad2b54efe5f04d","message":"I extended the solver with a restart functionality and made each step smaller.\nNow, sometimes an error appear in the ConstraintGroupBasedRepair,\nwhich previously was hidden.\n\n- [x] Under certain circumstances the ConstraintGroupBasedRepair\ntries to remove a demand multiple times during a single step.\nThat is not allowed.\n\n-\u003e This probably happens, when more than one group is selected per defiance.\nThis may mean, that the merging of multiple removal events does not work correctly.\n\n-\u003e The demandFreeing creation did not prevent duplicates at all.\n\n```\njava.lang.AssertionError: [No allocations for the given supply are present.] \nExpecting:\n \u003c{2=[49], 3=[23], 6=[147], 7=[34], 9=[145], 11=[69], 12=[114], 13=[12], 14=[41], 18=[14], 20=[138], 21=[18], 22=[149], 23=[171], 25=[67], 28=[116], 34=[38], 35=[11], 37=[126], 40=[174], 41=[84], 42=[50], 43=[139], 44=[144], 45=[62], 47=[15], 48=[97], 50=[164], 53=[73], 55=[92], 57=[127], 58=[103], 60=[142], 63=[143], 64=[154], 65=[151], 66=[109], 67=[81], 69=[157], 70=[162], 72=[160], 73=[173], 74=[107], 78=[35], 80=[46], 82=[98], 83=[21], 84=[30], 85=[77], 88=[85], 89=[64], 90=[169], 91=[45], 93=[159], 94=[24], 95=[26], 96=[136], 97=[61], 101=[158], 102=[55], 103=[72], 104=[133], 106=[175], 108=[99], 113=[37], 115=[66], 116=[60], 119=[87], 120=[40], 122=[17], 124=[130], 126=[71], 128=[132], 129=[42], 130=[2], 132=[94], 133=[63], 135=[115], 136=[68], 138=[131], 140=[74], 141=[43], 142=[156], 143=[58], 144=[44], 148=[155], 150=[141], 151=[148], 152=[91], 153=[119], 155=[140], 157=[80], 159=[25], 164=[76], 165=[108], 168=[146], 169=[5], 171=[111], 172=[106], 173=[122], 174=[28], 175=[79], 178=[8], 179=[47], 180=[101], 182=[48], 183=[168], 188=[120], 191=[123], 193=[29], 194=[95], 195=[22], 196=[102], 198=[16], 200=[65], 202=[134], 203=[53], 206=[83], 207=[32], 208=[153], 209=[27], 213=[161], 215=[1], 217=[0], 218=[56], 222=[152], 223=[52], 224=[89], 227=[54], 232=[82], 233=[96], 236=[31], 237=[86], 238=[70], 239=[100], 242=[19], 245=[129], 248=[36], 249=[4], 251=[124], 252=[170], 253=[33], 254=[117], 258=[121], 259=[59], 260=[13], 261=[10], 263=[112], 264=[104], 265=[51], 266=[128], 267=[172], 268=[105], 271=[75], 273=[166], 275=[57], 276=[3], 277=[125], 278=[90], 280=[110], 282=[150], 283=[6], 284=[135], 285=[163], 286=[20], 287=[167], 289=[78], 290=[88], 291=[7], 293=[165], 295=[113], 296=[9], 299=[118]}\u003e\nto contain key:\n \u003c231\u003e\n    at net.splitcells.gel.data.allocations.AllocationsIRef.allocations_of_supply (AllocationsIRef.java:168)\n    at net.splitcells.gel.data.allocation.Allocations.allocationsOf (Allocations.java:20)\n    at net.splitcells.gel.problem.ProblemI.allocationsOf (ProblemI.java:123)\n    at net.splitcells.gel.solution.SolutionI.allocationsOf (SolutionI.java:135)\n    at net.splitcells.gel.solution.Solution.optimize (Solution.java:96)\n    at net.splitcells.gel.solution.SolutionAspect.optimize (SolutionAspect.java:88)\n    at net.splitcells.gel.solution.Solution.optimize (Solution.java:78)\n    at java.util.ArrayList.forEach (ArrayList.java:1541)\n    at net.splitcells.gel.solution.Solution.optimize (Solution.java:66)\n    at net.splitcells.gel.solution.SolutionAspect.optimize (SolutionAspect.java:46)\n    at net.splitcells.gel.solution.Solution.optimizeWithFunction (Solution.java:44)\n    at net.splitcells.gel.test.integration.OralExamsTest.lambda$testCurrent$10 (OralExamsTest.java:137)\n    at java.util.stream.Streams$RangeIntSpliterator.forEachRemaining (Streams.java:104)\n    at java.util.stream.IntPipeline$Head.forEach (IntPipeline.java:593)\n    at net.splitcells.gel.test.integration.OralExamsTest.testCurrent (OralExamsTest.java:117)\n    at net.splitcells.gel.GelDev.lambda$main$0 (GelDev.java:28)\n    at net.splitcells.gel.GelEnv.lambda$process$0 (GelEnv.java:41)\n    at net.splitcells.dem.Dem.lambda$process$1 (Dem.java:63)\n    at java.lang.Thread.run (Thread.java:834)\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  54.512 s\n[INFO] Finished at: 2021-03-23T23:05:40+01:00\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.codehaus.mojo:exec-maven-plugin:1.6.0:java (default-cli) on project gel.sheath: An exception occured while executing the Java class. [No allocations for the given supply are present.] \n[ERROR] Expecting:\n[ERROR]  \u003c{2=[49], 3=[23], 6=[147], 7=[34], 9=[145], 11=[69], 12=[114], 13=[12], 14=[41], 18=[14], 20=[138], 21=[18], 22=[149], 23=[171], 25=[67], 28=[116], 34=[38], 35=[11], 37=[126], 40=[174], 41=[84], 42=[50], 43=[139], 44=[144], 45=[62], 47=[15], 48=[97], 50=[164], 53=[73], 55=[92], 57=[127], 58=[103], 60=[142], 63=[143], 64=[154], 65=[151], 66=[109], 67=[81], 69=[157], 70=[162], 72=[160], 73=[173], 74=[107], 78=[35], 80=[46], 82=[98], 83=[21], 84=[30], 85=[77], 88=[85], 89=[64], 90=[169], 91=[45], 93=[159], 94=[24], 95=[26], 96=[136], 97=[61], 101=[158], 102=[55], 103=[72], 104=[133], 106=[175], 108=[99], 113=[37], 115=[66], 116=[60], 119=[87], 120=[40], 122=[17], 124=[130], 126=[71], 128=[132], 129=[42], 130=[2], 132=[94], 133=[63], 135=[115], 136=[68], 138=[131], 140=[74], 141=[43], 142=[156], 143=[58], 144=[44], 148=[155], 150=[141], 151=[148], 152=[91], 153=[119], 155=[140], 157=[80], 159=[25], 164=[76], 165=[108], 168=[146], 169=[5], 171=[111], 172=[106], 173=[122], 174=[28], 175=[79], 178=[8], 179=[47], 180=[101], 182=[48], 183=[168], 188=[120], 191=[123], 193=[29], 194=[95], 195=[22], 196=[102], 198=[16], 200=[65], 202=[134], 203=[53], 206=[83], 207=[32], 208=[153], 209=[27], 213=[161], 215=[1], 217=[0], 218=[56], 222=[152], 223=[52], 224=[89], 227=[54], 232=[82], 233=[96], 236=[31], 237=[86], 238=[70], 239=[100], 242=[19], 245=[129], 248=[36], 249=[4], 251=[124], 252=[170], 253=[33], 254=[117], 258=[121], 259=[59], 260=[13], 261=[10], 263=[112], 264=[104], 265=[51], 266=[128], 267=[172], 268=[105], 271=[75], 273=[166], 275=[57], 276=[3], 277=[125], 278=[90], 280=[110], 282=[150], 283=[6], 284=[135], 285=[163], 286=[20], 287=[167], 289=[78], 290=[88], 291=[7], 293=[165], 295=[113], 296=[9], 299=[118]}\u003e\n[ERROR] to contain key:\n[ERROR]  \u003c231\u003e\n```","files":null},{"type":3,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1616712340,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDgwNzY1MjMzMw==","github-url":"https://github.com/www-splitcells-net/net.splitcells.network/issues/7#issuecomment-807652333"},"message":"Now I can somtimes create optimal solutions again with the new optimizer.","files":null},{"type":6,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1616712340,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6NDQ2MzA3NzY3"},"target":"35daa54c7da3579f05ee36d109e94a551e66bb816ac0d0356140f540805b7797","message":"Now I can sometimes create optimal solutions again with the new optimizer.","files":null},{"type":4,"author":{"id":"37314acb12deef6cac38223490bc1b720908d897"},"timestamp":1618348732,"metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50NDU5MDMzMTk2Mg=="},"status":2}]}