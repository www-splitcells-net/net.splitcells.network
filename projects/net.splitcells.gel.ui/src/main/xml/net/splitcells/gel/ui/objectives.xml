<?xml version="1.0" encoding="UTF-8"?>
<article xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:x="http://www.w3.org/1999/xhtml"
         xmlns="http://splitcells.net/sew.xsd"
         xmlns:n="http://splitcells.net/natural.xsd"
         xmlns:d="http://splitcells.net/den.xsd" xmlns:p="http://splitcells.net/private.xsd"
         xsi:schemaLocation="http://splitcells.net/sew.xsd sew.xsd">
    <!--
        SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-or-later
        SPDX-FileCopyrightText: Contributors To The `net.splitcells.*` Projects
    -->
    <meta>
        <title>Generic Allocation UI Objectives</title>
    </meta>
    <paragraph>The code editor provides a general programming language,
        in order to persist, import and export optimization models.
        At the same time the source code is realistically editable by the user with simple text editors.
        As most programs are small a real IDE is not required for now.
    </paragraph>
    <paragraph>The no-code editor provides an interactive GUI to optimization models.
        It makes features discoverable by the user and prohibits the user from constructing formally incorrect models.
        The editor will also be the basis for a generic GUI for interacting
        with complex program objects like configurations or persisted optimization models.
        Unfortunately, for this to work,
        the underlying abstract programming language would have to be made more general.
        No-code is no replacement for an editor documentation,
        as users have very limited alternative options to learn about the finer concept details of the software.
    </paragraph>
</article>