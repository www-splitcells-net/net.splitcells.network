<?xml version="1.0" encoding="UTF-8"?>
<article xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:x="http://www.w3.org/1999/xhtml"
         xmlns="http://splitcells.net/sew.xsd"
         xmlns:n="http://splitcells.net/natural.xsd"
         xmlns:d="http://splitcells.net/den.xsd" xmlns:p="http://splitcells.net/private.xsd"
         xsi:schemaLocation="http://splitcells.net/sew.xsd sew.xsd">
    <!--
        SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-or-later
        SPDX-FileCopyrightText: Contributors To The `net.splitcells.*` Projects
    -->
    <meta>
        <title>Generic Allocation UI Objectives</title>
    </meta>
    <paragraph>The code editor provides a general programming language,
        in order to persist, import and export optimization models.
        At the same time the source code is realistically editable by the user with simple text editors.
        We the editor to be a full IDE.
    </paragraph>
    <paragraph>In the future the source code in the editor should also be able to be updated by the server,
        so that status information can be stored, viewed and updated in the source code as well.
        Think for example of a command in the source, that notes, that the source code
        was uploaded to the server, which version is available at the server and what the document ID is.
        In other words, source code can also be used as a UI.
    </paragraph>
    <paragraph>A no-code editor was once tried and it basically worked.
        It was removed, because modelling logic in no-code seems to be the same as code,
        especially when modern GUI editors with autocompletion and co. are considered.
        Furthermore, a no-code editor was no replacement for a missing programming language documentation.
        The no-code editor also required some development and maintenance capacity and
        in order to lower the cost it was removed.
    </paragraph>
</article>