<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <!--
        SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-or-later
        SPDX-FileCopyrightText: Contributors To The `net.splitcells.*` Projects
    -->
    <modelVersion>4.0.0</modelVersion>
    <artifactId>pom-java-defaults</artifactId>
    <packaging>pom</packaging>
    <parent>
        <groupId>net.splitcells</groupId>
        <artifactId>pom-java-minimal</artifactId>
        <version>${revision}</version>
        <relativePath>../net.splitcells.pom.java.minimal/pom.xml</relativePath>
    </parent>
    <!-- TODO .gitignore of this project is also a template. -->
    <!-- TODO Update to Java 12. -->
    <!-- TODO Use automatic code formatting with own rules. -->
    <!-- TODO https://fedoramagazine.org/jdk-mission-control-is-now-in-fedora-29/ https://stackoverflow.com/questions/25518834/how-to-add-enable-flag-for-flight-recorder-in-maven-project -->
    <!-- TODO Support FindBugs, SpotBugs,Emma, Cobertura und JaCoCo. -->
    <!-- TODO Support coverage test. -->
    <!-- TODO Behavior-Driven Development: consider Acceptance test via user stories: JBehave, Cucumber or JGiven -->
    <properties>
        <encoding.default>UTF-8</encoding.default>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>21</java.version>
        <packaging>jar</packaging>
        <test.groups>!testing_capabilities&amp;!experimental_test&amp;!benchmarking_runtime&amp;!testing_integration
        </test.groups>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.release>${java.version}</maven.compiler.release>
        <jacoco.overall.exec>${maven.multiModuleProjectDirectory}/target/jacoco-aggregate/jacoco.exec
        </jacoco.overall.exec>
        <maven-profiler-report-directory>${project.build.directory}/org.apache.maven.plugins.maven-profiler-plugin</maven-profiler-report-directory>
    </properties>
    <build>
        <finalName>${project.groupId}.${project.artifactId}-${project.version}</finalName>
        <sourceDirectory>src/main/java</sourceDirectory>
        <testSourceDirectory>src/main/java</testSourceDirectory>
        <extensions>
            <extension>
                <!-- This is needed by maven-profiler-plugin. -->
                <groupId>fr.jcgay.maven</groupId>
                <artifactId>maven-profiler</artifactId>
                <version>3.2</version>
            </extension>
        </extensions>
        <plugins>
            <plugin>
                <groupId>net.splitcells</groupId>
                <artifactId>check-maven-plugin</artifactId>
                <version>${revision}</version>
                <executions>
                    <execution>
                        <id>check</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>source-code-check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>net.splitcells</groupId>
                <artifactId>resource-list-maven-plugin</artifactId>
                <version>${revision}</version>
                <executions>
                    <execution>
                        <id>generate-resource-list</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>generate-resource-list</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- This makes it easier to execute a Java program from command line via `mvn exec:java -Dexec.mainClass=[...]`. -->
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.1</version>
            </plugin>
            <plugin>
                <inherited>true</inherited>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>1.3.1</version>
                <executions>
                    <execution>
                        <id>enforce-maven-3</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>3.5.4</version>
                                </requireMavenVersion>
                            </rules>
                            <fail>true</fail>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <!-- Java version older than 9 is used: "Fatal error compiling: invalid flag: -release -> [Help 1]" -->
                    <release>${java.version}</release>
                    <encoding>${encoding.default}</encoding>
                    <showWarnings>true</showWarnings>
                    <compilerArgument>-Xlint:all</compilerArgument>
                    <showDeprecation>true</showDeprecation>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>
            <plugin>
                <!-- CreateS Javadoc and ensures, that JavaDoc is always correct.
                This is specially important for links to other classes, methods, etc. inside JavaDocs. -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>3.6.3</version>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <sourcepath>src/main/java;target/antlr4</sourcepath>
                    <additionalOptions>
                        <additionalOption>-Xdoclint:all,-missing</additionalOption>
                    </additionalOptions>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>net.splitcells</groupId>
                <artifactId>network.bom</artifactId>
                <version>0.0.1-SNAPSHOT</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.javaparser</groupId>
            <artifactId>javaparser-symbol-solver-core</artifactId>
        </dependency>
        <dependency>
            <groupId>io.vavr</groupId>
            <artifactId>vavr</artifactId>
        </dependency>
        <dependency>
            <groupId>net.sf.saxon</groupId>
            <artifactId>Saxon-HE</artifactId>
        </dependency>
    </dependencies>
    <profiles>
        <profile>
            <id>maven-profiler</id>
            <!--
                This requires the extension fr.jcgay.maven.maven-profiler.
                Install it for Maven by copying the [maven-profiler Jar](https://github.com/jcgay/maven-profiler)
                into `%M2_HOME%/lib/ext` and `~/.sdkman/candidates/mvnd/current/mvn/lib/ext`.

                The property maven-profiler-report-directory is required by this profile,
                but it needs to be placed at top.
                If this property is placed in this profile,
                the property does not work and the profiler folder is stored in the project folder,
                instead of the project's target folder.
             -->
            <build>
                <plugins>
                    <plugin>
                        <!-- Profile maven runtime profile via `mvn clean install -Dprofile` and find the report at `target/.profiler`  -->
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-profiler-plugin</artifactId>
                        <version>1.7</version>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>uber-jar</id>
            <activation>
                <property>
                    <name>uber.jar</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <version>2.7.15</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>repackage</goal>
                                </goals>
                                <configuration>
                                    <classifier>spring-boot</classifier>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>resources-source</id>
            <!-- This is used in order to provide content and files to the webserver via jars,
            instead of the file system. -->
            <!-- The dedicated `${basedir}/target/classes/${project.groupId}.${project.artifactId}.resources` folder is used,
            in order to avoid mixing resource files with binary execution files.
            This in turn makes resource processing easier. -->
            <activation>
                <property>
                    <name>!resources-source</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <version>3.3.1</version>
                        <executions>
                            <execution>
                                <id>resources-source-antlr4</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>
                                        ${basedir}/target/classes/${project.groupId}.${project.artifactId}.resources/src/main/antlr4
                                    </outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src/main/antlr4</directory>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>resources-source-antlr4-test</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <!-- This is required in Intellij IDE on Windows. -->
                                    <outputDirectory>
                                        ${basedir}/target/test-classes/${project.groupId}.${project.artifactId}.resources/src/main/antlr4
                                    </outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src/main/antlr4</directory>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>resources-source-bash</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>
                                        ${basedir}/target/classes/${project.groupId}.${project.artifactId}.resources/src/main/bash
                                    </outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src/main/bash</directory>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>resources-source-bash-test</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <!-- This is required in Intellij IDE on Windows. -->
                                    <outputDirectory>
                                        ${basedir}/target/test-classes/${project.groupId}.${project.artifactId}.resources/src/main/bash
                                    </outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src/main/bash</directory>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>resources-source-hugo.md</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>
                                        ${basedir}/target/classes/${project.groupId}.${project.artifactId}.resources/src/main/hugo.md
                                    </outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src/main/hugo.md</directory>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>resources-source-hugo.md-test</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <!-- This is required in Intellij IDE on Windows. -->
                                    <outputDirectory>
                                        ${basedir}/target/test-classes/${project.groupId}.${project.artifactId}.resources/src/main/hugo.md
                                    </outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src/main/hugo.md</directory>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>resources-source-html</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>
                                        ${basedir}/target/classes/${project.groupId}.${project.artifactId}.resources/src/main/html
                                    </outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src/main/html</directory>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>resources-source-html-test</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <!-- This is required in Intellij IDE on Windows. -->
                                    <outputDirectory>
                                        ${basedir}/target/test-classes/${project.groupId}.${project.artifactId}.resources/src/main/html
                                    </outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src/main/html</directory>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>resources-source-js</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>
                                        ${basedir}/target/classes/${project.groupId}.${project.artifactId}.resources/src/main/js
                                    </outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src/main/js</directory>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>resources-source-js-test</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <!-- This is required in Intellij IDE on Windows. -->
                                    <outputDirectory>
                                        ${basedir}/target/test-classes/${project.groupId}.${project.artifactId}.resources/src/main/js
                                    </outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src/main/js</directory>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>resources-source-md</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>
                                        ${basedir}/target/classes/${project.groupId}.${project.artifactId}.resources/src/main/md
                                    </outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src/main/md</directory>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>resources-source-md-test</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <!-- This is required in Intellij IDE on Windows. -->
                                    <outputDirectory>
                                        ${basedir}/target/test-classes/${project.groupId}.${project.artifactId}.resources/src/main/md
                                    </outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src/main/md</directory>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>resources-source-python</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>
                                        ${basedir}/target/classes/${project.groupId}.${project.artifactId}.resources/src/main/python
                                    </outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src/main/python</directory>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>resources-source-python-test</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <!-- This is required in Intellij IDE on Windows. -->
                                    <outputDirectory>
                                        ${basedir}/target/test-classes/${project.groupId}.${project.artifactId}.resources/src/main/python
                                    </outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src/main/python</directory>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>resources-source-resources</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>
                                        ${basedir}/target/classes/${project.groupId}.${project.artifactId}.resources/src/main/resources
                                    </outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src/main/resources</directory>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>resources-source-resources-test</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <!-- This is required in Intellij IDE on Windows. -->
                                    <outputDirectory>
                                        ${basedir}/target/test-classes/${project.groupId}.${project.artifactId}.resources/src/main/resources
                                    </outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src/main/resources</directory>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>resources-source-svg</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>
                                        ${basedir}/target/classes/${project.groupId}.${project.artifactId}.resources/src/main/svg
                                    </outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src/main/svg</directory>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>resources-source-svg-test</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <!-- This is required in Intellij IDE on Windows. -->
                                    <outputDirectory>
                                        ${basedir}/target/test-classes/${project.groupId}.${project.artifactId}.resources/src/main/svg
                                    </outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src/main/svg</directory>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>resources-source-txt</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>
                                        ${basedir}/target/classes/${project.groupId}.${project.artifactId}.resources/src/main/txt
                                    </outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src/main/txt</directory>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>resources-source-txt-test</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <!-- This is required in Intellij IDE on Windows. -->
                                    <outputDirectory>
                                        ${basedir}/target/test-classes/${project.groupId}.${project.artifactId}.resources/src/main/txt
                                    </outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src/main/txt</directory>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>resources-source-xml</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>
                                        ${basedir}/target/classes/${project.groupId}.${project.artifactId}.resources/src/main/xml
                                    </outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src/main/xml</directory>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>resources-source-xml-test</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <!-- This is required in Intellij IDE on Windows. -->
                                    <outputDirectory>
                                        ${basedir}/target/test-classes/${project.groupId}.${project.artifactId}.resources/src/main/xml
                                    </outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src/main/xml</directory>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>resources-source-csv</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>
                                        ${basedir}/target/classes/${project.groupId}.${project.artifactId}.resources/src/main/csv
                                    </outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src/main/csv</directory>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>resources-source-csv-test</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <!-- This is required in Intellij IDE on Windows. -->
                                    <outputDirectory>
                                        ${basedir}/target/test-classes/${project.groupId}.${project.artifactId}.resources/src/main/csv
                                    </outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src/main/csv</directory>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>resources-source-xml-pom</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>
                                        ${basedir}/target/classes/${project.groupId}.${project.artifactId}.resources/src/main/xml-pom
                                    </outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src/main/xml-pom</directory>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>resources-source-xml-pom-test</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <!-- This is required in Intellij IDE on Windows. -->
                                    <outputDirectory>
                                        ${basedir}/target/test-classes/${project.groupId}.${project.artifactId}.resources/src/main/xml-pom
                                    </outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src/main/xml-pom</directory>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>resources-source-xsd</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>
                                        ${basedir}/target/classes/${project.groupId}.${project.artifactId}.resources/src/main/xsd
                                    </outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src/main/xml-pom</directory>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>resources-source-xsd-test</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <!-- This is required in Intellij IDE on Windows. -->
                                    <outputDirectory>
                                        ${basedir}/target/test-classes/${project.groupId}.${project.artifactId}.resources/src/main/xsd
                                    </outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src/main/xml-pom</directory>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>resources-source-xsl</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>
                                        ${basedir}/target/classes/${project.groupId}.${project.artifactId}.resources/src/main/xsl
                                    </outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src/main/xsl</directory>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>resources-source-xsl-test</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <!-- This is required in Intellij IDE on Windows. -->
                                    <outputDirectory>
                                        ${basedir}/target/test-classes/${project.groupId}.${project.artifactId}.resources/src/main/xsl
                                    </outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src/main/xsl</directory>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>resources-source-root-resources</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>
                                        ${basedir}/target/classes/${project.groupId}.${project.artifactId}.resources/
                                    </outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>./</directory>
                                            <filtering>true</filtering>
                                            <includes>
                                                <include>BUILD.*</include>
                                                <include>CHANGELOG.*</include>
                                                <include>CONTRIBUTING.*</include>
                                                <include>DEVELOPMENT.*</include>
                                                <include>README.*</include>
                                                <include>NOTICE.*</include>
                                            </includes>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>resources-source-root-resources-test</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <!-- This is required in Intellij IDE on Windows. -->
                                    <outputDirectory>
                                        ${basedir}/target/test-classes/${project.groupId}.${project.artifactId}.resources/
                                    </outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>./</directory>
                                            <filtering>true</filtering>
                                            <includes>
                                                <include>BUILD.*</include>
                                                <include>CHANGELOG.*</include>
                                                <include>CONTRIBUTING.*</include>
                                                <include>DEVELOPMENT.*</include>
                                                <include>README.*</include>
                                                <include>NOTICE.*</include>
                                            </includes>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>test-via-junit</id>
            <activation>
                <property>
                    <name>!test_via_junit_disabled</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>2.22.2</version>
                        <configuration>
                            <!--trimStackTrace: show full stack trace in console: source: https://stackoverflow.com/questions/2928548/make-mavens-surefire-show-stacktrace-in-console/16941432#16941432-->
                            <trimStackTrace>false</trimStackTrace>
                            <systemPropertyVariables>
                                <!-- TOFIX Does not work. Currently the property is set in TestSuiteI manually. -->
                                <net.splitcells.mode.build>true</net.splitcells.mode.build>
                            </systemPropertyVariables>
                            <!-- TODO Execute tests in parallel.
                            <parallel>all</parallel>
                            <useUnlimitedThreads>true</useUnlimitedThreads> -->
                            <!-- Doc Of Tag Expressions: https://junit.org/junit5/docs/current/user-guide/#running-tests-tag-expressions -->
                            <groups>${test.groups}</groups>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
            <dependencies>
                <dependency>
                    <groupId>org.junit.platform</groupId>
                    <artifactId>junit-platform-launcher</artifactId>
                    <version>1.6.0</version>
                </dependency>
                <dependency>
                    <groupId>org.junit.jupiter</groupId>
                    <artifactId>junit-jupiter-engine</artifactId>
                    <version>5.5.2</version>
                </dependency>
                <dependency>
                    <groupId>org.junit.jupiter</groupId>
                    <artifactId>junit-jupiter-api</artifactId>
                    <version>5.5.2</version>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>debug</id>
            <activation>
                <property>
                    <name>!debug_disabled</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <version>3.3.0</version>
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>release</id>
            <activation>
                <property>
                    <name>release_enabled</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <version>3.3.0</version>
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>develop</id>
            <activation>
                <property>
                    <name>develop_profile_enabled</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <!-- Enable incremental builds. -->
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <configuration>
                            <!-- source: https://stackoverflow.com/questions/8918165/does-maven-support-incremental-builds/41301660#41301660 -->
                            <!-- source: https://issues.apache.org/jira/browse/MCOMPILER-209 -->
                            <useIncrementalCompilation>false</useIncrementalCompilation>
                            <compilerArgs>
                                <arg>-sun.jnu.encoding=UTF-8</arg>
                            </compilerArgs>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <!-- Use Lombok only for code generation via delombok ("mvn lombok:delombok"). -->
            <!-- Lombok's @Delegate does not seem to work well in Java 11. -->
            <!-- Following features of Lombok would be very helpful, but have severe implementation problems.
             Val is not used, because it causes a big compilation performance regression. Last time it multiplied compilation times by 100.
            @Delegate is not used, because it is experimental and may have complex bugs. -->
            <id>generate-code-with-lombok</id>
            <activation>
                <property>
                    <name>generate_code_with_lombok</name>
                </property>
            </activation>
            <properties>
                <lombok.version>1.18.10</lombok.version>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>org.projectlombok</groupId>
                    <artifactId>lombok</artifactId>
                    <version>${lombok.version}</version>
                    <scope>provided</scope>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <configuration>
                            <annotationProcessorPaths>
                                <!--
                                This prevents following warning: Supported source version 'RELEASE_6' from annotation processor 'org.eclipse.sisu.space.SisuIndexAPT6' less than -source '11'
                                -->
                                <path>
                                    <groupId>org.projectlombok</groupId>
                                    <artifactId>lombok</artifactId>
                                    <version>${lombok.version}</version>
                                </path>
                            </annotationProcessorPaths>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.projectlombok</groupId>
                        <artifactId>lombok-maven-plugin</artifactId>
                        <version>1.18.10.0</version>
                        <configuration>
                            <sourceDirectory>./src</sourceDirectory>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>delombok</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>develop-with-source-code-errors</id>
            <activation>
                <property>
                    <name>develop_with_source_code_errors</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <!-- Use Eclipse compiler as this allows to compile a Java project with errors. This can be used to try things out. -->
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <configuration>
                            <compilerId>jdt</compilerId>
                        </configuration>
                        <dependencies>
                            <dependency>
                                <groupId>org.eclipse.tycho</groupId>
                                <artifactId>tycho-compiler-jdt</artifactId>
                                <version>1.5.1</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <!-- Execute mutation testing via "mvn -P test-via-mutations-via-pitest clean verify".
            The results are located at "target/pit-reports".
            Disable profile JUnit profile via setting test_via_junit_disabled=1, if this is enabled.
            -->
            <id>test-via-mutations-via-pitest</id>
            <activation>
                <property>
                    <name>test_via_pitest_enabled</name>
                </property>
            </activation>
            <!-- Error: "Minion exited abnormally due to TIMED_OUT"
            Classification: The error is harmless as it is probably cause by the fact, that a mutation caused an endless loop.
            Source: https://github.com/STAMP-project/pitest-descartes/issues/80 -->
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.pitest</groupId>
                        <artifactId>pitest-maven</artifactId>
                        <version>1.5.0</version>
                        <executions>
                            <execution>
                                <phase>test</phase>
                                <goals>
                                    <goal>mutationCoverage</goal>
                                </goals>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>org.pitest</groupId>
                                <artifactId>pitest-junit5-plugin</artifactId>
                                <version>0.12</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>2.22.2</version>
                        <configuration>
                            <!--trimStackTrace: show full stack trace in console: source: https://stackoverflow.com/questions/2928548/make-mavens-surefire-show-stacktrace-in-console/16941432#16941432-->
                            <trimStackTrace>false</trimStackTrace>
                            <systemPropertyVariables>
                                <!-- TOFIX Does not work. Currently the property is set in TestSuiteI manually. -->
                                <net.splitcells.mode.build>true</net.splitcells.mode.build>
                            </systemPropertyVariables>
                            <parallel>all</parallel>
                            <useUnlimitedThreads>true</useUnlimitedThreads>
                            <!-- TODO Execute tests in parallel. parallel>all</parallel>
                            <useUnlimitedThreads>true</useUnlimitedThreads-->
                            <excludedGroups>testing_capabilities</excludedGroups>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
            <dependencies>
                <dependency>
                    <groupId>org.junit.platform</groupId>
                    <artifactId>junit-platform-launcher</artifactId>
                    <version>1.6.0</version>
                </dependency>
                <dependency>
                    <groupId>org.junit.jupiter</groupId>
                    <artifactId>junit-jupiter-engine</artifactId>
                    <version>5.5.2</version>
                </dependency>
                <dependency>
                    <groupId>org.junit.jupiter</groupId>
                    <artifactId>junit-jupiter-api</artifactId>
                    <version>5.5.2</version>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>report</id>
            <!-- Generate all reports via "mvn site". -->
            <activation>
                <property>
                    <name>!report_disabled</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <!-- Prevent ClassNotFoundException inside "org.apache.maven.plugins:maven-site-plugin" during "mvn site". -->
                        <!-- This needs to be placed into each POM inheriting from this POM for "mvn site" to work without getting ClassNotFoundException. -->
                        <!-- See: https://stackoverflow.com/questions/51091539/maven-site-plugins-3-3-java-lang-classnotfoundexception-org-apache-maven-doxia/51108927#51108927 -->
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-site-plugin</artifactId>
                        <version>3.7.1</version>
                    </plugin>
                </plugins>
            </build>
            <reporting>
                <plugins>
                    <plugin>
                        <groupId>com.github.spotbugs</groupId>
                        <artifactId>spotbugs-maven-plugin</artifactId>
                        <version>4.2.0</version>
                    </plugin>
                    <plugin>
                        <!-- Prevent ClassNotFoundException inside "org.apache.maven.plugins:maven-site-plugin" during "mvn site". -->
                        <!-- See: https://stackoverflow.com/questions/51091539/maven-site-plugins-3-3-java-lang-classnotfoundexception-org-apache-maven-doxia/51108927#51108927 -->
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-project-info-reports-plugin</artifactId>
                        <version>3.0.0</version>
                    </plugin>
                    <!-- javancss-maven-plugin does not work. -->
                    <!-- Note that this is not located in the build element of Maven, as otherwise the source folders are not found: http://maven.apache.org/guides/mini/guide-configuring-plugins.html#Using_the_reporting_Tag_VS_build_Tag -->
                    <plugin>
                        <!-- Create source code metrics. -->
                        <!-- TODO Check license. -->
                        <groupId>net.sf</groupId>
                        <artifactId>stat-scm</artifactId>
                        <version>1.2.0</version>
                        <configuration>
                            <includes>
                                <include>**/*.java</include>
                            </includes>
                        </configuration>
                    </plugin>
                    <plugin>
                        <!-- Create source code metrics. -->
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>jdepend-maven-plugin</artifactId>
                        <version>2.0</version>
                    </plugin>
                    <plugin>
                        <!-- Create a static code analysis. -->
                        <!-- Usage: "mvn pmd:pmd pmd:cpd" -->
                        <!-- Documentation: https://maven.apache.org/plugins/maven-pmd-plugin/usage.html -->
                        <!-- TODO Are all available reports generated? https://maven.apache.org/plugins/maven-pmd-plugin/project-reports.html -->
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-pmd-plugin</artifactId>
                        <version>3.12.0</version>
                    </plugin>
                </plugins>
            </reporting>
        </profile>
        <profile>
            <id>test-codecov</id>
            <activation>
                <property>
                    <name>env.test_codecov</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <version>0.8.11</version>
                        <executions>
                            <execution>
                                <id>test-codecov-default-prepare-agent</id>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                                <configuration>
                                    <append>true</append>
                                    <destFile>${jacoco.overall.exec}</destFile>
                                </configuration>
                            </execution>
                            <execution>
                                <id>test-codecov-report</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                                <configuration>
                                    <dataFile>${jacoco.overall.exec}</dataFile>
                                </configuration>
                            </execution>
                            <execution>
                                <phase>verify</phase>
                                <goals>
                                    <!-- Only the reports of the direct dependencies are considered by this goal. -->
                                    <!-- If a test covers additional lines of another submodule, then these lines are added to the aggregate report as well. -->
                                    <goal>report-aggregate</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    <repositories>
        <repository>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <id>central</id>
            <name>Central Repository</name>
            <url>https://repo.maven.apache.org/maven2</url>
        </repository>
    </repositories>
</project>
