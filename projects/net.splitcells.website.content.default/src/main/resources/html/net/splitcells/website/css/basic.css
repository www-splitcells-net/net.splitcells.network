@charset "UTF-8";
/* SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-or-later
 * SPDX-FileCopyrightText: Contributors To The `net.splitcells.*` Projects
 */
/* Guidlines:
- Use 100% of width by default and no specific height values by default.
  In other words grow in one direction and fille the other one.
- Use names with namespaces.
- `net-splitcells-website-visually-replaceable` is used in order to mark a component as visually replaceable.
  This basically means, that i.e. a JavaScript framework is allowed to hide such an element and
  place an alternative element in its place.
  This can be used in order to add new functionality to such elements.
  If such an element is interactable or changeable, the replacer is responsible to track the element's content and
  to update the alternative representation accordingly.
*/
/* - TODO Split CSS in CSS without classes and CSS with specifics for this website.
 * - TODO Split up CSS into multiple files, where each file is responsible for one somewhat big functionality,
 *   like the styling of HTML tables.
 * - TODO Consider allowing only one line per item in a tree and enforce it via clipping.
 *   This improves the visual navigation of the tree by the user,
 *   but makes it impossible to see big items fully without actions.
 *   This could be avoided, by showing the full content, when the user hovers over the tree item,
 *   but this may work badly with link items on smartphones.
 *   Maybe enable this only on desktops?
*/
.net-splitcells-website-form-editor-tab-bar {
    display: flex;
    flex-wrap: wrap;
    flex-direction: row;
    }
.net-splitcells-form-editor {
    width: 100%;
    height: 100%;
    }
.net-splitcells-website-form-editor-tab-holder {
    width: 100%;
    height: 100%;
    }
table {
    width: 100%;
    table-layout: fixed;
    }
code {
	/* Code blocks are created by default CommonMark rendering. */
	font-family: Palatino, Palatino Linotype, Palatino LT STD, Book Antiqua, Georgia, serif;
	}
li code::after,
p code::after {
	content: "“";
	}
li code::before,
p code::before {
	content: "”";
	}
main canvas:not(#myChart) {
    /* TODO ":not(#myChart)" is a hack,
     * because the intent is to select the "three.js" renderer of "net.splitcells.cin",
     * which should be done directly and not in this manner.
     */
    position: absolute;
    z-index: -1;
    height: 100% !important;
    width: 100% !important;
}
article p img {
    /* Styling for pictures linked by the CommonMark backend.
       These are always wrapped in p elements. */
	max-width: 100%;
	margin-left: auto;
	margin-right: auto;
	display: block;
	/* The following is not valid anymore. Block display works with multiple images in a row.
	   See status badges on README, where the images are located in a list item.
	   `display: block;`
	   This does not seem to be required,
	   because pictures with the full width of the enclosing paragraph should usually be placed in a paragraph without any other pictures in the same paragraphs.
	   By not using block display, one can place multiple images on the same line,
	   by placing all images in CommonMark into the same paragraph,
	   if explicitly wanted.
	   See status badges on READMEs.
	   This is achieved, by having no empty lines between images in CommonMark source code. */
	}
.net-splitcells-website-pop-up {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: var(--background-color-selected-priority-0);
    z-index: 7;
    padding: 4em;
    }
ol {
    /* Numbering of list items is not done, because CSS does not seem to have a way,
     * to adjust the padding/margin of the left according to the size of the biggest list item number.
     * The only known way to get this working, is to allocate enough space according to the biggest
     * expected number of elements in the list.
     * This number can get very large.
     * See the website layout document.
     * If this would not be done, the numbering of list items crosses with neighbouring HTML elements.
     */
    list-style: none;
    padding-left: .5em;
    }
ol ol {
    padding-left: 1.75em;
    }
li {
   border-left: .1em solid rgb(100,100,100);
   padding-left: .5em;
   box-shadow: 0em 0.1em 0.1em -0.1em var(--shadow-color-priority-3);
   margin-top: .1em;
   margin-right: .1em;
   margin-bottom: .1em;
   }
ol li:last-child::before {
  border-left: .1em solid rgb(100,100,100);
}
ol li:last-child {
  border-left: none;
}
ol li::before {
  position: relative;
  top: -0.3em;
  height: 1em;
  width: 12px;
  color: white;
  border-bottom: .1em solid rgb(100,100,100);
  content: "";
  display: inline-block;
  left: -.5em;
}
li:hover {
    background-color: var(--background-color-selected-priority-0) !important;
    color: var(--foreground-color-selected-priority-0) !important;
    }
li:nth-child(even) {
    background: var(--paragraph-background-color-priority-1-b);
    }
li:nth-child(odd) {
    background: var(--paragraph-background-color-priority-1-a);
    }
ol ol:last-child {
    /* border-left:none;
     * It is better to have some visual guidelines, regarding the indentation of an element.
     * This guideline, needs to be very weak, because it otherwise adds to much visual noise,
     * without a reasonable amount of visual functionality.
     * Therefore, disabling the visual guideline of the left border is not used.
     */
    border-left: 1px solid rgba(100,100,100, 0.125);
    }
pre {
    overflow-x: auto;
    }
* {
	word-break: normal;
	}
.net-splitcells-space-filler {
	flex: auto;
	}
.net-splitcells-hidden {
	display: none;
	visibility: hidden;
}
textarea.net-splitcells-webserver-form-text-editor-backend {
    width: 100%;
    height: 50em;
    resize: none;
    border: none;
    font-family: monospace;
    font-size: 1em;
    visibility: hidden;
    display: none;
    }
.net-splitcells-button-inline {
	margin-left: .0625em;
    margin-right: .0625em;
    font-weight: bold;
    line-height: 1.5em;
    padding-left: .5em;
    padding-right: .5em;
    height: 2em;
    margin-top: 0em;
    text-align: center;
    vertical-align: middle;
    display: flex;
    justify-content: center;
    align-items: center;
    text-indent: 0em;
	}
.net-splitcells-website-hidden-by-default {
    /* We hide errors by default and only show them via Javascript. */
    visibility: hidden;
    display: none;
    }
.splitcells-net-title-logo {
    text-align: center;
    }
.splitcells-net-window-menu {
    min-height: 4.25em;
    display: flex;
    flex-direction: column;
    }
.splitcells-net-background-window {
    flex:auto;
    }
.net-splitcells-quote-display input:not(:checked) ~ div {
    overflow: auto;
}
.net-splitcells-quote-display input:checked ~ div {
    max-height: 30em;
    overflow: auto;
}
mjx-container {
    /* Prevents that any formula displayed as block, goes outside of its container. */
    overflow-y: scroll;
    }
*, *:before, *:after {
	box-sizing: inherit; /* Let other css overwrite this attribute if they want. */
}
ul {
    font-family: var(--text-flowing-font);
    padding-left: 0;
    margin-left: 1em;
    padding-bottom: .2em;
    }
.NonStandard {}
.HeaderLinkButton {
	margin-left: .0625em;
	margin-right: .0625em;
	}
.net-splitcells-content-main {
    /* The content itself should manage overflow.*/
    /* min-height is required, for the case, that the content's height is shorter, than the display's height. */
    min-height: 100vh;
    }
.net-splitcells-search-bar {
	width: 100%;
	outline: medium none;
	border: medium none;
	height: 100%;/* Hack for main search bar. */
	text-indent: .5em;
	}
*.div_row {
	display: flex;
	flex-direction: row;
	}
.highlighted_button {
	display: inline-block;
	font-weight: bold;
	line-height: 1.5em;
	vertical-align: middle;
	padding-top: .25em;
	padding-bottom: .25em;
	}
.net-splitcells-structural-guide {
	/* For overlays use 2000000000 <= index < 2147483647. */
	z-index: 6;
	min-height: .25em;
	min-width: .25em;
	}
.Button {
	display: inline-block;
	font-weight: bold;
	line-height: 1.5em;
	vertical-align: middle;
	padding-left: 1em;
	padding-top: .25em;
	padding-bottom: .25em;
	padding-right: 1em;
	float: right;
	}
/*deprecated*/
.HeaderButton {
	margin-bottom: 0.06125em;
	font-weight: bold;
	line-height: 1.5em;
	vertical-align: middle;
	padding-left: .5em;
	padding-right: .5em;
	height: 2em;
	margin-top: 0em;
	text-align: center;
	display: flex;
	justify-content: center;
	align-items: center;
	text-indent: 0em;
	}
.splitcells-net-window-menu-line-1 {
    display: flex;
    flex-direction: row;
    height: 2em;
    }
.splitcells-net-window-menu-line-2 {
    min-height: 2.85em; /* min-height is required for document titles, that need at least 2 lines. */
    padding-top: .2em;
    }
.HeaderButton_structure {
	margin-left: .0625em;
	margin-right: .0625em;
	font-weight: bold;
	line-height: 1.5em;
	padding-left: .5em;
	padding-right: .5em;
	height: 2em;
	margin-top: 0em;
	text-align: center;
	vertical-align: middle;
	display: flex;
	justify-content: center;
	align-items: center;
	text-indent: 0em;
	}
html,
body {
	width: 100%;
	min-height: 100vh;
	margin: 0px;
	padding: 0px;
	/* Ensures that px can be used in child elements, if required.
	 * EM should always preferred over px, because it's mostly about text.
	 *
	 * 16 px seems to be the default size:
	 * https://developer.mozilla.org/en-US/docs/Web/CSS/font-size
	 */
	font-size: 16px;
	background-color: var(--background-color-priority-5);
	}
.Borderless {
	border: none;
	border-width: 0px;
	padding: 0;
	margin: 0;
	border-collapse: collapse;
	border-spacing: 0px;
	}
td.TextCell {
	vertical-align: top;
	/*text-align: justify;*/
	}
.FirstLineIndented {
	text-indent: 25px;
	}
.FLI {
	/*alias for FirstLineIndented*/
	text-indent: 25px;
	}
.Button_S {
	font-weight: bold;
	margin-top: 0.1em;
	margin-bottom: 0.1em;
	line-height: 1.5em;
	vertical-align: middle;
	}
.Button_S:hover {}
.Message {
	text-indent: 1em;
	margin-top: 0.3em;
	margin-bottom: 0.3em;
	font-weight: bold;
	width: 100%;
	line-height: 1.5em;
	vertical-align: middle;
	}
.TopMobileMainButton_S {
	text-indent: 1em;
	font-weight: bold;
	width: 100%;
	line-height: 1.5em;
	vertical-align: middle;
	}
.Path_element_S {
	margin-top: .05em;
	margin-left: 0.05em;
	margin-right: 0.05em;
	padding-left: .5em;
	padding-right: .5em;
	margin-bottom: .05em;
	font-weight: bold;
	vertical-align: middle;
	transform: skewx(12deg);
	}
.Path_element_content_S {
	transform: skewx(-12deg);
	}
.MainButton_S, .net-splitcells-button {
	padding-left: 1em;
	padding-right: 1em;
	margin-top: .05em;
	margin-bottom: .05em;
	font-weight: bold;
	/* `width: 100%;` is not required: in places where the effect is needed, the element already gets 100% of the width,
	 * because the button is a div and therefore `display: block;`,
	 * which kind of implies `width: 100%;`.
	 * There are places like `display: flex;`, where `width: 100%;` creates visual problems.
	 */
	line-height: 1.5em;
	display: block;
	}
.tree_name {
	margin-top: .7em;
	margin-bottom: .7em;
}
.tree {
	margin-left: 1em;
	margin-top: .7em;
	margin-bottom: .7em;
}
.tree .tree {
	margin-left: 1em;
}
.tree input:not(:checked) ~ div {
	display: none;
}
.tree input:checked ~ div {

}
.MainButton_S:hover {}
.linkButton {
	text-decoration: none;
	}
.heading_text{
	font-size: 125%;
	font-weight: bold;
	}
.net-splitcells-menu {
	vertical-align: top;
	visibility: inherit;
	display: flex;
	flex-direction: column;
	padding-bottom: 1em;
	order: 2;
	}
.splitcells-net-line-title {
	font-size: 2em;
	text-align: left;
	padding: 0.1em;
	padding-left: 0.25em;
	font-weight: bold;
	}
article h2 {
    font-size: 125%;
	font-weight: bold;
	margin-top: 3em;
	margin-bottom: 2em;
    padding-top: .5em;
    padding-right: 1em;
    padding-bottom: .5em;
    padding-left: 1em;
    margin-left: .8em;
    }
h3, .heading {
    padding-left: .4em;
    margin-top: 1em;
    margin-bottom: 1em;
    padding-right: .5em;
    }
h4 {
    padding-left: .4em;
    }
article .heading,
article h1,
article h2,
article h3,
article h4 {
	font-size: 125%;
	font-weight: normal !important;
	margin-top: 3em;
	margin-bottom: 2em;
    padding-top: .5em;
    padding-right: 1em;
    padding-bottom: .5em;
    padding-left: 1em;
	}
article h3 {
    margin-left: 1.6em;
	}
.chapter .heading {
	margin-left: .2em;
	font-size: 125%;
	font-weight: bold;
	margin-top: 3em;
	margin-bottom: 2em;
	}
.chapter .chapter .heading {
	font-size: 125%;
	font-weight: bold;
	margin-left: .8em;
	margin-top: 3em;
	margin-bottom: 2em;
	}
.chapter .chapter .chapter .heading {
	font-size: 125%;
	font-weight: bold;
	margin-left: 1.6em;
	margin-top: 3em;
	margin-bottom: 2em;
	}
.chapter .chapter .chapter .chapter .heading {
	font-size: 125%;
	font-weight: bold;
	margin-left: 2.4em;
	margin-top: 3em;
	margin-bottom: 2em;
	}
.chapter .chapter .chapter .chapter .chapter .heading {
	font-size: 125%;
	font-weight: bold;
	margin-left: 3.2em;
	margin-top: 3em;
	margin-bottom: 2em;
	}
.Text {
	font-family: var(--text-flowing-font);
	}
p:not(.NonStandard) {
	font-family: var(--text-flowing-font);
	}
article {
	width: 100%;
	}
*.hidden {
	display:none;
	}
*.highlighted {
	padding-top: .5em;
	padding-right: 1em;
	padding-bottom: .5em;
	padding-left: 1em;
	}
*.standard-margin {
	margin: .5%;
	width: 99%;
	}
*.standardborder {
	padding-top: .5em;
	padding-right: 1em;
	padding-bottom: .5em;
	padding-left: 1em;
	}
*.highlightedShortSummary {
	/* DEPRECATED */
	margin: 0em;
	padding-top: .5em;
	padding-right: 1em;
	padding-bottom: .5em;
	padding-left: 1em;
	}
*.tableStyle {
	display: block;
	/*margin-left:auto; 
	margin-right:auto;*/
	max-width: 100%;
	overflow-y: auto;
	overflow-x: auto;
	}
.table {
	display: block;
	overflow-y: auto;
	overflow-x: auto;
	border-collapse: separate;
	border-spacing: .2em;
	}
.row {
	display: table-row;
	}
.tag_cell {
	padding: .3em;
	}
.cell {
	display: table-cell;
	padding: .3em;
	}
.toc_chapter_1 {
	padding-left: .5em;
	padding-right: .5em;
	padding-top: .25em;
	padding-bottom: .25em;
	margin-left: .5em;
	margin-right: .25em;
	margin-top: .125em;
	margin-bottom: .125em;
	}
.toc_chapter_2 {
	padding-left: .5em;
	padding-right: .5em;
	padding-top: .25em;
	padding-bottom: .25em;
	margin-left: .5em;
	margin-right: .25em;
	margin-top: .125em;
	margin-bottom: .125em;
	}
.toc_chapter_3 {
	padding-left: .5em;
	padding-right: .5em;
	padding-top: .25em;
	padding-bottom: .25em;
	margin-left: .5em;
	margin-right: .25em;
	margin-top: .125em;
	margin-bottom: .125em;
	}
.toc_chapter_4 {
	padding-left: .5em;
	padding-right: .5em;
	padding-top: .25em;
	padding-bottom: .25em;
	margin-left: .5em;
	margin-right: .25em;
	margin-top: .125em;
	margin-bottom: .125em;
	}
.toc_chapter_5 {
	padding-left: .5em;
	padding-right: .5em;
	padding-top: .25em;
	padding-bottom: .25em;
	margin-left: .5em;
	margin-right: .25em;
	margin-top: .125em;
	margin-bottom: .125em;
	}
.toc_chapter_6 {	
	padding-left: .5em;
	padding-right: .5em;
	padding-top: .25em;
	padding-bottom: .25em;
	margin-left: .5em;
	margin-right: .25em;
	margin-top: .125em;
	margin-bottom: .125em;
	}
.toc_chapter_7 {
	padding-left: .5em;
	padding-right: .5em;
	padding-top: .25em;
	padding-bottom: .25em;
	margin-left: .5em;
	margin-right: .25em;
	margin-top: .125em;
	margin-bottom: .125em;
	}
.toc_chapter_8 {
	padding-left: .5em;
	padding-right: .5em;
	padding-top: .25em;
	padding-bottom: .25em;
	margin-left: .5em;
	margin-right: .25em;
	margin-top: .125em;
	margin-bottom: .125em;
	}
.toc_chapter_9 {
	padding-left: .5em;
	padding-right: .5em;
	padding-top: .25em;
	padding-bottom: .25em;
	margin-left: .5em;
	margin-right: .25em;
	margin-top: .125em;
	margin-bottom: .125em;
	}
.toc_chapter_10 {
	padding-left: .5em;
	padding-right: .5em;
	padding-top: .25em;
	padding-bottom: .25em;
	margin-left: .5em;
	margin-right: .25em;
	margin-top: .125em;
	margin-bottom: .125em;
	}
.MainButtonDescription {
	margin-top: .05em;
	margin-bottom: .05em;
	padding-top: .25em;
	padding-bottom: .25em;
	}
.premature_paragraph {
	padding-left: .5em;
	padding-right: .5em;
	}
p {
	font-family: Palatino,Palatino Linotype,Palatino LT STD,Book Antiqua,Georgia,serif;
	margin-top: 1.4em;
	margin-bottom: 1.4em;
	padding-left: 1em;
	padding-right: 1em;
	/* The shadow is reduced as much as possible, in order to reduce GUI noise. */
	box-shadow: 0em 0.1em 0.1em -0.1em var(--shadow-color-priority-3);
	}
ol p {
	font-family: Palatino,Palatino Linotype,Palatino LT STD,Book Antiqua,Georgia,serif;
	margin-top: 0em;
	margin-bottom: 0em;
	padding-left: 1em;
	padding-right: 1em;
	}
.paragraph {
    /** TODO This class is deprecated. */
	font-family: Palatino,Palatino Linotype,Palatino LT STD,Book Antiqua,Georgia,serif;
	margin-top: 1.4em;
	margin-bottom: 1.4em;
	padding-left: 1em;
	padding-right: 1em;
	}
.net-splitcells-den-paragraph {
	font-family: Palatino,Palatino Linotype,Palatino LT STD,Book Antiqua,Georgia,serif;
	padding-left: 1em;
	padding-right: 1em;
	}
.highlighted_paragraph {
	padding-left: .5em;
	padding-right: .5em;
	font-family: Palatino,Palatino Linotype,Palatino LT STD,Book Antiqua,Georgia,serif;
	}
/* dependency specific: particleground */
.pg-canvas
	{position: absolute;
	}
blockquote {
    box-shadow: 0em 0.1em 0.1em -0.1em var(--shadow-color-priority-3);
}